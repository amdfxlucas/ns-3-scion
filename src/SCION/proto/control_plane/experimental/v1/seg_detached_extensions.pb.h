// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/control_plane/experimental/v1/seg_detached_extensions.proto
// Protobuf C++ Version: 4.24.0-main

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto;
namespace proto {
namespace control_plane {
namespace experimental {
namespace v1 {
class EPICDetachedExtension;
struct EPICDetachedExtensionDefaultTypeInternal;
extern EPICDetachedExtensionDefaultTypeInternal _EPICDetachedExtension_default_instance_;
}  // namespace v1
}  // namespace experimental
}  // namespace control_plane
}  // namespace proto
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace proto {
namespace control_plane {
namespace experimental {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class EPICDetachedExtension final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.experimental.v1.EPICDetachedExtension) */ {
 public:
  inline EPICDetachedExtension() : EPICDetachedExtension(nullptr) {}
  ~EPICDetachedExtension() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EPICDetachedExtension(::google::protobuf::internal::ConstantInitialized);

  inline EPICDetachedExtension(const EPICDetachedExtension& from)
      : EPICDetachedExtension(nullptr, from) {}
  EPICDetachedExtension(EPICDetachedExtension&& from) noexcept
    : EPICDetachedExtension() {
    *this = ::std::move(from);
  }

  inline EPICDetachedExtension& operator=(const EPICDetachedExtension& from) {
    CopyFrom(from);
    return *this;
  }
  inline EPICDetachedExtension& operator=(EPICDetachedExtension&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EPICDetachedExtension& default_instance() {
    return *internal_default_instance();
  }
  static inline const EPICDetachedExtension* internal_default_instance() {
    return reinterpret_cast<const EPICDetachedExtension*>(
               &_EPICDetachedExtension_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(EPICDetachedExtension& a, EPICDetachedExtension& b) {
    a.Swap(&b);
  }
  inline void Swap(EPICDetachedExtension* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EPICDetachedExtension* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EPICDetachedExtension* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EPICDetachedExtension>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EPICDetachedExtension& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EPICDetachedExtension& from) {
    EPICDetachedExtension::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EPICDetachedExtension* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.experimental.v1.EPICDetachedExtension";
  }
  protected:
  explicit EPICDetachedExtension(::google::protobuf::Arena* arena);
  EPICDetachedExtension(::google::protobuf::Arena* arena, const EPICDetachedExtension& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAuthPeerEntriesFieldNumber = 2,
    kAuthHopEntryFieldNumber = 1,
  };
  // repeated bytes auth_peer_entries = 2;
  int auth_peer_entries_size() const;
  private:
  int _internal_auth_peer_entries_size() const;

  public:
  void clear_auth_peer_entries() ;
  const std::string& auth_peer_entries(int index) const;
  std::string* mutable_auth_peer_entries(int index);
  void set_auth_peer_entries(int index, const std::string& value);
  void set_auth_peer_entries(int index, std::string&& value);
  void set_auth_peer_entries(int index, const char* value);
  void set_auth_peer_entries(int index, const void* value, std::size_t size);
  void set_auth_peer_entries(int index, absl::string_view value);
  std::string* add_auth_peer_entries();
  void add_auth_peer_entries(const std::string& value);
  void add_auth_peer_entries(std::string&& value);
  void add_auth_peer_entries(const char* value);
  void add_auth_peer_entries(const void* value, std::size_t size);
  void add_auth_peer_entries(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& auth_peer_entries() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_auth_peer_entries();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_auth_peer_entries() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_auth_peer_entries();

  public:
  // bytes auth_hop_entry = 1;
  void clear_auth_hop_entry() ;
  const std::string& auth_hop_entry() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_auth_hop_entry(Arg_&& arg, Args_... args);
  std::string* mutable_auth_hop_entry();
  PROTOBUF_NODISCARD std::string* release_auth_hop_entry();
  void set_allocated_auth_hop_entry(std::string* value);

  private:
  const std::string& _internal_auth_hop_entry() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_auth_hop_entry(
      const std::string& value);
  std::string* _internal_mutable_auth_hop_entry();

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.experimental.v1.EPICDetachedExtension)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField<std::string> auth_peer_entries_;
    ::google::protobuf::internal::ArenaStringPtr auth_hop_entry_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// EPICDetachedExtension

// bytes auth_hop_entry = 1;
inline void EPICDetachedExtension::clear_auth_hop_entry() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.auth_hop_entry_.ClearToEmpty();
}
inline const std::string& EPICDetachedExtension::auth_hop_entry() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.experimental.v1.EPICDetachedExtension.auth_hop_entry)
  return _internal_auth_hop_entry();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EPICDetachedExtension::set_auth_hop_entry(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.auth_hop_entry_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.control_plane.experimental.v1.EPICDetachedExtension.auth_hop_entry)
}
inline std::string* EPICDetachedExtension::mutable_auth_hop_entry() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_auth_hop_entry();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.experimental.v1.EPICDetachedExtension.auth_hop_entry)
  return _s;
}
inline const std::string& EPICDetachedExtension::_internal_auth_hop_entry() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.auth_hop_entry_.Get();
}
inline void EPICDetachedExtension::_internal_set_auth_hop_entry(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.auth_hop_entry_.Set(value, GetArena());
}
inline std::string* EPICDetachedExtension::_internal_mutable_auth_hop_entry() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.auth_hop_entry_.Mutable( GetArena());
}
inline std::string* EPICDetachedExtension::release_auth_hop_entry() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.experimental.v1.EPICDetachedExtension.auth_hop_entry)
  return _impl_.auth_hop_entry_.Release();
}
inline void EPICDetachedExtension::set_allocated_auth_hop_entry(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.auth_hop_entry_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.auth_hop_entry_.IsDefault()) {
          _impl_.auth_hop_entry_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.experimental.v1.EPICDetachedExtension.auth_hop_entry)
}

// repeated bytes auth_peer_entries = 2;
inline int EPICDetachedExtension::_internal_auth_peer_entries_size() const {
  return _internal_auth_peer_entries().size();
}
inline int EPICDetachedExtension::auth_peer_entries_size() const {
  return _internal_auth_peer_entries_size();
}
inline void EPICDetachedExtension::clear_auth_peer_entries() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.auth_peer_entries_.Clear();
}
inline std::string* EPICDetachedExtension::add_auth_peer_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_auth_peer_entries()->Add();
  // @@protoc_insertion_point(field_add_mutable:proto.control_plane.experimental.v1.EPICDetachedExtension.auth_peer_entries)
  return _s;
}
inline const std::string& EPICDetachedExtension::auth_peer_entries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.experimental.v1.EPICDetachedExtension.auth_peer_entries)
  return _internal_auth_peer_entries().Get(index);
}
inline std::string* EPICDetachedExtension::mutable_auth_peer_entries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:proto.control_plane.experimental.v1.EPICDetachedExtension.auth_peer_entries)
  return _internal_mutable_auth_peer_entries()->Mutable(index);
}
inline void EPICDetachedExtension::set_auth_peer_entries(int index, const std::string& value) {
  _internal_mutable_auth_peer_entries()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:proto.control_plane.experimental.v1.EPICDetachedExtension.auth_peer_entries)
}
inline void EPICDetachedExtension::set_auth_peer_entries(int index, std::string&& value) {
  _internal_mutable_auth_peer_entries()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:proto.control_plane.experimental.v1.EPICDetachedExtension.auth_peer_entries)
}
inline void EPICDetachedExtension::set_auth_peer_entries(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_auth_peer_entries()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.control_plane.experimental.v1.EPICDetachedExtension.auth_peer_entries)
}
inline void EPICDetachedExtension::set_auth_peer_entries(int index, const void* value,
                              std::size_t size) {
  _internal_mutable_auth_peer_entries()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.control_plane.experimental.v1.EPICDetachedExtension.auth_peer_entries)
}
inline void EPICDetachedExtension::set_auth_peer_entries(int index, absl::string_view value) {
  _internal_mutable_auth_peer_entries()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:proto.control_plane.experimental.v1.EPICDetachedExtension.auth_peer_entries)
}
inline void EPICDetachedExtension::add_auth_peer_entries(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_auth_peer_entries()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.control_plane.experimental.v1.EPICDetachedExtension.auth_peer_entries)
}
inline void EPICDetachedExtension::add_auth_peer_entries(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_auth_peer_entries()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.control_plane.experimental.v1.EPICDetachedExtension.auth_peer_entries)
}
inline void EPICDetachedExtension::add_auth_peer_entries(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_auth_peer_entries()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.control_plane.experimental.v1.EPICDetachedExtension.auth_peer_entries)
}
inline void EPICDetachedExtension::add_auth_peer_entries(const void* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_auth_peer_entries()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.control_plane.experimental.v1.EPICDetachedExtension.auth_peer_entries)
}
inline void EPICDetachedExtension::add_auth_peer_entries(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_auth_peer_entries()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:proto.control_plane.experimental.v1.EPICDetachedExtension.auth_peer_entries)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
EPICDetachedExtension::auth_peer_entries() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:proto.control_plane.experimental.v1.EPICDetachedExtension.auth_peer_entries)
  return _internal_auth_peer_entries();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
EPICDetachedExtension::mutable_auth_peer_entries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:proto.control_plane.experimental.v1.EPICDetachedExtension.auth_peer_entries)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_auth_peer_entries();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
EPICDetachedExtension::_internal_auth_peer_entries() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.auth_peer_entries_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
EPICDetachedExtension::_internal_mutable_auth_peer_entries() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.auth_peer_entries_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace experimental
}  // namespace control_plane
}  // namespace proto


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto_2epb_2eh
