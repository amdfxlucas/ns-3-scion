// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/control_plane/experimental/v1/seg_detached_extensions.proto

#include "proto/control_plane/experimental/v1/seg_detached_extensions.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace proto {
namespace control_plane {
namespace experimental {
namespace v1 {

inline constexpr EPICDetachedExtension::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : auth_peer_entries_{},
        auth_hop_entry_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EPICDetachedExtension::EPICDetachedExtension(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EPICDetachedExtensionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EPICDetachedExtensionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EPICDetachedExtensionDefaultTypeInternal() {}
  union {
    EPICDetachedExtension _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EPICDetachedExtensionDefaultTypeInternal _EPICDetachedExtension_default_instance_;
}  // namespace v1
}  // namespace experimental
}  // namespace control_plane
}  // namespace proto
static ::_pb::Metadata file_level_metadata_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto[1];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto = nullptr;
const ::uint32_t TableStruct_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::experimental::v1::EPICDetachedExtension, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::experimental::v1::EPICDetachedExtension, _impl_.auth_hop_entry_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::experimental::v1::EPICDetachedExtension, _impl_.auth_peer_entries_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::proto::control_plane::experimental::v1::EPICDetachedExtension)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::proto::control_plane::experimental::v1::_EPICDetachedExtension_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\nAproto/control_plane/experimental/v1/se"
    "g_detached_extensions.proto\022#proto.contr"
    "ol_plane.experimental.v1\"J\n\025EPICDetached"
    "Extension\022\026\n\016auth_hop_entry\030\001 \001(\014\022\031\n\021aut"
    "h_peer_entries\030\002 \003(\014BBZ@github.com/scion"
    "proto/scion/pkg/proto/control_plane/expe"
    "rimentalb\006proto3"
};
static ::absl::once_flag descriptor_table_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto = {
    false,
    false,
    256,
    descriptor_table_protodef_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto,
    "proto/control_plane/experimental/v1/seg_detached_extensions.proto",
    &descriptor_table_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto::offsets,
    file_level_metadata_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto,
    file_level_enum_descriptors_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto,
    file_level_service_descriptors_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto_getter() {
  return &descriptor_table_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto(&descriptor_table_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto);
namespace proto {
namespace control_plane {
namespace experimental {
namespace v1 {
// ===================================================================

class EPICDetachedExtension::_Internal {
 public:
};

EPICDetachedExtension::EPICDetachedExtension(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.control_plane.experimental.v1.EPICDetachedExtension)
}
inline PROTOBUF_NDEBUG_INLINE EPICDetachedExtension::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : auth_peer_entries_{visibility, arena, from.auth_peer_entries_},
        auth_hop_entry_(arena, from.auth_hop_entry_),
        _cached_size_{0} {}

EPICDetachedExtension::EPICDetachedExtension(
    ::google::protobuf::Arena* arena,
    const EPICDetachedExtension& from)
    : ::google::protobuf::Message(arena) {
  EPICDetachedExtension* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:proto.control_plane.experimental.v1.EPICDetachedExtension)
}
inline PROTOBUF_NDEBUG_INLINE EPICDetachedExtension::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : auth_peer_entries_{visibility, arena},
        auth_hop_entry_(arena),
        _cached_size_{0} {}

inline void EPICDetachedExtension::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EPICDetachedExtension::~EPICDetachedExtension() {
  // @@protoc_insertion_point(destructor:proto.control_plane.experimental.v1.EPICDetachedExtension)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EPICDetachedExtension::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.auth_hop_entry_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void EPICDetachedExtension::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.control_plane.experimental.v1.EPICDetachedExtension)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.auth_peer_entries_.Clear();
  _impl_.auth_hop_entry_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EPICDetachedExtension::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> EPICDetachedExtension::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_EPICDetachedExtension_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated bytes auth_peer_entries = 2;
    {::_pbi::TcParser::FastBR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EPICDetachedExtension, _impl_.auth_peer_entries_)}},
    // bytes auth_hop_entry = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EPICDetachedExtension, _impl_.auth_hop_entry_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes auth_hop_entry = 1;
    {PROTOBUF_FIELD_OFFSET(EPICDetachedExtension, _impl_.auth_hop_entry_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated bytes auth_peer_entries = 2;
    {PROTOBUF_FIELD_OFFSET(EPICDetachedExtension, _impl_.auth_peer_entries_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* EPICDetachedExtension::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.control_plane.experimental.v1.EPICDetachedExtension)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes auth_hop_entry = 1;
  if (!this->_internal_auth_hop_entry().empty()) {
    const std::string& _s = this->_internal_auth_hop_entry();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // repeated bytes auth_peer_entries = 2;
  for (int i = 0, n = this->_internal_auth_peer_entries_size(); i < n; ++i) {
    const auto& s = this->_internal_auth_peer_entries().Get(i);
    target = stream->WriteBytes(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.control_plane.experimental.v1.EPICDetachedExtension)
  return target;
}

::size_t EPICDetachedExtension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.control_plane.experimental.v1.EPICDetachedExtension)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes auth_peer_entries = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_auth_peer_entries().size());
  for (int i = 0, n = _internal_auth_peer_entries().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_auth_peer_entries().Get(i));
  }
  // bytes auth_hop_entry = 1;
  if (!this->_internal_auth_hop_entry().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_auth_hop_entry());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EPICDetachedExtension::_class_data_ = {
    EPICDetachedExtension::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* EPICDetachedExtension::GetClassData() const {
  return &_class_data_;
}

void EPICDetachedExtension::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EPICDetachedExtension*>(&to_msg);
  auto& from = static_cast<const EPICDetachedExtension&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.control_plane.experimental.v1.EPICDetachedExtension)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_auth_peer_entries()->MergeFrom(from._internal_auth_peer_entries());
  if (!from._internal_auth_hop_entry().empty()) {
    _this->_internal_set_auth_hop_entry(from._internal_auth_hop_entry());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EPICDetachedExtension::CopyFrom(const EPICDetachedExtension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.control_plane.experimental.v1.EPICDetachedExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EPICDetachedExtension::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* EPICDetachedExtension::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void EPICDetachedExtension::InternalSwap(EPICDetachedExtension* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.auth_peer_entries_.InternalSwap(&other->_impl_.auth_peer_entries_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.auth_hop_entry_, &other->_impl_.auth_hop_entry_, arena);
}

::google::protobuf::Metadata EPICDetachedExtension::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto_getter, &descriptor_table_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto_once,
      file_level_metadata_proto_2fcontrol_5fplane_2fexperimental_2fv1_2fseg_5fdetached_5fextensions_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace experimental
}  // namespace control_plane
}  // namespace proto
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
