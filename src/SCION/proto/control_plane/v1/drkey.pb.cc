// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/control_plane/v1/drkey.proto

#include "proto/control_plane/v1/drkey.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace proto {
namespace control_plane {
namespace v1 {

inline constexpr DRKeySecretValueResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        epoch_begin_{nullptr},
        epoch_end_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DRKeySecretValueResponse::DRKeySecretValueResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DRKeySecretValueResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DRKeySecretValueResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DRKeySecretValueResponseDefaultTypeInternal() {}
  union {
    DRKeySecretValueResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DRKeySecretValueResponseDefaultTypeInternal _DRKeySecretValueResponse_default_instance_;

inline constexpr DRKeySecretValueRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        val_time_{nullptr},
        protocol_id_{static_cast< ::proto::drkey::v1::Protocol >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR DRKeySecretValueRequest::DRKeySecretValueRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DRKeySecretValueRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DRKeySecretValueRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DRKeySecretValueRequestDefaultTypeInternal() {}
  union {
    DRKeySecretValueRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DRKeySecretValueRequestDefaultTypeInternal _DRKeySecretValueRequest_default_instance_;

inline constexpr DRKeyLevel1Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        epoch_begin_{nullptr},
        epoch_end_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DRKeyLevel1Response::DRKeyLevel1Response(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DRKeyLevel1ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DRKeyLevel1ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DRKeyLevel1ResponseDefaultTypeInternal() {}
  union {
    DRKeyLevel1Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DRKeyLevel1ResponseDefaultTypeInternal _DRKeyLevel1Response_default_instance_;

inline constexpr DRKeyLevel1Request::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        val_time_{nullptr},
        protocol_id_{static_cast< ::proto::drkey::v1::Protocol >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR DRKeyLevel1Request::DRKeyLevel1Request(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DRKeyLevel1RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DRKeyLevel1RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DRKeyLevel1RequestDefaultTypeInternal() {}
  union {
    DRKeyLevel1Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DRKeyLevel1RequestDefaultTypeInternal _DRKeyLevel1Request_default_instance_;

inline constexpr DRKeyIntraLevel1Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        epoch_begin_{nullptr},
        epoch_end_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DRKeyIntraLevel1Response::DRKeyIntraLevel1Response(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DRKeyIntraLevel1ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DRKeyIntraLevel1ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DRKeyIntraLevel1ResponseDefaultTypeInternal() {}
  union {
    DRKeyIntraLevel1Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DRKeyIntraLevel1ResponseDefaultTypeInternal _DRKeyIntraLevel1Response_default_instance_;

inline constexpr DRKeyIntraLevel1Request::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        val_time_{nullptr},
        src_ia_{::uint64_t{0u}},
        dst_ia_{::uint64_t{0u}},
        protocol_id_{static_cast< ::proto::drkey::v1::Protocol >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR DRKeyIntraLevel1Request::DRKeyIntraLevel1Request(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DRKeyIntraLevel1RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DRKeyIntraLevel1RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DRKeyIntraLevel1RequestDefaultTypeInternal() {}
  union {
    DRKeyIntraLevel1Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DRKeyIntraLevel1RequestDefaultTypeInternal _DRKeyIntraLevel1Request_default_instance_;

inline constexpr DRKeyHostHostResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        epoch_begin_{nullptr},
        epoch_end_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DRKeyHostHostResponse::DRKeyHostHostResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DRKeyHostHostResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DRKeyHostHostResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DRKeyHostHostResponseDefaultTypeInternal() {}
  union {
    DRKeyHostHostResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DRKeyHostHostResponseDefaultTypeInternal _DRKeyHostHostResponse_default_instance_;

inline constexpr DRKeyHostHostRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        src_host_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dst_host_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        val_time_{nullptr},
        src_ia_{::uint64_t{0u}},
        dst_ia_{::uint64_t{0u}},
        protocol_id_{static_cast< ::proto::drkey::v1::Protocol >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR DRKeyHostHostRequest::DRKeyHostHostRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DRKeyHostHostRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DRKeyHostHostRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DRKeyHostHostRequestDefaultTypeInternal() {}
  union {
    DRKeyHostHostRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DRKeyHostHostRequestDefaultTypeInternal _DRKeyHostHostRequest_default_instance_;

inline constexpr DRKeyHostASResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        epoch_begin_{nullptr},
        epoch_end_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DRKeyHostASResponse::DRKeyHostASResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DRKeyHostASResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DRKeyHostASResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DRKeyHostASResponseDefaultTypeInternal() {}
  union {
    DRKeyHostASResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DRKeyHostASResponseDefaultTypeInternal _DRKeyHostASResponse_default_instance_;

inline constexpr DRKeyHostASRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        src_host_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        val_time_{nullptr},
        src_ia_{::uint64_t{0u}},
        dst_ia_{::uint64_t{0u}},
        protocol_id_{static_cast< ::proto::drkey::v1::Protocol >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR DRKeyHostASRequest::DRKeyHostASRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DRKeyHostASRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DRKeyHostASRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DRKeyHostASRequestDefaultTypeInternal() {}
  union {
    DRKeyHostASRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DRKeyHostASRequestDefaultTypeInternal _DRKeyHostASRequest_default_instance_;

inline constexpr DRKeyASHostResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        epoch_begin_{nullptr},
        epoch_end_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DRKeyASHostResponse::DRKeyASHostResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DRKeyASHostResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DRKeyASHostResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DRKeyASHostResponseDefaultTypeInternal() {}
  union {
    DRKeyASHostResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DRKeyASHostResponseDefaultTypeInternal _DRKeyASHostResponse_default_instance_;

inline constexpr DRKeyASHostRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        dst_host_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        val_time_{nullptr},
        src_ia_{::uint64_t{0u}},
        dst_ia_{::uint64_t{0u}},
        protocol_id_{static_cast< ::proto::drkey::v1::Protocol >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR DRKeyASHostRequest::DRKeyASHostRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DRKeyASHostRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DRKeyASHostRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DRKeyASHostRequestDefaultTypeInternal() {}
  union {
    DRKeyASHostRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DRKeyASHostRequestDefaultTypeInternal _DRKeyASHostRequest_default_instance_;
}  // namespace v1
}  // namespace control_plane
}  // namespace proto
static ::_pb::Metadata file_level_metadata_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto[12];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto = nullptr;
const ::uint32_t TableStruct_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeySecretValueRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeySecretValueRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeySecretValueRequest, _impl_.val_time_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeySecretValueRequest, _impl_.protocol_id_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeySecretValueResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeySecretValueResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeySecretValueResponse, _impl_.epoch_begin_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeySecretValueResponse, _impl_.epoch_end_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeySecretValueResponse, _impl_.key_),
    0,
    1,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyLevel1Request, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyLevel1Request, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyLevel1Request, _impl_.val_time_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyLevel1Request, _impl_.protocol_id_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyLevel1Response, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyLevel1Response, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyLevel1Response, _impl_.epoch_begin_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyLevel1Response, _impl_.epoch_end_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyLevel1Response, _impl_.key_),
    0,
    1,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyIntraLevel1Request, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyIntraLevel1Request, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyIntraLevel1Request, _impl_.val_time_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyIntraLevel1Request, _impl_.protocol_id_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyIntraLevel1Request, _impl_.src_ia_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyIntraLevel1Request, _impl_.dst_ia_),
    0,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyIntraLevel1Response, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyIntraLevel1Response, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyIntraLevel1Response, _impl_.epoch_begin_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyIntraLevel1Response, _impl_.epoch_end_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyIntraLevel1Response, _impl_.key_),
    0,
    1,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyHostASRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyHostASRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyHostASRequest, _impl_.val_time_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyHostASRequest, _impl_.protocol_id_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyHostASRequest, _impl_.src_ia_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyHostASRequest, _impl_.dst_ia_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyHostASRequest, _impl_.src_host_),
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyHostASResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyHostASResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyHostASResponse, _impl_.epoch_begin_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyHostASResponse, _impl_.epoch_end_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyHostASResponse, _impl_.key_),
    0,
    1,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyASHostRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyASHostRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyASHostRequest, _impl_.val_time_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyASHostRequest, _impl_.protocol_id_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyASHostRequest, _impl_.src_ia_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyASHostRequest, _impl_.dst_ia_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyASHostRequest, _impl_.dst_host_),
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyASHostResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyASHostResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyASHostResponse, _impl_.epoch_begin_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyASHostResponse, _impl_.epoch_end_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyASHostResponse, _impl_.key_),
    0,
    1,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyHostHostRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyHostHostRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyHostHostRequest, _impl_.val_time_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyHostHostRequest, _impl_.protocol_id_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyHostHostRequest, _impl_.src_ia_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyHostHostRequest, _impl_.dst_ia_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyHostHostRequest, _impl_.src_host_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyHostHostRequest, _impl_.dst_host_),
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyHostHostResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyHostHostResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyHostHostResponse, _impl_.epoch_begin_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyHostHostResponse, _impl_.epoch_end_),
    PROTOBUF_FIELD_OFFSET(::proto::control_plane::v1::DRKeyHostHostResponse, _impl_.key_),
    0,
    1,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::proto::control_plane::v1::DRKeySecretValueRequest)},
        {12, 23, -1, sizeof(::proto::control_plane::v1::DRKeySecretValueResponse)},
        {26, 36, -1, sizeof(::proto::control_plane::v1::DRKeyLevel1Request)},
        {38, 49, -1, sizeof(::proto::control_plane::v1::DRKeyLevel1Response)},
        {52, 64, -1, sizeof(::proto::control_plane::v1::DRKeyIntraLevel1Request)},
        {68, 79, -1, sizeof(::proto::control_plane::v1::DRKeyIntraLevel1Response)},
        {82, 95, -1, sizeof(::proto::control_plane::v1::DRKeyHostASRequest)},
        {100, 111, -1, sizeof(::proto::control_plane::v1::DRKeyHostASResponse)},
        {114, 127, -1, sizeof(::proto::control_plane::v1::DRKeyASHostRequest)},
        {132, 143, -1, sizeof(::proto::control_plane::v1::DRKeyASHostResponse)},
        {146, 160, -1, sizeof(::proto::control_plane::v1::DRKeyHostHostRequest)},
        {166, 177, -1, sizeof(::proto::control_plane::v1::DRKeyHostHostResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::proto::control_plane::v1::_DRKeySecretValueRequest_default_instance_._instance,
    &::proto::control_plane::v1::_DRKeySecretValueResponse_default_instance_._instance,
    &::proto::control_plane::v1::_DRKeyLevel1Request_default_instance_._instance,
    &::proto::control_plane::v1::_DRKeyLevel1Response_default_instance_._instance,
    &::proto::control_plane::v1::_DRKeyIntraLevel1Request_default_instance_._instance,
    &::proto::control_plane::v1::_DRKeyIntraLevel1Response_default_instance_._instance,
    &::proto::control_plane::v1::_DRKeyHostASRequest_default_instance_._instance,
    &::proto::control_plane::v1::_DRKeyHostASResponse_default_instance_._instance,
    &::proto::control_plane::v1::_DRKeyASHostRequest_default_instance_._instance,
    &::proto::control_plane::v1::_DRKeyASHostResponse_default_instance_._instance,
    &::proto::control_plane::v1::_DRKeyHostHostRequest_default_instance_._instance,
    &::proto::control_plane::v1::_DRKeyHostHostResponse_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\"proto/control_plane/v1/drkey.proto\022\026pr"
    "oto.control_plane.v1\032\032proto/drkey/v1/drk"
    "ey.proto\032\037google/protobuf/timestamp.prot"
    "o\"v\n\027DRKeySecretValueRequest\022,\n\010val_time"
    "\030\001 \001(\0132\032.google.protobuf.Timestamp\022-\n\013pr"
    "otocol_id\030\002 \001(\0162\030.proto.drkey.v1.Protoco"
    "l\"\207\001\n\030DRKeySecretValueResponse\022/\n\013epoch_"
    "begin\030\001 \001(\0132\032.google.protobuf.Timestamp\022"
    "-\n\tepoch_end\030\002 \001(\0132\032.google.protobuf.Tim"
    "estamp\022\013\n\003key\030\003 \001(\014\"q\n\022DRKeyLevel1Reques"
    "t\022,\n\010val_time\030\001 \001(\0132\032.google.protobuf.Ti"
    "mestamp\022-\n\013protocol_id\030\002 \001(\0162\030.proto.drk"
    "ey.v1.Protocol\"\202\001\n\023DRKeyLevel1Response\022/"
    "\n\013epoch_begin\030\001 \001(\0132\032.google.protobuf.Ti"
    "mestamp\022-\n\tepoch_end\030\002 \001(\0132\032.google.prot"
    "obuf.Timestamp\022\013\n\003key\030\003 \001(\014\"\226\001\n\027DRKeyInt"
    "raLevel1Request\022,\n\010val_time\030\001 \001(\0132\032.goog"
    "le.protobuf.Timestamp\022-\n\013protocol_id\030\002 \001"
    "(\0162\030.proto.drkey.v1.Protocol\022\016\n\006src_ia\030\003"
    " \001(\004\022\016\n\006dst_ia\030\004 \001(\004\"\207\001\n\030DRKeyIntraLevel"
    "1Response\022/\n\013epoch_begin\030\001 \001(\0132\032.google."
    "protobuf.Timestamp\022-\n\tepoch_end\030\002 \001(\0132\032."
    "google.protobuf.Timestamp\022\013\n\003key\030\003 \001(\014\"\243"
    "\001\n\022DRKeyHostASRequest\022,\n\010val_time\030\001 \001(\0132"
    "\032.google.protobuf.Timestamp\022-\n\013protocol_"
    "id\030\002 \001(\0162\030.proto.drkey.v1.Protocol\022\016\n\006sr"
    "c_ia\030\003 \001(\004\022\016\n\006dst_ia\030\004 \001(\004\022\020\n\010src_host\030\005"
    " \001(\t\"\202\001\n\023DRKeyHostASResponse\022/\n\013epoch_be"
    "gin\030\001 \001(\0132\032.google.protobuf.Timestamp\022-\n"
    "\tepoch_end\030\002 \001(\0132\032.google.protobuf.Times"
    "tamp\022\013\n\003key\030\003 \001(\014\"\243\001\n\022DRKeyASHostRequest"
    "\022,\n\010val_time\030\001 \001(\0132\032.google.protobuf.Tim"
    "estamp\022-\n\013protocol_id\030\002 \001(\0162\030.proto.drke"
    "y.v1.Protocol\022\016\n\006src_ia\030\003 \001(\004\022\016\n\006dst_ia\030"
    "\004 \001(\004\022\020\n\010dst_host\030\005 \001(\t\"\202\001\n\023DRKeyASHostR"
    "esponse\022/\n\013epoch_begin\030\001 \001(\0132\032.google.pr"
    "otobuf.Timestamp\022-\n\tepoch_end\030\002 \001(\0132\032.go"
    "ogle.protobuf.Timestamp\022\013\n\003key\030\003 \001(\014\"\267\001\n"
    "\024DRKeyHostHostRequest\022,\n\010val_time\030\001 \001(\0132"
    "\032.google.protobuf.Timestamp\022-\n\013protocol_"
    "id\030\002 \001(\0162\030.proto.drkey.v1.Protocol\022\016\n\006sr"
    "c_ia\030\003 \001(\004\022\016\n\006dst_ia\030\004 \001(\004\022\020\n\010src_host\030\005"
    " \001(\t\022\020\n\010dst_host\030\006 \001(\t\"\204\001\n\025DRKeyHostHost"
    "Response\022/\n\013epoch_begin\030\001 \001(\0132\032.google.p"
    "rotobuf.Timestamp\022-\n\tepoch_end\030\002 \001(\0132\032.g"
    "oogle.protobuf.Timestamp\022\013\n\003key\030\003 \001(\0142}\n"
    "\021DRKeyInterService\022h\n\013DRKeyLevel1\022*.prot"
    "o.control_plane.v1.DRKeyLevel1Request\032+."
    "proto.control_plane.v1.DRKeyLevel1Respon"
    "se\"\0002\311\004\n\021DRKeyIntraService\022w\n\020DRKeyIntra"
    "Level1\022/.proto.control_plane.v1.DRKeyInt"
    "raLevel1Request\0320.proto.control_plane.v1"
    ".DRKeyIntraLevel1Response\"\000\022h\n\013DRKeyASHo"
    "st\022*.proto.control_plane.v1.DRKeyASHostR"
    "equest\032+.proto.control_plane.v1.DRKeyASH"
    "ostResponse\"\000\022h\n\013DRKeyHostAS\022*.proto.con"
    "trol_plane.v1.DRKeyHostASRequest\032+.proto"
    ".control_plane.v1.DRKeyHostASResponse\"\000\022"
    "n\n\rDRKeyHostHost\022,.proto.control_plane.v"
    "1.DRKeyHostHostRequest\032-.proto.control_p"
    "lane.v1.DRKeyHostHostResponse\"\000\022w\n\020DRKey"
    "SecretValue\022/.proto.control_plane.v1.DRK"
    "eySecretValueRequest\0320.proto.control_pla"
    "ne.v1.DRKeySecretValueResponse\"\000B5Z3gith"
    "ub.com/scionproto/scion/pkg/proto/contro"
    "l_planeb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_deps[2] =
    {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
        &::descriptor_table_proto_2fdrkey_2fv1_2fdrkey_2eproto,
};
static ::absl::once_flag descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto = {
    false,
    false,
    2615,
    descriptor_table_protodef_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto,
    "proto/control_plane/v1/drkey.proto",
    &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_once,
    descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_deps,
    2,
    12,
    schemas,
    file_default_instances,
    TableStruct_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto::offsets,
    file_level_metadata_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto,
    file_level_enum_descriptors_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto,
    file_level_service_descriptors_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_getter() {
  return &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto(&descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto);
namespace proto {
namespace control_plane {
namespace v1 {
// ===================================================================

class DRKeySecretValueRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<DRKeySecretValueRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DRKeySecretValueRequest, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& val_time(const DRKeySecretValueRequest* msg);
  static void set_has_val_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& DRKeySecretValueRequest::_Internal::val_time(const DRKeySecretValueRequest* msg) {
  return *msg->_impl_.val_time_;
}
void DRKeySecretValueRequest::clear_val_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.val_time_ != nullptr) _impl_.val_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DRKeySecretValueRequest::DRKeySecretValueRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.control_plane.v1.DRKeySecretValueRequest)
}
inline PROTOBUF_NDEBUG_INLINE DRKeySecretValueRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DRKeySecretValueRequest::DRKeySecretValueRequest(
    ::google::protobuf::Arena* arena,
    const DRKeySecretValueRequest& from)
    : ::google::protobuf::Message(arena) {
  DRKeySecretValueRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.val_time_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.val_time_)
                : nullptr;
  _impl_.protocol_id_ = from._impl_.protocol_id_;

  // @@protoc_insertion_point(copy_constructor:proto.control_plane.v1.DRKeySecretValueRequest)
}
inline PROTOBUF_NDEBUG_INLINE DRKeySecretValueRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DRKeySecretValueRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, val_time_),
           0,
           offsetof(Impl_, protocol_id_) -
               offsetof(Impl_, val_time_) +
               sizeof(Impl_::protocol_id_));
}
DRKeySecretValueRequest::~DRKeySecretValueRequest() {
  // @@protoc_insertion_point(destructor:proto.control_plane.v1.DRKeySecretValueRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DRKeySecretValueRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete _impl_.val_time_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DRKeySecretValueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.control_plane.v1.DRKeySecretValueRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.val_time_ != nullptr);
    _impl_.val_time_->Clear();
  }
  _impl_.protocol_id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DRKeySecretValueRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> DRKeySecretValueRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DRKeySecretValueRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DRKeySecretValueRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .proto.drkey.v1.Protocol protocol_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DRKeySecretValueRequest, _impl_.protocol_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DRKeySecretValueRequest, _impl_.protocol_id_)}},
    // .google.protobuf.Timestamp val_time = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DRKeySecretValueRequest, _impl_.val_time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp val_time = 1;
    {PROTOBUF_FIELD_OFFSET(DRKeySecretValueRequest, _impl_.val_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .proto.drkey.v1.Protocol protocol_id = 2;
    {PROTOBUF_FIELD_OFFSET(DRKeySecretValueRequest, _impl_.protocol_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

::uint8_t* DRKeySecretValueRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.control_plane.v1.DRKeySecretValueRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp val_time = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::val_time(this),
        _Internal::val_time(this).GetCachedSize(), target, stream);
  }

  // .proto.drkey.v1.Protocol protocol_id = 2;
  if (this->_internal_protocol_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_protocol_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.control_plane.v1.DRKeySecretValueRequest)
  return target;
}

::size_t DRKeySecretValueRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.control_plane.v1.DRKeySecretValueRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp val_time = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.val_time_);
  }

  // .proto.drkey.v1.Protocol protocol_id = 2;
  if (this->_internal_protocol_id() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_protocol_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DRKeySecretValueRequest::_class_data_ = {
    DRKeySecretValueRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DRKeySecretValueRequest::GetClassData() const {
  return &_class_data_;
}

void DRKeySecretValueRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DRKeySecretValueRequest*>(&to_msg);
  auto& from = static_cast<const DRKeySecretValueRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.control_plane.v1.DRKeySecretValueRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_val_time()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_val_time());
  }
  if (from._internal_protocol_id() != 0) {
    _this->_internal_set_protocol_id(from._internal_protocol_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DRKeySecretValueRequest::CopyFrom(const DRKeySecretValueRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.control_plane.v1.DRKeySecretValueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DRKeySecretValueRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DRKeySecretValueRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DRKeySecretValueRequest::InternalSwap(DRKeySecretValueRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DRKeySecretValueRequest, _impl_.protocol_id_)
      + sizeof(DRKeySecretValueRequest::_impl_.protocol_id_)
      - PROTOBUF_FIELD_OFFSET(DRKeySecretValueRequest, _impl_.val_time_)>(
          reinterpret_cast<char*>(&_impl_.val_time_),
          reinterpret_cast<char*>(&other->_impl_.val_time_));
}

::google::protobuf::Metadata DRKeySecretValueRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_getter, &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_once,
      file_level_metadata_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto[0]);
}
// ===================================================================

class DRKeySecretValueResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DRKeySecretValueResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DRKeySecretValueResponse, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& epoch_begin(const DRKeySecretValueResponse* msg);
  static void set_has_epoch_begin(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Timestamp& epoch_end(const DRKeySecretValueResponse* msg);
  static void set_has_epoch_end(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::google::protobuf::Timestamp& DRKeySecretValueResponse::_Internal::epoch_begin(const DRKeySecretValueResponse* msg) {
  return *msg->_impl_.epoch_begin_;
}
const ::google::protobuf::Timestamp& DRKeySecretValueResponse::_Internal::epoch_end(const DRKeySecretValueResponse* msg) {
  return *msg->_impl_.epoch_end_;
}
void DRKeySecretValueResponse::clear_epoch_begin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.epoch_begin_ != nullptr) _impl_.epoch_begin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void DRKeySecretValueResponse::clear_epoch_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.epoch_end_ != nullptr) _impl_.epoch_end_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
DRKeySecretValueResponse::DRKeySecretValueResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.control_plane.v1.DRKeySecretValueResponse)
}
inline PROTOBUF_NDEBUG_INLINE DRKeySecretValueResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        key_(arena, from.key_) {}

DRKeySecretValueResponse::DRKeySecretValueResponse(
    ::google::protobuf::Arena* arena,
    const DRKeySecretValueResponse& from)
    : ::google::protobuf::Message(arena) {
  DRKeySecretValueResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.epoch_begin_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.epoch_begin_)
                : nullptr;
  _impl_.epoch_end_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.epoch_end_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:proto.control_plane.v1.DRKeySecretValueResponse)
}
inline PROTOBUF_NDEBUG_INLINE DRKeySecretValueResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        key_(arena) {}

inline void DRKeySecretValueResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, epoch_begin_),
           0,
           offsetof(Impl_, epoch_end_) -
               offsetof(Impl_, epoch_begin_) +
               sizeof(Impl_::epoch_end_));
}
DRKeySecretValueResponse::~DRKeySecretValueResponse() {
  // @@protoc_insertion_point(destructor:proto.control_plane.v1.DRKeySecretValueResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DRKeySecretValueResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.key_.Destroy();
  if (this != internal_default_instance()) delete _impl_.epoch_begin_;
  if (this != internal_default_instance()) delete _impl_.epoch_end_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DRKeySecretValueResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.control_plane.v1.DRKeySecretValueResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.epoch_begin_ != nullptr);
      _impl_.epoch_begin_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.epoch_end_ != nullptr);
      _impl_.epoch_end_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DRKeySecretValueResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> DRKeySecretValueResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DRKeySecretValueResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DRKeySecretValueResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp epoch_begin = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DRKeySecretValueResponse, _impl_.epoch_begin_)}},
    // .google.protobuf.Timestamp epoch_end = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(DRKeySecretValueResponse, _impl_.epoch_end_)}},
    // bytes key = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DRKeySecretValueResponse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp epoch_begin = 1;
    {PROTOBUF_FIELD_OFFSET(DRKeySecretValueResponse, _impl_.epoch_begin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp epoch_end = 2;
    {PROTOBUF_FIELD_OFFSET(DRKeySecretValueResponse, _impl_.epoch_end_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes key = 3;
    {PROTOBUF_FIELD_OFFSET(DRKeySecretValueResponse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

::uint8_t* DRKeySecretValueResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.control_plane.v1.DRKeySecretValueResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp epoch_begin = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::epoch_begin(this),
        _Internal::epoch_begin(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp epoch_end = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::epoch_end(this),
        _Internal::epoch_end(this).GetCachedSize(), target, stream);
  }

  // bytes key = 3;
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.control_plane.v1.DRKeySecretValueResponse)
  return target;
}

::size_t DRKeySecretValueResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.control_plane.v1.DRKeySecretValueResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes key = 3;
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_key());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Timestamp epoch_begin = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.epoch_begin_);
    }

    // .google.protobuf.Timestamp epoch_end = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.epoch_end_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DRKeySecretValueResponse::_class_data_ = {
    DRKeySecretValueResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DRKeySecretValueResponse::GetClassData() const {
  return &_class_data_;
}

void DRKeySecretValueResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DRKeySecretValueResponse*>(&to_msg);
  auto& from = static_cast<const DRKeySecretValueResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.control_plane.v1.DRKeySecretValueResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_epoch_begin()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_epoch_begin());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_epoch_end()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_epoch_end());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DRKeySecretValueResponse::CopyFrom(const DRKeySecretValueResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.control_plane.v1.DRKeySecretValueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DRKeySecretValueResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DRKeySecretValueResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DRKeySecretValueResponse::InternalSwap(DRKeySecretValueResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DRKeySecretValueResponse, _impl_.epoch_end_)
      + sizeof(DRKeySecretValueResponse::_impl_.epoch_end_)
      - PROTOBUF_FIELD_OFFSET(DRKeySecretValueResponse, _impl_.epoch_begin_)>(
          reinterpret_cast<char*>(&_impl_.epoch_begin_),
          reinterpret_cast<char*>(&other->_impl_.epoch_begin_));
}

::google::protobuf::Metadata DRKeySecretValueResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_getter, &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_once,
      file_level_metadata_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto[1]);
}
// ===================================================================

class DRKeyLevel1Request::_Internal {
 public:
  using HasBits = decltype(std::declval<DRKeyLevel1Request>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DRKeyLevel1Request, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& val_time(const DRKeyLevel1Request* msg);
  static void set_has_val_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& DRKeyLevel1Request::_Internal::val_time(const DRKeyLevel1Request* msg) {
  return *msg->_impl_.val_time_;
}
void DRKeyLevel1Request::clear_val_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.val_time_ != nullptr) _impl_.val_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DRKeyLevel1Request::DRKeyLevel1Request(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.control_plane.v1.DRKeyLevel1Request)
}
inline PROTOBUF_NDEBUG_INLINE DRKeyLevel1Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DRKeyLevel1Request::DRKeyLevel1Request(
    ::google::protobuf::Arena* arena,
    const DRKeyLevel1Request& from)
    : ::google::protobuf::Message(arena) {
  DRKeyLevel1Request* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.val_time_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.val_time_)
                : nullptr;
  _impl_.protocol_id_ = from._impl_.protocol_id_;

  // @@protoc_insertion_point(copy_constructor:proto.control_plane.v1.DRKeyLevel1Request)
}
inline PROTOBUF_NDEBUG_INLINE DRKeyLevel1Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DRKeyLevel1Request::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, val_time_),
           0,
           offsetof(Impl_, protocol_id_) -
               offsetof(Impl_, val_time_) +
               sizeof(Impl_::protocol_id_));
}
DRKeyLevel1Request::~DRKeyLevel1Request() {
  // @@protoc_insertion_point(destructor:proto.control_plane.v1.DRKeyLevel1Request)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DRKeyLevel1Request::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete _impl_.val_time_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DRKeyLevel1Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.control_plane.v1.DRKeyLevel1Request)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.val_time_ != nullptr);
    _impl_.val_time_->Clear();
  }
  _impl_.protocol_id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DRKeyLevel1Request::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> DRKeyLevel1Request::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DRKeyLevel1Request, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DRKeyLevel1Request_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .proto.drkey.v1.Protocol protocol_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DRKeyLevel1Request, _impl_.protocol_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DRKeyLevel1Request, _impl_.protocol_id_)}},
    // .google.protobuf.Timestamp val_time = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DRKeyLevel1Request, _impl_.val_time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp val_time = 1;
    {PROTOBUF_FIELD_OFFSET(DRKeyLevel1Request, _impl_.val_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .proto.drkey.v1.Protocol protocol_id = 2;
    {PROTOBUF_FIELD_OFFSET(DRKeyLevel1Request, _impl_.protocol_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

::uint8_t* DRKeyLevel1Request::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.control_plane.v1.DRKeyLevel1Request)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp val_time = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::val_time(this),
        _Internal::val_time(this).GetCachedSize(), target, stream);
  }

  // .proto.drkey.v1.Protocol protocol_id = 2;
  if (this->_internal_protocol_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_protocol_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.control_plane.v1.DRKeyLevel1Request)
  return target;
}

::size_t DRKeyLevel1Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.control_plane.v1.DRKeyLevel1Request)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp val_time = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.val_time_);
  }

  // .proto.drkey.v1.Protocol protocol_id = 2;
  if (this->_internal_protocol_id() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_protocol_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DRKeyLevel1Request::_class_data_ = {
    DRKeyLevel1Request::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DRKeyLevel1Request::GetClassData() const {
  return &_class_data_;
}

void DRKeyLevel1Request::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DRKeyLevel1Request*>(&to_msg);
  auto& from = static_cast<const DRKeyLevel1Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.control_plane.v1.DRKeyLevel1Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_val_time()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_val_time());
  }
  if (from._internal_protocol_id() != 0) {
    _this->_internal_set_protocol_id(from._internal_protocol_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DRKeyLevel1Request::CopyFrom(const DRKeyLevel1Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.control_plane.v1.DRKeyLevel1Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DRKeyLevel1Request::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DRKeyLevel1Request::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DRKeyLevel1Request::InternalSwap(DRKeyLevel1Request* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DRKeyLevel1Request, _impl_.protocol_id_)
      + sizeof(DRKeyLevel1Request::_impl_.protocol_id_)
      - PROTOBUF_FIELD_OFFSET(DRKeyLevel1Request, _impl_.val_time_)>(
          reinterpret_cast<char*>(&_impl_.val_time_),
          reinterpret_cast<char*>(&other->_impl_.val_time_));
}

::google::protobuf::Metadata DRKeyLevel1Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_getter, &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_once,
      file_level_metadata_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto[2]);
}
// ===================================================================

class DRKeyLevel1Response::_Internal {
 public:
  using HasBits = decltype(std::declval<DRKeyLevel1Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DRKeyLevel1Response, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& epoch_begin(const DRKeyLevel1Response* msg);
  static void set_has_epoch_begin(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Timestamp& epoch_end(const DRKeyLevel1Response* msg);
  static void set_has_epoch_end(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::google::protobuf::Timestamp& DRKeyLevel1Response::_Internal::epoch_begin(const DRKeyLevel1Response* msg) {
  return *msg->_impl_.epoch_begin_;
}
const ::google::protobuf::Timestamp& DRKeyLevel1Response::_Internal::epoch_end(const DRKeyLevel1Response* msg) {
  return *msg->_impl_.epoch_end_;
}
void DRKeyLevel1Response::clear_epoch_begin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.epoch_begin_ != nullptr) _impl_.epoch_begin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void DRKeyLevel1Response::clear_epoch_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.epoch_end_ != nullptr) _impl_.epoch_end_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
DRKeyLevel1Response::DRKeyLevel1Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.control_plane.v1.DRKeyLevel1Response)
}
inline PROTOBUF_NDEBUG_INLINE DRKeyLevel1Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        key_(arena, from.key_) {}

DRKeyLevel1Response::DRKeyLevel1Response(
    ::google::protobuf::Arena* arena,
    const DRKeyLevel1Response& from)
    : ::google::protobuf::Message(arena) {
  DRKeyLevel1Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.epoch_begin_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.epoch_begin_)
                : nullptr;
  _impl_.epoch_end_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.epoch_end_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:proto.control_plane.v1.DRKeyLevel1Response)
}
inline PROTOBUF_NDEBUG_INLINE DRKeyLevel1Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        key_(arena) {}

inline void DRKeyLevel1Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, epoch_begin_),
           0,
           offsetof(Impl_, epoch_end_) -
               offsetof(Impl_, epoch_begin_) +
               sizeof(Impl_::epoch_end_));
}
DRKeyLevel1Response::~DRKeyLevel1Response() {
  // @@protoc_insertion_point(destructor:proto.control_plane.v1.DRKeyLevel1Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DRKeyLevel1Response::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.key_.Destroy();
  if (this != internal_default_instance()) delete _impl_.epoch_begin_;
  if (this != internal_default_instance()) delete _impl_.epoch_end_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DRKeyLevel1Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.control_plane.v1.DRKeyLevel1Response)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.epoch_begin_ != nullptr);
      _impl_.epoch_begin_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.epoch_end_ != nullptr);
      _impl_.epoch_end_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DRKeyLevel1Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> DRKeyLevel1Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DRKeyLevel1Response, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DRKeyLevel1Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp epoch_begin = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DRKeyLevel1Response, _impl_.epoch_begin_)}},
    // .google.protobuf.Timestamp epoch_end = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(DRKeyLevel1Response, _impl_.epoch_end_)}},
    // bytes key = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DRKeyLevel1Response, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp epoch_begin = 1;
    {PROTOBUF_FIELD_OFFSET(DRKeyLevel1Response, _impl_.epoch_begin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp epoch_end = 2;
    {PROTOBUF_FIELD_OFFSET(DRKeyLevel1Response, _impl_.epoch_end_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes key = 3;
    {PROTOBUF_FIELD_OFFSET(DRKeyLevel1Response, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

::uint8_t* DRKeyLevel1Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.control_plane.v1.DRKeyLevel1Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp epoch_begin = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::epoch_begin(this),
        _Internal::epoch_begin(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp epoch_end = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::epoch_end(this),
        _Internal::epoch_end(this).GetCachedSize(), target, stream);
  }

  // bytes key = 3;
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.control_plane.v1.DRKeyLevel1Response)
  return target;
}

::size_t DRKeyLevel1Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.control_plane.v1.DRKeyLevel1Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes key = 3;
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_key());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Timestamp epoch_begin = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.epoch_begin_);
    }

    // .google.protobuf.Timestamp epoch_end = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.epoch_end_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DRKeyLevel1Response::_class_data_ = {
    DRKeyLevel1Response::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DRKeyLevel1Response::GetClassData() const {
  return &_class_data_;
}

void DRKeyLevel1Response::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DRKeyLevel1Response*>(&to_msg);
  auto& from = static_cast<const DRKeyLevel1Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.control_plane.v1.DRKeyLevel1Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_epoch_begin()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_epoch_begin());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_epoch_end()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_epoch_end());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DRKeyLevel1Response::CopyFrom(const DRKeyLevel1Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.control_plane.v1.DRKeyLevel1Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DRKeyLevel1Response::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DRKeyLevel1Response::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DRKeyLevel1Response::InternalSwap(DRKeyLevel1Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DRKeyLevel1Response, _impl_.epoch_end_)
      + sizeof(DRKeyLevel1Response::_impl_.epoch_end_)
      - PROTOBUF_FIELD_OFFSET(DRKeyLevel1Response, _impl_.epoch_begin_)>(
          reinterpret_cast<char*>(&_impl_.epoch_begin_),
          reinterpret_cast<char*>(&other->_impl_.epoch_begin_));
}

::google::protobuf::Metadata DRKeyLevel1Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_getter, &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_once,
      file_level_metadata_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto[3]);
}
// ===================================================================

class DRKeyIntraLevel1Request::_Internal {
 public:
  using HasBits = decltype(std::declval<DRKeyIntraLevel1Request>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DRKeyIntraLevel1Request, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& val_time(const DRKeyIntraLevel1Request* msg);
  static void set_has_val_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& DRKeyIntraLevel1Request::_Internal::val_time(const DRKeyIntraLevel1Request* msg) {
  return *msg->_impl_.val_time_;
}
void DRKeyIntraLevel1Request::clear_val_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.val_time_ != nullptr) _impl_.val_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DRKeyIntraLevel1Request::DRKeyIntraLevel1Request(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.control_plane.v1.DRKeyIntraLevel1Request)
}
inline PROTOBUF_NDEBUG_INLINE DRKeyIntraLevel1Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DRKeyIntraLevel1Request::DRKeyIntraLevel1Request(
    ::google::protobuf::Arena* arena,
    const DRKeyIntraLevel1Request& from)
    : ::google::protobuf::Message(arena) {
  DRKeyIntraLevel1Request* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.val_time_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.val_time_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, src_ia_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, src_ia_),
           offsetof(Impl_, protocol_id_) -
               offsetof(Impl_, src_ia_) +
               sizeof(Impl_::protocol_id_));

  // @@protoc_insertion_point(copy_constructor:proto.control_plane.v1.DRKeyIntraLevel1Request)
}
inline PROTOBUF_NDEBUG_INLINE DRKeyIntraLevel1Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DRKeyIntraLevel1Request::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, val_time_),
           0,
           offsetof(Impl_, protocol_id_) -
               offsetof(Impl_, val_time_) +
               sizeof(Impl_::protocol_id_));
}
DRKeyIntraLevel1Request::~DRKeyIntraLevel1Request() {
  // @@protoc_insertion_point(destructor:proto.control_plane.v1.DRKeyIntraLevel1Request)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DRKeyIntraLevel1Request::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete _impl_.val_time_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DRKeyIntraLevel1Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.control_plane.v1.DRKeyIntraLevel1Request)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.val_time_ != nullptr);
    _impl_.val_time_->Clear();
  }
  ::memset(&_impl_.src_ia_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.protocol_id_) -
      reinterpret_cast<char*>(&_impl_.src_ia_)) + sizeof(_impl_.protocol_id_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DRKeyIntraLevel1Request::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> DRKeyIntraLevel1Request::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DRKeyIntraLevel1Request, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DRKeyIntraLevel1Request_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 dst_ia = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DRKeyIntraLevel1Request, _impl_.dst_ia_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(DRKeyIntraLevel1Request, _impl_.dst_ia_)}},
    // .google.protobuf.Timestamp val_time = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DRKeyIntraLevel1Request, _impl_.val_time_)}},
    // .proto.drkey.v1.Protocol protocol_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DRKeyIntraLevel1Request, _impl_.protocol_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DRKeyIntraLevel1Request, _impl_.protocol_id_)}},
    // uint64 src_ia = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DRKeyIntraLevel1Request, _impl_.src_ia_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(DRKeyIntraLevel1Request, _impl_.src_ia_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp val_time = 1;
    {PROTOBUF_FIELD_OFFSET(DRKeyIntraLevel1Request, _impl_.val_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .proto.drkey.v1.Protocol protocol_id = 2;
    {PROTOBUF_FIELD_OFFSET(DRKeyIntraLevel1Request, _impl_.protocol_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 src_ia = 3;
    {PROTOBUF_FIELD_OFFSET(DRKeyIntraLevel1Request, _impl_.src_ia_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 dst_ia = 4;
    {PROTOBUF_FIELD_OFFSET(DRKeyIntraLevel1Request, _impl_.dst_ia_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

::uint8_t* DRKeyIntraLevel1Request::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.control_plane.v1.DRKeyIntraLevel1Request)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp val_time = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::val_time(this),
        _Internal::val_time(this).GetCachedSize(), target, stream);
  }

  // .proto.drkey.v1.Protocol protocol_id = 2;
  if (this->_internal_protocol_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_protocol_id(), target);
  }

  // uint64 src_ia = 3;
  if (this->_internal_src_ia() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_src_ia(), target);
  }

  // uint64 dst_ia = 4;
  if (this->_internal_dst_ia() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_dst_ia(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.control_plane.v1.DRKeyIntraLevel1Request)
  return target;
}

::size_t DRKeyIntraLevel1Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.control_plane.v1.DRKeyIntraLevel1Request)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp val_time = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.val_time_);
  }

  // uint64 src_ia = 3;
  if (this->_internal_src_ia() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_src_ia());
  }

  // uint64 dst_ia = 4;
  if (this->_internal_dst_ia() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_dst_ia());
  }

  // .proto.drkey.v1.Protocol protocol_id = 2;
  if (this->_internal_protocol_id() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_protocol_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DRKeyIntraLevel1Request::_class_data_ = {
    DRKeyIntraLevel1Request::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DRKeyIntraLevel1Request::GetClassData() const {
  return &_class_data_;
}

void DRKeyIntraLevel1Request::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DRKeyIntraLevel1Request*>(&to_msg);
  auto& from = static_cast<const DRKeyIntraLevel1Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.control_plane.v1.DRKeyIntraLevel1Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_val_time()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_val_time());
  }
  if (from._internal_src_ia() != 0) {
    _this->_internal_set_src_ia(from._internal_src_ia());
  }
  if (from._internal_dst_ia() != 0) {
    _this->_internal_set_dst_ia(from._internal_dst_ia());
  }
  if (from._internal_protocol_id() != 0) {
    _this->_internal_set_protocol_id(from._internal_protocol_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DRKeyIntraLevel1Request::CopyFrom(const DRKeyIntraLevel1Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.control_plane.v1.DRKeyIntraLevel1Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DRKeyIntraLevel1Request::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DRKeyIntraLevel1Request::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DRKeyIntraLevel1Request::InternalSwap(DRKeyIntraLevel1Request* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DRKeyIntraLevel1Request, _impl_.protocol_id_)
      + sizeof(DRKeyIntraLevel1Request::_impl_.protocol_id_)
      - PROTOBUF_FIELD_OFFSET(DRKeyIntraLevel1Request, _impl_.val_time_)>(
          reinterpret_cast<char*>(&_impl_.val_time_),
          reinterpret_cast<char*>(&other->_impl_.val_time_));
}

::google::protobuf::Metadata DRKeyIntraLevel1Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_getter, &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_once,
      file_level_metadata_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto[4]);
}
// ===================================================================

class DRKeyIntraLevel1Response::_Internal {
 public:
  using HasBits = decltype(std::declval<DRKeyIntraLevel1Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DRKeyIntraLevel1Response, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& epoch_begin(const DRKeyIntraLevel1Response* msg);
  static void set_has_epoch_begin(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Timestamp& epoch_end(const DRKeyIntraLevel1Response* msg);
  static void set_has_epoch_end(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::google::protobuf::Timestamp& DRKeyIntraLevel1Response::_Internal::epoch_begin(const DRKeyIntraLevel1Response* msg) {
  return *msg->_impl_.epoch_begin_;
}
const ::google::protobuf::Timestamp& DRKeyIntraLevel1Response::_Internal::epoch_end(const DRKeyIntraLevel1Response* msg) {
  return *msg->_impl_.epoch_end_;
}
void DRKeyIntraLevel1Response::clear_epoch_begin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.epoch_begin_ != nullptr) _impl_.epoch_begin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void DRKeyIntraLevel1Response::clear_epoch_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.epoch_end_ != nullptr) _impl_.epoch_end_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
DRKeyIntraLevel1Response::DRKeyIntraLevel1Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.control_plane.v1.DRKeyIntraLevel1Response)
}
inline PROTOBUF_NDEBUG_INLINE DRKeyIntraLevel1Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        key_(arena, from.key_) {}

DRKeyIntraLevel1Response::DRKeyIntraLevel1Response(
    ::google::protobuf::Arena* arena,
    const DRKeyIntraLevel1Response& from)
    : ::google::protobuf::Message(arena) {
  DRKeyIntraLevel1Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.epoch_begin_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.epoch_begin_)
                : nullptr;
  _impl_.epoch_end_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.epoch_end_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:proto.control_plane.v1.DRKeyIntraLevel1Response)
}
inline PROTOBUF_NDEBUG_INLINE DRKeyIntraLevel1Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        key_(arena) {}

inline void DRKeyIntraLevel1Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, epoch_begin_),
           0,
           offsetof(Impl_, epoch_end_) -
               offsetof(Impl_, epoch_begin_) +
               sizeof(Impl_::epoch_end_));
}
DRKeyIntraLevel1Response::~DRKeyIntraLevel1Response() {
  // @@protoc_insertion_point(destructor:proto.control_plane.v1.DRKeyIntraLevel1Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DRKeyIntraLevel1Response::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.key_.Destroy();
  if (this != internal_default_instance()) delete _impl_.epoch_begin_;
  if (this != internal_default_instance()) delete _impl_.epoch_end_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DRKeyIntraLevel1Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.control_plane.v1.DRKeyIntraLevel1Response)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.epoch_begin_ != nullptr);
      _impl_.epoch_begin_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.epoch_end_ != nullptr);
      _impl_.epoch_end_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DRKeyIntraLevel1Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> DRKeyIntraLevel1Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DRKeyIntraLevel1Response, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DRKeyIntraLevel1Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp epoch_begin = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DRKeyIntraLevel1Response, _impl_.epoch_begin_)}},
    // .google.protobuf.Timestamp epoch_end = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(DRKeyIntraLevel1Response, _impl_.epoch_end_)}},
    // bytes key = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DRKeyIntraLevel1Response, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp epoch_begin = 1;
    {PROTOBUF_FIELD_OFFSET(DRKeyIntraLevel1Response, _impl_.epoch_begin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp epoch_end = 2;
    {PROTOBUF_FIELD_OFFSET(DRKeyIntraLevel1Response, _impl_.epoch_end_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes key = 3;
    {PROTOBUF_FIELD_OFFSET(DRKeyIntraLevel1Response, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

::uint8_t* DRKeyIntraLevel1Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.control_plane.v1.DRKeyIntraLevel1Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp epoch_begin = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::epoch_begin(this),
        _Internal::epoch_begin(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp epoch_end = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::epoch_end(this),
        _Internal::epoch_end(this).GetCachedSize(), target, stream);
  }

  // bytes key = 3;
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.control_plane.v1.DRKeyIntraLevel1Response)
  return target;
}

::size_t DRKeyIntraLevel1Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.control_plane.v1.DRKeyIntraLevel1Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes key = 3;
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_key());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Timestamp epoch_begin = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.epoch_begin_);
    }

    // .google.protobuf.Timestamp epoch_end = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.epoch_end_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DRKeyIntraLevel1Response::_class_data_ = {
    DRKeyIntraLevel1Response::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DRKeyIntraLevel1Response::GetClassData() const {
  return &_class_data_;
}

void DRKeyIntraLevel1Response::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DRKeyIntraLevel1Response*>(&to_msg);
  auto& from = static_cast<const DRKeyIntraLevel1Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.control_plane.v1.DRKeyIntraLevel1Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_epoch_begin()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_epoch_begin());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_epoch_end()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_epoch_end());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DRKeyIntraLevel1Response::CopyFrom(const DRKeyIntraLevel1Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.control_plane.v1.DRKeyIntraLevel1Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DRKeyIntraLevel1Response::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DRKeyIntraLevel1Response::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DRKeyIntraLevel1Response::InternalSwap(DRKeyIntraLevel1Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DRKeyIntraLevel1Response, _impl_.epoch_end_)
      + sizeof(DRKeyIntraLevel1Response::_impl_.epoch_end_)
      - PROTOBUF_FIELD_OFFSET(DRKeyIntraLevel1Response, _impl_.epoch_begin_)>(
          reinterpret_cast<char*>(&_impl_.epoch_begin_),
          reinterpret_cast<char*>(&other->_impl_.epoch_begin_));
}

::google::protobuf::Metadata DRKeyIntraLevel1Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_getter, &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_once,
      file_level_metadata_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto[5]);
}
// ===================================================================

class DRKeyHostASRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<DRKeyHostASRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DRKeyHostASRequest, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& val_time(const DRKeyHostASRequest* msg);
  static void set_has_val_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& DRKeyHostASRequest::_Internal::val_time(const DRKeyHostASRequest* msg) {
  return *msg->_impl_.val_time_;
}
void DRKeyHostASRequest::clear_val_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.val_time_ != nullptr) _impl_.val_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DRKeyHostASRequest::DRKeyHostASRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.control_plane.v1.DRKeyHostASRequest)
}
inline PROTOBUF_NDEBUG_INLINE DRKeyHostASRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        src_host_(arena, from.src_host_) {}

DRKeyHostASRequest::DRKeyHostASRequest(
    ::google::protobuf::Arena* arena,
    const DRKeyHostASRequest& from)
    : ::google::protobuf::Message(arena) {
  DRKeyHostASRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.val_time_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.val_time_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, src_ia_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, src_ia_),
           offsetof(Impl_, protocol_id_) -
               offsetof(Impl_, src_ia_) +
               sizeof(Impl_::protocol_id_));

  // @@protoc_insertion_point(copy_constructor:proto.control_plane.v1.DRKeyHostASRequest)
}
inline PROTOBUF_NDEBUG_INLINE DRKeyHostASRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        src_host_(arena) {}

inline void DRKeyHostASRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, val_time_),
           0,
           offsetof(Impl_, protocol_id_) -
               offsetof(Impl_, val_time_) +
               sizeof(Impl_::protocol_id_));
}
DRKeyHostASRequest::~DRKeyHostASRequest() {
  // @@protoc_insertion_point(destructor:proto.control_plane.v1.DRKeyHostASRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DRKeyHostASRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.src_host_.Destroy();
  if (this != internal_default_instance()) delete _impl_.val_time_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DRKeyHostASRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.control_plane.v1.DRKeyHostASRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.src_host_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.val_time_ != nullptr);
    _impl_.val_time_->Clear();
  }
  ::memset(&_impl_.src_ia_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.protocol_id_) -
      reinterpret_cast<char*>(&_impl_.src_ia_)) + sizeof(_impl_.protocol_id_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DRKeyHostASRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 58, 2> DRKeyHostASRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DRKeyHostASRequest, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DRKeyHostASRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp val_time = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DRKeyHostASRequest, _impl_.val_time_)}},
    // .proto.drkey.v1.Protocol protocol_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DRKeyHostASRequest, _impl_.protocol_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DRKeyHostASRequest, _impl_.protocol_id_)}},
    // uint64 src_ia = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DRKeyHostASRequest, _impl_.src_ia_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(DRKeyHostASRequest, _impl_.src_ia_)}},
    // uint64 dst_ia = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DRKeyHostASRequest, _impl_.dst_ia_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(DRKeyHostASRequest, _impl_.dst_ia_)}},
    // string src_host = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(DRKeyHostASRequest, _impl_.src_host_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp val_time = 1;
    {PROTOBUF_FIELD_OFFSET(DRKeyHostASRequest, _impl_.val_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .proto.drkey.v1.Protocol protocol_id = 2;
    {PROTOBUF_FIELD_OFFSET(DRKeyHostASRequest, _impl_.protocol_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 src_ia = 3;
    {PROTOBUF_FIELD_OFFSET(DRKeyHostASRequest, _impl_.src_ia_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 dst_ia = 4;
    {PROTOBUF_FIELD_OFFSET(DRKeyHostASRequest, _impl_.dst_ia_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string src_host = 5;
    {PROTOBUF_FIELD_OFFSET(DRKeyHostASRequest, _impl_.src_host_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\51\0\0\0\0\10\0\0"
    "proto.control_plane.v1.DRKeyHostASRequest"
    "src_host"
  }},
};

::uint8_t* DRKeyHostASRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.control_plane.v1.DRKeyHostASRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp val_time = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::val_time(this),
        _Internal::val_time(this).GetCachedSize(), target, stream);
  }

  // .proto.drkey.v1.Protocol protocol_id = 2;
  if (this->_internal_protocol_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_protocol_id(), target);
  }

  // uint64 src_ia = 3;
  if (this->_internal_src_ia() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_src_ia(), target);
  }

  // uint64 dst_ia = 4;
  if (this->_internal_dst_ia() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_dst_ia(), target);
  }

  // string src_host = 5;
  if (!this->_internal_src_host().empty()) {
    const std::string& _s = this->_internal_src_host();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proto.control_plane.v1.DRKeyHostASRequest.src_host");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.control_plane.v1.DRKeyHostASRequest)
  return target;
}

::size_t DRKeyHostASRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.control_plane.v1.DRKeyHostASRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string src_host = 5;
  if (!this->_internal_src_host().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_src_host());
  }

  // .google.protobuf.Timestamp val_time = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.val_time_);
  }

  // uint64 src_ia = 3;
  if (this->_internal_src_ia() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_src_ia());
  }

  // uint64 dst_ia = 4;
  if (this->_internal_dst_ia() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_dst_ia());
  }

  // .proto.drkey.v1.Protocol protocol_id = 2;
  if (this->_internal_protocol_id() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_protocol_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DRKeyHostASRequest::_class_data_ = {
    DRKeyHostASRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DRKeyHostASRequest::GetClassData() const {
  return &_class_data_;
}

void DRKeyHostASRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DRKeyHostASRequest*>(&to_msg);
  auto& from = static_cast<const DRKeyHostASRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.control_plane.v1.DRKeyHostASRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_src_host().empty()) {
    _this->_internal_set_src_host(from._internal_src_host());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_val_time()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_val_time());
  }
  if (from._internal_src_ia() != 0) {
    _this->_internal_set_src_ia(from._internal_src_ia());
  }
  if (from._internal_dst_ia() != 0) {
    _this->_internal_set_dst_ia(from._internal_dst_ia());
  }
  if (from._internal_protocol_id() != 0) {
    _this->_internal_set_protocol_id(from._internal_protocol_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DRKeyHostASRequest::CopyFrom(const DRKeyHostASRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.control_plane.v1.DRKeyHostASRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DRKeyHostASRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DRKeyHostASRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DRKeyHostASRequest::InternalSwap(DRKeyHostASRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.src_host_, &other->_impl_.src_host_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DRKeyHostASRequest, _impl_.protocol_id_)
      + sizeof(DRKeyHostASRequest::_impl_.protocol_id_)
      - PROTOBUF_FIELD_OFFSET(DRKeyHostASRequest, _impl_.val_time_)>(
          reinterpret_cast<char*>(&_impl_.val_time_),
          reinterpret_cast<char*>(&other->_impl_.val_time_));
}

::google::protobuf::Metadata DRKeyHostASRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_getter, &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_once,
      file_level_metadata_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto[6]);
}
// ===================================================================

class DRKeyHostASResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DRKeyHostASResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DRKeyHostASResponse, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& epoch_begin(const DRKeyHostASResponse* msg);
  static void set_has_epoch_begin(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Timestamp& epoch_end(const DRKeyHostASResponse* msg);
  static void set_has_epoch_end(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::google::protobuf::Timestamp& DRKeyHostASResponse::_Internal::epoch_begin(const DRKeyHostASResponse* msg) {
  return *msg->_impl_.epoch_begin_;
}
const ::google::protobuf::Timestamp& DRKeyHostASResponse::_Internal::epoch_end(const DRKeyHostASResponse* msg) {
  return *msg->_impl_.epoch_end_;
}
void DRKeyHostASResponse::clear_epoch_begin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.epoch_begin_ != nullptr) _impl_.epoch_begin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void DRKeyHostASResponse::clear_epoch_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.epoch_end_ != nullptr) _impl_.epoch_end_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
DRKeyHostASResponse::DRKeyHostASResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.control_plane.v1.DRKeyHostASResponse)
}
inline PROTOBUF_NDEBUG_INLINE DRKeyHostASResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        key_(arena, from.key_) {}

DRKeyHostASResponse::DRKeyHostASResponse(
    ::google::protobuf::Arena* arena,
    const DRKeyHostASResponse& from)
    : ::google::protobuf::Message(arena) {
  DRKeyHostASResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.epoch_begin_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.epoch_begin_)
                : nullptr;
  _impl_.epoch_end_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.epoch_end_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:proto.control_plane.v1.DRKeyHostASResponse)
}
inline PROTOBUF_NDEBUG_INLINE DRKeyHostASResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        key_(arena) {}

inline void DRKeyHostASResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, epoch_begin_),
           0,
           offsetof(Impl_, epoch_end_) -
               offsetof(Impl_, epoch_begin_) +
               sizeof(Impl_::epoch_end_));
}
DRKeyHostASResponse::~DRKeyHostASResponse() {
  // @@protoc_insertion_point(destructor:proto.control_plane.v1.DRKeyHostASResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DRKeyHostASResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.key_.Destroy();
  if (this != internal_default_instance()) delete _impl_.epoch_begin_;
  if (this != internal_default_instance()) delete _impl_.epoch_end_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DRKeyHostASResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.control_plane.v1.DRKeyHostASResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.epoch_begin_ != nullptr);
      _impl_.epoch_begin_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.epoch_end_ != nullptr);
      _impl_.epoch_end_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DRKeyHostASResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> DRKeyHostASResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DRKeyHostASResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DRKeyHostASResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp epoch_begin = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DRKeyHostASResponse, _impl_.epoch_begin_)}},
    // .google.protobuf.Timestamp epoch_end = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(DRKeyHostASResponse, _impl_.epoch_end_)}},
    // bytes key = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DRKeyHostASResponse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp epoch_begin = 1;
    {PROTOBUF_FIELD_OFFSET(DRKeyHostASResponse, _impl_.epoch_begin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp epoch_end = 2;
    {PROTOBUF_FIELD_OFFSET(DRKeyHostASResponse, _impl_.epoch_end_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes key = 3;
    {PROTOBUF_FIELD_OFFSET(DRKeyHostASResponse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

::uint8_t* DRKeyHostASResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.control_plane.v1.DRKeyHostASResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp epoch_begin = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::epoch_begin(this),
        _Internal::epoch_begin(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp epoch_end = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::epoch_end(this),
        _Internal::epoch_end(this).GetCachedSize(), target, stream);
  }

  // bytes key = 3;
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.control_plane.v1.DRKeyHostASResponse)
  return target;
}

::size_t DRKeyHostASResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.control_plane.v1.DRKeyHostASResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes key = 3;
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_key());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Timestamp epoch_begin = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.epoch_begin_);
    }

    // .google.protobuf.Timestamp epoch_end = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.epoch_end_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DRKeyHostASResponse::_class_data_ = {
    DRKeyHostASResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DRKeyHostASResponse::GetClassData() const {
  return &_class_data_;
}

void DRKeyHostASResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DRKeyHostASResponse*>(&to_msg);
  auto& from = static_cast<const DRKeyHostASResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.control_plane.v1.DRKeyHostASResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_epoch_begin()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_epoch_begin());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_epoch_end()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_epoch_end());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DRKeyHostASResponse::CopyFrom(const DRKeyHostASResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.control_plane.v1.DRKeyHostASResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DRKeyHostASResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DRKeyHostASResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DRKeyHostASResponse::InternalSwap(DRKeyHostASResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DRKeyHostASResponse, _impl_.epoch_end_)
      + sizeof(DRKeyHostASResponse::_impl_.epoch_end_)
      - PROTOBUF_FIELD_OFFSET(DRKeyHostASResponse, _impl_.epoch_begin_)>(
          reinterpret_cast<char*>(&_impl_.epoch_begin_),
          reinterpret_cast<char*>(&other->_impl_.epoch_begin_));
}

::google::protobuf::Metadata DRKeyHostASResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_getter, &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_once,
      file_level_metadata_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto[7]);
}
// ===================================================================

class DRKeyASHostRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<DRKeyASHostRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DRKeyASHostRequest, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& val_time(const DRKeyASHostRequest* msg);
  static void set_has_val_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& DRKeyASHostRequest::_Internal::val_time(const DRKeyASHostRequest* msg) {
  return *msg->_impl_.val_time_;
}
void DRKeyASHostRequest::clear_val_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.val_time_ != nullptr) _impl_.val_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DRKeyASHostRequest::DRKeyASHostRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.control_plane.v1.DRKeyASHostRequest)
}
inline PROTOBUF_NDEBUG_INLINE DRKeyASHostRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        dst_host_(arena, from.dst_host_) {}

DRKeyASHostRequest::DRKeyASHostRequest(
    ::google::protobuf::Arena* arena,
    const DRKeyASHostRequest& from)
    : ::google::protobuf::Message(arena) {
  DRKeyASHostRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.val_time_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.val_time_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, src_ia_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, src_ia_),
           offsetof(Impl_, protocol_id_) -
               offsetof(Impl_, src_ia_) +
               sizeof(Impl_::protocol_id_));

  // @@protoc_insertion_point(copy_constructor:proto.control_plane.v1.DRKeyASHostRequest)
}
inline PROTOBUF_NDEBUG_INLINE DRKeyASHostRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        dst_host_(arena) {}

inline void DRKeyASHostRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, val_time_),
           0,
           offsetof(Impl_, protocol_id_) -
               offsetof(Impl_, val_time_) +
               sizeof(Impl_::protocol_id_));
}
DRKeyASHostRequest::~DRKeyASHostRequest() {
  // @@protoc_insertion_point(destructor:proto.control_plane.v1.DRKeyASHostRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DRKeyASHostRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.dst_host_.Destroy();
  if (this != internal_default_instance()) delete _impl_.val_time_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DRKeyASHostRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.control_plane.v1.DRKeyASHostRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dst_host_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.val_time_ != nullptr);
    _impl_.val_time_->Clear();
  }
  ::memset(&_impl_.src_ia_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.protocol_id_) -
      reinterpret_cast<char*>(&_impl_.src_ia_)) + sizeof(_impl_.protocol_id_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DRKeyASHostRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 58, 2> DRKeyASHostRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DRKeyASHostRequest, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DRKeyASHostRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp val_time = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DRKeyASHostRequest, _impl_.val_time_)}},
    // .proto.drkey.v1.Protocol protocol_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DRKeyASHostRequest, _impl_.protocol_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DRKeyASHostRequest, _impl_.protocol_id_)}},
    // uint64 src_ia = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DRKeyASHostRequest, _impl_.src_ia_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(DRKeyASHostRequest, _impl_.src_ia_)}},
    // uint64 dst_ia = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DRKeyASHostRequest, _impl_.dst_ia_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(DRKeyASHostRequest, _impl_.dst_ia_)}},
    // string dst_host = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(DRKeyASHostRequest, _impl_.dst_host_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp val_time = 1;
    {PROTOBUF_FIELD_OFFSET(DRKeyASHostRequest, _impl_.val_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .proto.drkey.v1.Protocol protocol_id = 2;
    {PROTOBUF_FIELD_OFFSET(DRKeyASHostRequest, _impl_.protocol_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 src_ia = 3;
    {PROTOBUF_FIELD_OFFSET(DRKeyASHostRequest, _impl_.src_ia_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 dst_ia = 4;
    {PROTOBUF_FIELD_OFFSET(DRKeyASHostRequest, _impl_.dst_ia_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string dst_host = 5;
    {PROTOBUF_FIELD_OFFSET(DRKeyASHostRequest, _impl_.dst_host_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\51\0\0\0\0\10\0\0"
    "proto.control_plane.v1.DRKeyASHostRequest"
    "dst_host"
  }},
};

::uint8_t* DRKeyASHostRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.control_plane.v1.DRKeyASHostRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp val_time = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::val_time(this),
        _Internal::val_time(this).GetCachedSize(), target, stream);
  }

  // .proto.drkey.v1.Protocol protocol_id = 2;
  if (this->_internal_protocol_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_protocol_id(), target);
  }

  // uint64 src_ia = 3;
  if (this->_internal_src_ia() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_src_ia(), target);
  }

  // uint64 dst_ia = 4;
  if (this->_internal_dst_ia() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_dst_ia(), target);
  }

  // string dst_host = 5;
  if (!this->_internal_dst_host().empty()) {
    const std::string& _s = this->_internal_dst_host();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proto.control_plane.v1.DRKeyASHostRequest.dst_host");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.control_plane.v1.DRKeyASHostRequest)
  return target;
}

::size_t DRKeyASHostRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.control_plane.v1.DRKeyASHostRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dst_host = 5;
  if (!this->_internal_dst_host().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_dst_host());
  }

  // .google.protobuf.Timestamp val_time = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.val_time_);
  }

  // uint64 src_ia = 3;
  if (this->_internal_src_ia() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_src_ia());
  }

  // uint64 dst_ia = 4;
  if (this->_internal_dst_ia() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_dst_ia());
  }

  // .proto.drkey.v1.Protocol protocol_id = 2;
  if (this->_internal_protocol_id() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_protocol_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DRKeyASHostRequest::_class_data_ = {
    DRKeyASHostRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DRKeyASHostRequest::GetClassData() const {
  return &_class_data_;
}

void DRKeyASHostRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DRKeyASHostRequest*>(&to_msg);
  auto& from = static_cast<const DRKeyASHostRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.control_plane.v1.DRKeyASHostRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_dst_host().empty()) {
    _this->_internal_set_dst_host(from._internal_dst_host());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_val_time()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_val_time());
  }
  if (from._internal_src_ia() != 0) {
    _this->_internal_set_src_ia(from._internal_src_ia());
  }
  if (from._internal_dst_ia() != 0) {
    _this->_internal_set_dst_ia(from._internal_dst_ia());
  }
  if (from._internal_protocol_id() != 0) {
    _this->_internal_set_protocol_id(from._internal_protocol_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DRKeyASHostRequest::CopyFrom(const DRKeyASHostRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.control_plane.v1.DRKeyASHostRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DRKeyASHostRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DRKeyASHostRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DRKeyASHostRequest::InternalSwap(DRKeyASHostRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dst_host_, &other->_impl_.dst_host_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DRKeyASHostRequest, _impl_.protocol_id_)
      + sizeof(DRKeyASHostRequest::_impl_.protocol_id_)
      - PROTOBUF_FIELD_OFFSET(DRKeyASHostRequest, _impl_.val_time_)>(
          reinterpret_cast<char*>(&_impl_.val_time_),
          reinterpret_cast<char*>(&other->_impl_.val_time_));
}

::google::protobuf::Metadata DRKeyASHostRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_getter, &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_once,
      file_level_metadata_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto[8]);
}
// ===================================================================

class DRKeyASHostResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DRKeyASHostResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DRKeyASHostResponse, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& epoch_begin(const DRKeyASHostResponse* msg);
  static void set_has_epoch_begin(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Timestamp& epoch_end(const DRKeyASHostResponse* msg);
  static void set_has_epoch_end(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::google::protobuf::Timestamp& DRKeyASHostResponse::_Internal::epoch_begin(const DRKeyASHostResponse* msg) {
  return *msg->_impl_.epoch_begin_;
}
const ::google::protobuf::Timestamp& DRKeyASHostResponse::_Internal::epoch_end(const DRKeyASHostResponse* msg) {
  return *msg->_impl_.epoch_end_;
}
void DRKeyASHostResponse::clear_epoch_begin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.epoch_begin_ != nullptr) _impl_.epoch_begin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void DRKeyASHostResponse::clear_epoch_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.epoch_end_ != nullptr) _impl_.epoch_end_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
DRKeyASHostResponse::DRKeyASHostResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.control_plane.v1.DRKeyASHostResponse)
}
inline PROTOBUF_NDEBUG_INLINE DRKeyASHostResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        key_(arena, from.key_) {}

DRKeyASHostResponse::DRKeyASHostResponse(
    ::google::protobuf::Arena* arena,
    const DRKeyASHostResponse& from)
    : ::google::protobuf::Message(arena) {
  DRKeyASHostResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.epoch_begin_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.epoch_begin_)
                : nullptr;
  _impl_.epoch_end_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.epoch_end_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:proto.control_plane.v1.DRKeyASHostResponse)
}
inline PROTOBUF_NDEBUG_INLINE DRKeyASHostResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        key_(arena) {}

inline void DRKeyASHostResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, epoch_begin_),
           0,
           offsetof(Impl_, epoch_end_) -
               offsetof(Impl_, epoch_begin_) +
               sizeof(Impl_::epoch_end_));
}
DRKeyASHostResponse::~DRKeyASHostResponse() {
  // @@protoc_insertion_point(destructor:proto.control_plane.v1.DRKeyASHostResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DRKeyASHostResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.key_.Destroy();
  if (this != internal_default_instance()) delete _impl_.epoch_begin_;
  if (this != internal_default_instance()) delete _impl_.epoch_end_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DRKeyASHostResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.control_plane.v1.DRKeyASHostResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.epoch_begin_ != nullptr);
      _impl_.epoch_begin_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.epoch_end_ != nullptr);
      _impl_.epoch_end_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DRKeyASHostResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> DRKeyASHostResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DRKeyASHostResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DRKeyASHostResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp epoch_begin = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DRKeyASHostResponse, _impl_.epoch_begin_)}},
    // .google.protobuf.Timestamp epoch_end = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(DRKeyASHostResponse, _impl_.epoch_end_)}},
    // bytes key = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DRKeyASHostResponse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp epoch_begin = 1;
    {PROTOBUF_FIELD_OFFSET(DRKeyASHostResponse, _impl_.epoch_begin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp epoch_end = 2;
    {PROTOBUF_FIELD_OFFSET(DRKeyASHostResponse, _impl_.epoch_end_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes key = 3;
    {PROTOBUF_FIELD_OFFSET(DRKeyASHostResponse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

::uint8_t* DRKeyASHostResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.control_plane.v1.DRKeyASHostResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp epoch_begin = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::epoch_begin(this),
        _Internal::epoch_begin(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp epoch_end = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::epoch_end(this),
        _Internal::epoch_end(this).GetCachedSize(), target, stream);
  }

  // bytes key = 3;
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.control_plane.v1.DRKeyASHostResponse)
  return target;
}

::size_t DRKeyASHostResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.control_plane.v1.DRKeyASHostResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes key = 3;
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_key());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Timestamp epoch_begin = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.epoch_begin_);
    }

    // .google.protobuf.Timestamp epoch_end = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.epoch_end_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DRKeyASHostResponse::_class_data_ = {
    DRKeyASHostResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DRKeyASHostResponse::GetClassData() const {
  return &_class_data_;
}

void DRKeyASHostResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DRKeyASHostResponse*>(&to_msg);
  auto& from = static_cast<const DRKeyASHostResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.control_plane.v1.DRKeyASHostResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_epoch_begin()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_epoch_begin());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_epoch_end()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_epoch_end());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DRKeyASHostResponse::CopyFrom(const DRKeyASHostResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.control_plane.v1.DRKeyASHostResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DRKeyASHostResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DRKeyASHostResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DRKeyASHostResponse::InternalSwap(DRKeyASHostResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DRKeyASHostResponse, _impl_.epoch_end_)
      + sizeof(DRKeyASHostResponse::_impl_.epoch_end_)
      - PROTOBUF_FIELD_OFFSET(DRKeyASHostResponse, _impl_.epoch_begin_)>(
          reinterpret_cast<char*>(&_impl_.epoch_begin_),
          reinterpret_cast<char*>(&other->_impl_.epoch_begin_));
}

::google::protobuf::Metadata DRKeyASHostResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_getter, &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_once,
      file_level_metadata_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto[9]);
}
// ===================================================================

class DRKeyHostHostRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<DRKeyHostHostRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DRKeyHostHostRequest, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& val_time(const DRKeyHostHostRequest* msg);
  static void set_has_val_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& DRKeyHostHostRequest::_Internal::val_time(const DRKeyHostHostRequest* msg) {
  return *msg->_impl_.val_time_;
}
void DRKeyHostHostRequest::clear_val_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.val_time_ != nullptr) _impl_.val_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DRKeyHostHostRequest::DRKeyHostHostRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.control_plane.v1.DRKeyHostHostRequest)
}
inline PROTOBUF_NDEBUG_INLINE DRKeyHostHostRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        src_host_(arena, from.src_host_),
        dst_host_(arena, from.dst_host_) {}

DRKeyHostHostRequest::DRKeyHostHostRequest(
    ::google::protobuf::Arena* arena,
    const DRKeyHostHostRequest& from)
    : ::google::protobuf::Message(arena) {
  DRKeyHostHostRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.val_time_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.val_time_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, src_ia_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, src_ia_),
           offsetof(Impl_, protocol_id_) -
               offsetof(Impl_, src_ia_) +
               sizeof(Impl_::protocol_id_));

  // @@protoc_insertion_point(copy_constructor:proto.control_plane.v1.DRKeyHostHostRequest)
}
inline PROTOBUF_NDEBUG_INLINE DRKeyHostHostRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        src_host_(arena),
        dst_host_(arena) {}

inline void DRKeyHostHostRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, val_time_),
           0,
           offsetof(Impl_, protocol_id_) -
               offsetof(Impl_, val_time_) +
               sizeof(Impl_::protocol_id_));
}
DRKeyHostHostRequest::~DRKeyHostHostRequest() {
  // @@protoc_insertion_point(destructor:proto.control_plane.v1.DRKeyHostHostRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DRKeyHostHostRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.src_host_.Destroy();
  _impl_.dst_host_.Destroy();
  if (this != internal_default_instance()) delete _impl_.val_time_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DRKeyHostHostRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.control_plane.v1.DRKeyHostHostRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.src_host_.ClearToEmpty();
  _impl_.dst_host_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.val_time_ != nullptr);
    _impl_.val_time_->Clear();
  }
  ::memset(&_impl_.src_ia_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.protocol_id_) -
      reinterpret_cast<char*>(&_impl_.src_ia_)) + sizeof(_impl_.protocol_id_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DRKeyHostHostRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 68, 2> DRKeyHostHostRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DRKeyHostHostRequest, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DRKeyHostHostRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp val_time = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DRKeyHostHostRequest, _impl_.val_time_)}},
    // .proto.drkey.v1.Protocol protocol_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DRKeyHostHostRequest, _impl_.protocol_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DRKeyHostHostRequest, _impl_.protocol_id_)}},
    // uint64 src_ia = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DRKeyHostHostRequest, _impl_.src_ia_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(DRKeyHostHostRequest, _impl_.src_ia_)}},
    // uint64 dst_ia = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DRKeyHostHostRequest, _impl_.dst_ia_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(DRKeyHostHostRequest, _impl_.dst_ia_)}},
    // string src_host = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(DRKeyHostHostRequest, _impl_.src_host_)}},
    // string dst_host = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(DRKeyHostHostRequest, _impl_.dst_host_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp val_time = 1;
    {PROTOBUF_FIELD_OFFSET(DRKeyHostHostRequest, _impl_.val_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .proto.drkey.v1.Protocol protocol_id = 2;
    {PROTOBUF_FIELD_OFFSET(DRKeyHostHostRequest, _impl_.protocol_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 src_ia = 3;
    {PROTOBUF_FIELD_OFFSET(DRKeyHostHostRequest, _impl_.src_ia_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 dst_ia = 4;
    {PROTOBUF_FIELD_OFFSET(DRKeyHostHostRequest, _impl_.dst_ia_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string src_host = 5;
    {PROTOBUF_FIELD_OFFSET(DRKeyHostHostRequest, _impl_.src_host_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string dst_host = 6;
    {PROTOBUF_FIELD_OFFSET(DRKeyHostHostRequest, _impl_.dst_host_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\53\0\0\0\0\10\10\0"
    "proto.control_plane.v1.DRKeyHostHostRequest"
    "src_host"
    "dst_host"
  }},
};

::uint8_t* DRKeyHostHostRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.control_plane.v1.DRKeyHostHostRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp val_time = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::val_time(this),
        _Internal::val_time(this).GetCachedSize(), target, stream);
  }

  // .proto.drkey.v1.Protocol protocol_id = 2;
  if (this->_internal_protocol_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_protocol_id(), target);
  }

  // uint64 src_ia = 3;
  if (this->_internal_src_ia() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_src_ia(), target);
  }

  // uint64 dst_ia = 4;
  if (this->_internal_dst_ia() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_dst_ia(), target);
  }

  // string src_host = 5;
  if (!this->_internal_src_host().empty()) {
    const std::string& _s = this->_internal_src_host();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proto.control_plane.v1.DRKeyHostHostRequest.src_host");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string dst_host = 6;
  if (!this->_internal_dst_host().empty()) {
    const std::string& _s = this->_internal_dst_host();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proto.control_plane.v1.DRKeyHostHostRequest.dst_host");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.control_plane.v1.DRKeyHostHostRequest)
  return target;
}

::size_t DRKeyHostHostRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.control_plane.v1.DRKeyHostHostRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string src_host = 5;
  if (!this->_internal_src_host().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_src_host());
  }

  // string dst_host = 6;
  if (!this->_internal_dst_host().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_dst_host());
  }

  // .google.protobuf.Timestamp val_time = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.val_time_);
  }

  // uint64 src_ia = 3;
  if (this->_internal_src_ia() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_src_ia());
  }

  // uint64 dst_ia = 4;
  if (this->_internal_dst_ia() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_dst_ia());
  }

  // .proto.drkey.v1.Protocol protocol_id = 2;
  if (this->_internal_protocol_id() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_protocol_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DRKeyHostHostRequest::_class_data_ = {
    DRKeyHostHostRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DRKeyHostHostRequest::GetClassData() const {
  return &_class_data_;
}

void DRKeyHostHostRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DRKeyHostHostRequest*>(&to_msg);
  auto& from = static_cast<const DRKeyHostHostRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.control_plane.v1.DRKeyHostHostRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_src_host().empty()) {
    _this->_internal_set_src_host(from._internal_src_host());
  }
  if (!from._internal_dst_host().empty()) {
    _this->_internal_set_dst_host(from._internal_dst_host());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_val_time()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_val_time());
  }
  if (from._internal_src_ia() != 0) {
    _this->_internal_set_src_ia(from._internal_src_ia());
  }
  if (from._internal_dst_ia() != 0) {
    _this->_internal_set_dst_ia(from._internal_dst_ia());
  }
  if (from._internal_protocol_id() != 0) {
    _this->_internal_set_protocol_id(from._internal_protocol_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DRKeyHostHostRequest::CopyFrom(const DRKeyHostHostRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.control_plane.v1.DRKeyHostHostRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DRKeyHostHostRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DRKeyHostHostRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DRKeyHostHostRequest::InternalSwap(DRKeyHostHostRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.src_host_, &other->_impl_.src_host_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dst_host_, &other->_impl_.dst_host_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DRKeyHostHostRequest, _impl_.protocol_id_)
      + sizeof(DRKeyHostHostRequest::_impl_.protocol_id_)
      - PROTOBUF_FIELD_OFFSET(DRKeyHostHostRequest, _impl_.val_time_)>(
          reinterpret_cast<char*>(&_impl_.val_time_),
          reinterpret_cast<char*>(&other->_impl_.val_time_));
}

::google::protobuf::Metadata DRKeyHostHostRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_getter, &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_once,
      file_level_metadata_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto[10]);
}
// ===================================================================

class DRKeyHostHostResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DRKeyHostHostResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DRKeyHostHostResponse, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& epoch_begin(const DRKeyHostHostResponse* msg);
  static void set_has_epoch_begin(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Timestamp& epoch_end(const DRKeyHostHostResponse* msg);
  static void set_has_epoch_end(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::google::protobuf::Timestamp& DRKeyHostHostResponse::_Internal::epoch_begin(const DRKeyHostHostResponse* msg) {
  return *msg->_impl_.epoch_begin_;
}
const ::google::protobuf::Timestamp& DRKeyHostHostResponse::_Internal::epoch_end(const DRKeyHostHostResponse* msg) {
  return *msg->_impl_.epoch_end_;
}
void DRKeyHostHostResponse::clear_epoch_begin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.epoch_begin_ != nullptr) _impl_.epoch_begin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void DRKeyHostHostResponse::clear_epoch_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.epoch_end_ != nullptr) _impl_.epoch_end_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
DRKeyHostHostResponse::DRKeyHostHostResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto.control_plane.v1.DRKeyHostHostResponse)
}
inline PROTOBUF_NDEBUG_INLINE DRKeyHostHostResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        key_(arena, from.key_) {}

DRKeyHostHostResponse::DRKeyHostHostResponse(
    ::google::protobuf::Arena* arena,
    const DRKeyHostHostResponse& from)
    : ::google::protobuf::Message(arena) {
  DRKeyHostHostResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.epoch_begin_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.epoch_begin_)
                : nullptr;
  _impl_.epoch_end_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.epoch_end_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:proto.control_plane.v1.DRKeyHostHostResponse)
}
inline PROTOBUF_NDEBUG_INLINE DRKeyHostHostResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        key_(arena) {}

inline void DRKeyHostHostResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, epoch_begin_),
           0,
           offsetof(Impl_, epoch_end_) -
               offsetof(Impl_, epoch_begin_) +
               sizeof(Impl_::epoch_end_));
}
DRKeyHostHostResponse::~DRKeyHostHostResponse() {
  // @@protoc_insertion_point(destructor:proto.control_plane.v1.DRKeyHostHostResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DRKeyHostHostResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.key_.Destroy();
  if (this != internal_default_instance()) delete _impl_.epoch_begin_;
  if (this != internal_default_instance()) delete _impl_.epoch_end_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DRKeyHostHostResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.control_plane.v1.DRKeyHostHostResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.epoch_begin_ != nullptr);
      _impl_.epoch_begin_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.epoch_end_ != nullptr);
      _impl_.epoch_end_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DRKeyHostHostResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> DRKeyHostHostResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DRKeyHostHostResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DRKeyHostHostResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp epoch_begin = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DRKeyHostHostResponse, _impl_.epoch_begin_)}},
    // .google.protobuf.Timestamp epoch_end = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(DRKeyHostHostResponse, _impl_.epoch_end_)}},
    // bytes key = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DRKeyHostHostResponse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp epoch_begin = 1;
    {PROTOBUF_FIELD_OFFSET(DRKeyHostHostResponse, _impl_.epoch_begin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp epoch_end = 2;
    {PROTOBUF_FIELD_OFFSET(DRKeyHostHostResponse, _impl_.epoch_end_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes key = 3;
    {PROTOBUF_FIELD_OFFSET(DRKeyHostHostResponse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

::uint8_t* DRKeyHostHostResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.control_plane.v1.DRKeyHostHostResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp epoch_begin = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::epoch_begin(this),
        _Internal::epoch_begin(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp epoch_end = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::epoch_end(this),
        _Internal::epoch_end(this).GetCachedSize(), target, stream);
  }

  // bytes key = 3;
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.control_plane.v1.DRKeyHostHostResponse)
  return target;
}

::size_t DRKeyHostHostResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.control_plane.v1.DRKeyHostHostResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes key = 3;
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_key());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Timestamp epoch_begin = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.epoch_begin_);
    }

    // .google.protobuf.Timestamp epoch_end = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.epoch_end_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DRKeyHostHostResponse::_class_data_ = {
    DRKeyHostHostResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DRKeyHostHostResponse::GetClassData() const {
  return &_class_data_;
}

void DRKeyHostHostResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DRKeyHostHostResponse*>(&to_msg);
  auto& from = static_cast<const DRKeyHostHostResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.control_plane.v1.DRKeyHostHostResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_epoch_begin()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_epoch_begin());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_epoch_end()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_epoch_end());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DRKeyHostHostResponse::CopyFrom(const DRKeyHostHostResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.control_plane.v1.DRKeyHostHostResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DRKeyHostHostResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DRKeyHostHostResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DRKeyHostHostResponse::InternalSwap(DRKeyHostHostResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DRKeyHostHostResponse, _impl_.epoch_end_)
      + sizeof(DRKeyHostHostResponse::_impl_.epoch_end_)
      - PROTOBUF_FIELD_OFFSET(DRKeyHostHostResponse, _impl_.epoch_begin_)>(
          reinterpret_cast<char*>(&_impl_.epoch_begin_),
          reinterpret_cast<char*>(&other->_impl_.epoch_begin_));
}

::google::protobuf::Metadata DRKeyHostHostResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_getter, &descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_once,
      file_level_metadata_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto[11]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace control_plane
}  // namespace proto
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
