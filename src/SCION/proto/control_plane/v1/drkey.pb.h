// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/control_plane/v1/drkey.proto
// Protobuf C++ Version: 4.24.0-main

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "proto/drkey/v1/drkey.pb.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto;
namespace proto {
namespace control_plane {
namespace v1 {
class DRKeyASHostRequest;
struct DRKeyASHostRequestDefaultTypeInternal;
extern DRKeyASHostRequestDefaultTypeInternal _DRKeyASHostRequest_default_instance_;
class DRKeyASHostResponse;
struct DRKeyASHostResponseDefaultTypeInternal;
extern DRKeyASHostResponseDefaultTypeInternal _DRKeyASHostResponse_default_instance_;
class DRKeyHostASRequest;
struct DRKeyHostASRequestDefaultTypeInternal;
extern DRKeyHostASRequestDefaultTypeInternal _DRKeyHostASRequest_default_instance_;
class DRKeyHostASResponse;
struct DRKeyHostASResponseDefaultTypeInternal;
extern DRKeyHostASResponseDefaultTypeInternal _DRKeyHostASResponse_default_instance_;
class DRKeyHostHostRequest;
struct DRKeyHostHostRequestDefaultTypeInternal;
extern DRKeyHostHostRequestDefaultTypeInternal _DRKeyHostHostRequest_default_instance_;
class DRKeyHostHostResponse;
struct DRKeyHostHostResponseDefaultTypeInternal;
extern DRKeyHostHostResponseDefaultTypeInternal _DRKeyHostHostResponse_default_instance_;
class DRKeyIntraLevel1Request;
struct DRKeyIntraLevel1RequestDefaultTypeInternal;
extern DRKeyIntraLevel1RequestDefaultTypeInternal _DRKeyIntraLevel1Request_default_instance_;
class DRKeyIntraLevel1Response;
struct DRKeyIntraLevel1ResponseDefaultTypeInternal;
extern DRKeyIntraLevel1ResponseDefaultTypeInternal _DRKeyIntraLevel1Response_default_instance_;
class DRKeyLevel1Request;
struct DRKeyLevel1RequestDefaultTypeInternal;
extern DRKeyLevel1RequestDefaultTypeInternal _DRKeyLevel1Request_default_instance_;
class DRKeyLevel1Response;
struct DRKeyLevel1ResponseDefaultTypeInternal;
extern DRKeyLevel1ResponseDefaultTypeInternal _DRKeyLevel1Response_default_instance_;
class DRKeySecretValueRequest;
struct DRKeySecretValueRequestDefaultTypeInternal;
extern DRKeySecretValueRequestDefaultTypeInternal _DRKeySecretValueRequest_default_instance_;
class DRKeySecretValueResponse;
struct DRKeySecretValueResponseDefaultTypeInternal;
extern DRKeySecretValueResponseDefaultTypeInternal _DRKeySecretValueResponse_default_instance_;
}  // namespace v1
}  // namespace control_plane
}  // namespace proto
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace proto {
namespace control_plane {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class DRKeySecretValueResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.DRKeySecretValueResponse) */ {
 public:
  inline DRKeySecretValueResponse() : DRKeySecretValueResponse(nullptr) {}
  ~DRKeySecretValueResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DRKeySecretValueResponse(::google::protobuf::internal::ConstantInitialized);

  inline DRKeySecretValueResponse(const DRKeySecretValueResponse& from)
      : DRKeySecretValueResponse(nullptr, from) {}
  DRKeySecretValueResponse(DRKeySecretValueResponse&& from) noexcept
    : DRKeySecretValueResponse() {
    *this = ::std::move(from);
  }

  inline DRKeySecretValueResponse& operator=(const DRKeySecretValueResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DRKeySecretValueResponse& operator=(DRKeySecretValueResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DRKeySecretValueResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DRKeySecretValueResponse* internal_default_instance() {
    return reinterpret_cast<const DRKeySecretValueResponse*>(
               &_DRKeySecretValueResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(DRKeySecretValueResponse& a, DRKeySecretValueResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DRKeySecretValueResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DRKeySecretValueResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DRKeySecretValueResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DRKeySecretValueResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DRKeySecretValueResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DRKeySecretValueResponse& from) {
    DRKeySecretValueResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DRKeySecretValueResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.DRKeySecretValueResponse";
  }
  protected:
  explicit DRKeySecretValueResponse(::google::protobuf::Arena* arena);
  DRKeySecretValueResponse(::google::protobuf::Arena* arena, const DRKeySecretValueResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 3,
    kEpochBeginFieldNumber = 1,
    kEpochEndFieldNumber = 2,
  };
  // bytes key = 3;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // .google.protobuf.Timestamp epoch_begin = 1;
  bool has_epoch_begin() const;
  void clear_epoch_begin() ;
  const ::google::protobuf::Timestamp& epoch_begin() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_epoch_begin();
  ::google::protobuf::Timestamp* mutable_epoch_begin();
  void set_allocated_epoch_begin(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_epoch_begin(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_epoch_begin();

  private:
  const ::google::protobuf::Timestamp& _internal_epoch_begin() const;
  ::google::protobuf::Timestamp* _internal_mutable_epoch_begin();

  public:
  // .google.protobuf.Timestamp epoch_end = 2;
  bool has_epoch_end() const;
  void clear_epoch_end() ;
  const ::google::protobuf::Timestamp& epoch_end() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_epoch_end();
  ::google::protobuf::Timestamp* mutable_epoch_end();
  void set_allocated_epoch_end(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_epoch_end(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_epoch_end();

  private:
  const ::google::protobuf::Timestamp& _internal_epoch_end() const;
  ::google::protobuf::Timestamp* _internal_mutable_epoch_end();

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.DRKeySecretValueResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::Timestamp* epoch_begin_;
    ::google::protobuf::Timestamp* epoch_end_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto;
};// -------------------------------------------------------------------

class DRKeySecretValueRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.DRKeySecretValueRequest) */ {
 public:
  inline DRKeySecretValueRequest() : DRKeySecretValueRequest(nullptr) {}
  ~DRKeySecretValueRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DRKeySecretValueRequest(::google::protobuf::internal::ConstantInitialized);

  inline DRKeySecretValueRequest(const DRKeySecretValueRequest& from)
      : DRKeySecretValueRequest(nullptr, from) {}
  DRKeySecretValueRequest(DRKeySecretValueRequest&& from) noexcept
    : DRKeySecretValueRequest() {
    *this = ::std::move(from);
  }

  inline DRKeySecretValueRequest& operator=(const DRKeySecretValueRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DRKeySecretValueRequest& operator=(DRKeySecretValueRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DRKeySecretValueRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DRKeySecretValueRequest* internal_default_instance() {
    return reinterpret_cast<const DRKeySecretValueRequest*>(
               &_DRKeySecretValueRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(DRKeySecretValueRequest& a, DRKeySecretValueRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DRKeySecretValueRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DRKeySecretValueRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DRKeySecretValueRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DRKeySecretValueRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DRKeySecretValueRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DRKeySecretValueRequest& from) {
    DRKeySecretValueRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DRKeySecretValueRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.DRKeySecretValueRequest";
  }
  protected:
  explicit DRKeySecretValueRequest(::google::protobuf::Arena* arena);
  DRKeySecretValueRequest(::google::protobuf::Arena* arena, const DRKeySecretValueRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValTimeFieldNumber = 1,
    kProtocolIdFieldNumber = 2,
  };
  // .google.protobuf.Timestamp val_time = 1;
  bool has_val_time() const;
  void clear_val_time() ;
  const ::google::protobuf::Timestamp& val_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_val_time();
  ::google::protobuf::Timestamp* mutable_val_time();
  void set_allocated_val_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_val_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_val_time();

  private:
  const ::google::protobuf::Timestamp& _internal_val_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_val_time();

  public:
  // .proto.drkey.v1.Protocol protocol_id = 2;
  void clear_protocol_id() ;
  ::proto::drkey::v1::Protocol protocol_id() const;
  void set_protocol_id(::proto::drkey::v1::Protocol value);

  private:
  ::proto::drkey::v1::Protocol _internal_protocol_id() const;
  void _internal_set_protocol_id(::proto::drkey::v1::Protocol value);

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.DRKeySecretValueRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Timestamp* val_time_;
    int protocol_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto;
};// -------------------------------------------------------------------

class DRKeyLevel1Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.DRKeyLevel1Response) */ {
 public:
  inline DRKeyLevel1Response() : DRKeyLevel1Response(nullptr) {}
  ~DRKeyLevel1Response() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DRKeyLevel1Response(::google::protobuf::internal::ConstantInitialized);

  inline DRKeyLevel1Response(const DRKeyLevel1Response& from)
      : DRKeyLevel1Response(nullptr, from) {}
  DRKeyLevel1Response(DRKeyLevel1Response&& from) noexcept
    : DRKeyLevel1Response() {
    *this = ::std::move(from);
  }

  inline DRKeyLevel1Response& operator=(const DRKeyLevel1Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline DRKeyLevel1Response& operator=(DRKeyLevel1Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DRKeyLevel1Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const DRKeyLevel1Response* internal_default_instance() {
    return reinterpret_cast<const DRKeyLevel1Response*>(
               &_DRKeyLevel1Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(DRKeyLevel1Response& a, DRKeyLevel1Response& b) {
    a.Swap(&b);
  }
  inline void Swap(DRKeyLevel1Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DRKeyLevel1Response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DRKeyLevel1Response* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DRKeyLevel1Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DRKeyLevel1Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DRKeyLevel1Response& from) {
    DRKeyLevel1Response::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DRKeyLevel1Response* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.DRKeyLevel1Response";
  }
  protected:
  explicit DRKeyLevel1Response(::google::protobuf::Arena* arena);
  DRKeyLevel1Response(::google::protobuf::Arena* arena, const DRKeyLevel1Response& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 3,
    kEpochBeginFieldNumber = 1,
    kEpochEndFieldNumber = 2,
  };
  // bytes key = 3;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // .google.protobuf.Timestamp epoch_begin = 1;
  bool has_epoch_begin() const;
  void clear_epoch_begin() ;
  const ::google::protobuf::Timestamp& epoch_begin() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_epoch_begin();
  ::google::protobuf::Timestamp* mutable_epoch_begin();
  void set_allocated_epoch_begin(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_epoch_begin(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_epoch_begin();

  private:
  const ::google::protobuf::Timestamp& _internal_epoch_begin() const;
  ::google::protobuf::Timestamp* _internal_mutable_epoch_begin();

  public:
  // .google.protobuf.Timestamp epoch_end = 2;
  bool has_epoch_end() const;
  void clear_epoch_end() ;
  const ::google::protobuf::Timestamp& epoch_end() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_epoch_end();
  ::google::protobuf::Timestamp* mutable_epoch_end();
  void set_allocated_epoch_end(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_epoch_end(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_epoch_end();

  private:
  const ::google::protobuf::Timestamp& _internal_epoch_end() const;
  ::google::protobuf::Timestamp* _internal_mutable_epoch_end();

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.DRKeyLevel1Response)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::Timestamp* epoch_begin_;
    ::google::protobuf::Timestamp* epoch_end_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto;
};// -------------------------------------------------------------------

class DRKeyLevel1Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.DRKeyLevel1Request) */ {
 public:
  inline DRKeyLevel1Request() : DRKeyLevel1Request(nullptr) {}
  ~DRKeyLevel1Request() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DRKeyLevel1Request(::google::protobuf::internal::ConstantInitialized);

  inline DRKeyLevel1Request(const DRKeyLevel1Request& from)
      : DRKeyLevel1Request(nullptr, from) {}
  DRKeyLevel1Request(DRKeyLevel1Request&& from) noexcept
    : DRKeyLevel1Request() {
    *this = ::std::move(from);
  }

  inline DRKeyLevel1Request& operator=(const DRKeyLevel1Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline DRKeyLevel1Request& operator=(DRKeyLevel1Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DRKeyLevel1Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const DRKeyLevel1Request* internal_default_instance() {
    return reinterpret_cast<const DRKeyLevel1Request*>(
               &_DRKeyLevel1Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(DRKeyLevel1Request& a, DRKeyLevel1Request& b) {
    a.Swap(&b);
  }
  inline void Swap(DRKeyLevel1Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DRKeyLevel1Request* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DRKeyLevel1Request* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DRKeyLevel1Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DRKeyLevel1Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DRKeyLevel1Request& from) {
    DRKeyLevel1Request::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DRKeyLevel1Request* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.DRKeyLevel1Request";
  }
  protected:
  explicit DRKeyLevel1Request(::google::protobuf::Arena* arena);
  DRKeyLevel1Request(::google::protobuf::Arena* arena, const DRKeyLevel1Request& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValTimeFieldNumber = 1,
    kProtocolIdFieldNumber = 2,
  };
  // .google.protobuf.Timestamp val_time = 1;
  bool has_val_time() const;
  void clear_val_time() ;
  const ::google::protobuf::Timestamp& val_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_val_time();
  ::google::protobuf::Timestamp* mutable_val_time();
  void set_allocated_val_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_val_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_val_time();

  private:
  const ::google::protobuf::Timestamp& _internal_val_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_val_time();

  public:
  // .proto.drkey.v1.Protocol protocol_id = 2;
  void clear_protocol_id() ;
  ::proto::drkey::v1::Protocol protocol_id() const;
  void set_protocol_id(::proto::drkey::v1::Protocol value);

  private:
  ::proto::drkey::v1::Protocol _internal_protocol_id() const;
  void _internal_set_protocol_id(::proto::drkey::v1::Protocol value);

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.DRKeyLevel1Request)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Timestamp* val_time_;
    int protocol_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto;
};// -------------------------------------------------------------------

class DRKeyIntraLevel1Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.DRKeyIntraLevel1Response) */ {
 public:
  inline DRKeyIntraLevel1Response() : DRKeyIntraLevel1Response(nullptr) {}
  ~DRKeyIntraLevel1Response() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DRKeyIntraLevel1Response(::google::protobuf::internal::ConstantInitialized);

  inline DRKeyIntraLevel1Response(const DRKeyIntraLevel1Response& from)
      : DRKeyIntraLevel1Response(nullptr, from) {}
  DRKeyIntraLevel1Response(DRKeyIntraLevel1Response&& from) noexcept
    : DRKeyIntraLevel1Response() {
    *this = ::std::move(from);
  }

  inline DRKeyIntraLevel1Response& operator=(const DRKeyIntraLevel1Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline DRKeyIntraLevel1Response& operator=(DRKeyIntraLevel1Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DRKeyIntraLevel1Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const DRKeyIntraLevel1Response* internal_default_instance() {
    return reinterpret_cast<const DRKeyIntraLevel1Response*>(
               &_DRKeyIntraLevel1Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(DRKeyIntraLevel1Response& a, DRKeyIntraLevel1Response& b) {
    a.Swap(&b);
  }
  inline void Swap(DRKeyIntraLevel1Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DRKeyIntraLevel1Response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DRKeyIntraLevel1Response* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DRKeyIntraLevel1Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DRKeyIntraLevel1Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DRKeyIntraLevel1Response& from) {
    DRKeyIntraLevel1Response::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DRKeyIntraLevel1Response* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.DRKeyIntraLevel1Response";
  }
  protected:
  explicit DRKeyIntraLevel1Response(::google::protobuf::Arena* arena);
  DRKeyIntraLevel1Response(::google::protobuf::Arena* arena, const DRKeyIntraLevel1Response& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 3,
    kEpochBeginFieldNumber = 1,
    kEpochEndFieldNumber = 2,
  };
  // bytes key = 3;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // .google.protobuf.Timestamp epoch_begin = 1;
  bool has_epoch_begin() const;
  void clear_epoch_begin() ;
  const ::google::protobuf::Timestamp& epoch_begin() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_epoch_begin();
  ::google::protobuf::Timestamp* mutable_epoch_begin();
  void set_allocated_epoch_begin(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_epoch_begin(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_epoch_begin();

  private:
  const ::google::protobuf::Timestamp& _internal_epoch_begin() const;
  ::google::protobuf::Timestamp* _internal_mutable_epoch_begin();

  public:
  // .google.protobuf.Timestamp epoch_end = 2;
  bool has_epoch_end() const;
  void clear_epoch_end() ;
  const ::google::protobuf::Timestamp& epoch_end() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_epoch_end();
  ::google::protobuf::Timestamp* mutable_epoch_end();
  void set_allocated_epoch_end(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_epoch_end(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_epoch_end();

  private:
  const ::google::protobuf::Timestamp& _internal_epoch_end() const;
  ::google::protobuf::Timestamp* _internal_mutable_epoch_end();

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.DRKeyIntraLevel1Response)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::Timestamp* epoch_begin_;
    ::google::protobuf::Timestamp* epoch_end_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto;
};// -------------------------------------------------------------------

class DRKeyIntraLevel1Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.DRKeyIntraLevel1Request) */ {
 public:
  inline DRKeyIntraLevel1Request() : DRKeyIntraLevel1Request(nullptr) {}
  ~DRKeyIntraLevel1Request() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DRKeyIntraLevel1Request(::google::protobuf::internal::ConstantInitialized);

  inline DRKeyIntraLevel1Request(const DRKeyIntraLevel1Request& from)
      : DRKeyIntraLevel1Request(nullptr, from) {}
  DRKeyIntraLevel1Request(DRKeyIntraLevel1Request&& from) noexcept
    : DRKeyIntraLevel1Request() {
    *this = ::std::move(from);
  }

  inline DRKeyIntraLevel1Request& operator=(const DRKeyIntraLevel1Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline DRKeyIntraLevel1Request& operator=(DRKeyIntraLevel1Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DRKeyIntraLevel1Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const DRKeyIntraLevel1Request* internal_default_instance() {
    return reinterpret_cast<const DRKeyIntraLevel1Request*>(
               &_DRKeyIntraLevel1Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(DRKeyIntraLevel1Request& a, DRKeyIntraLevel1Request& b) {
    a.Swap(&b);
  }
  inline void Swap(DRKeyIntraLevel1Request* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DRKeyIntraLevel1Request* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DRKeyIntraLevel1Request* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DRKeyIntraLevel1Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DRKeyIntraLevel1Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DRKeyIntraLevel1Request& from) {
    DRKeyIntraLevel1Request::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DRKeyIntraLevel1Request* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.DRKeyIntraLevel1Request";
  }
  protected:
  explicit DRKeyIntraLevel1Request(::google::protobuf::Arena* arena);
  DRKeyIntraLevel1Request(::google::protobuf::Arena* arena, const DRKeyIntraLevel1Request& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValTimeFieldNumber = 1,
    kSrcIaFieldNumber = 3,
    kDstIaFieldNumber = 4,
    kProtocolIdFieldNumber = 2,
  };
  // .google.protobuf.Timestamp val_time = 1;
  bool has_val_time() const;
  void clear_val_time() ;
  const ::google::protobuf::Timestamp& val_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_val_time();
  ::google::protobuf::Timestamp* mutable_val_time();
  void set_allocated_val_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_val_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_val_time();

  private:
  const ::google::protobuf::Timestamp& _internal_val_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_val_time();

  public:
  // uint64 src_ia = 3;
  void clear_src_ia() ;
  ::uint64_t src_ia() const;
  void set_src_ia(::uint64_t value);

  private:
  ::uint64_t _internal_src_ia() const;
  void _internal_set_src_ia(::uint64_t value);

  public:
  // uint64 dst_ia = 4;
  void clear_dst_ia() ;
  ::uint64_t dst_ia() const;
  void set_dst_ia(::uint64_t value);

  private:
  ::uint64_t _internal_dst_ia() const;
  void _internal_set_dst_ia(::uint64_t value);

  public:
  // .proto.drkey.v1.Protocol protocol_id = 2;
  void clear_protocol_id() ;
  ::proto::drkey::v1::Protocol protocol_id() const;
  void set_protocol_id(::proto::drkey::v1::Protocol value);

  private:
  ::proto::drkey::v1::Protocol _internal_protocol_id() const;
  void _internal_set_protocol_id(::proto::drkey::v1::Protocol value);

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.DRKeyIntraLevel1Request)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Timestamp* val_time_;
    ::uint64_t src_ia_;
    ::uint64_t dst_ia_;
    int protocol_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto;
};// -------------------------------------------------------------------

class DRKeyHostHostResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.DRKeyHostHostResponse) */ {
 public:
  inline DRKeyHostHostResponse() : DRKeyHostHostResponse(nullptr) {}
  ~DRKeyHostHostResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DRKeyHostHostResponse(::google::protobuf::internal::ConstantInitialized);

  inline DRKeyHostHostResponse(const DRKeyHostHostResponse& from)
      : DRKeyHostHostResponse(nullptr, from) {}
  DRKeyHostHostResponse(DRKeyHostHostResponse&& from) noexcept
    : DRKeyHostHostResponse() {
    *this = ::std::move(from);
  }

  inline DRKeyHostHostResponse& operator=(const DRKeyHostHostResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DRKeyHostHostResponse& operator=(DRKeyHostHostResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DRKeyHostHostResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DRKeyHostHostResponse* internal_default_instance() {
    return reinterpret_cast<const DRKeyHostHostResponse*>(
               &_DRKeyHostHostResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(DRKeyHostHostResponse& a, DRKeyHostHostResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DRKeyHostHostResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DRKeyHostHostResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DRKeyHostHostResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DRKeyHostHostResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DRKeyHostHostResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DRKeyHostHostResponse& from) {
    DRKeyHostHostResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DRKeyHostHostResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.DRKeyHostHostResponse";
  }
  protected:
  explicit DRKeyHostHostResponse(::google::protobuf::Arena* arena);
  DRKeyHostHostResponse(::google::protobuf::Arena* arena, const DRKeyHostHostResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 3,
    kEpochBeginFieldNumber = 1,
    kEpochEndFieldNumber = 2,
  };
  // bytes key = 3;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // .google.protobuf.Timestamp epoch_begin = 1;
  bool has_epoch_begin() const;
  void clear_epoch_begin() ;
  const ::google::protobuf::Timestamp& epoch_begin() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_epoch_begin();
  ::google::protobuf::Timestamp* mutable_epoch_begin();
  void set_allocated_epoch_begin(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_epoch_begin(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_epoch_begin();

  private:
  const ::google::protobuf::Timestamp& _internal_epoch_begin() const;
  ::google::protobuf::Timestamp* _internal_mutable_epoch_begin();

  public:
  // .google.protobuf.Timestamp epoch_end = 2;
  bool has_epoch_end() const;
  void clear_epoch_end() ;
  const ::google::protobuf::Timestamp& epoch_end() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_epoch_end();
  ::google::protobuf::Timestamp* mutable_epoch_end();
  void set_allocated_epoch_end(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_epoch_end(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_epoch_end();

  private:
  const ::google::protobuf::Timestamp& _internal_epoch_end() const;
  ::google::protobuf::Timestamp* _internal_mutable_epoch_end();

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.DRKeyHostHostResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::Timestamp* epoch_begin_;
    ::google::protobuf::Timestamp* epoch_end_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto;
};// -------------------------------------------------------------------

class DRKeyHostHostRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.DRKeyHostHostRequest) */ {
 public:
  inline DRKeyHostHostRequest() : DRKeyHostHostRequest(nullptr) {}
  ~DRKeyHostHostRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DRKeyHostHostRequest(::google::protobuf::internal::ConstantInitialized);

  inline DRKeyHostHostRequest(const DRKeyHostHostRequest& from)
      : DRKeyHostHostRequest(nullptr, from) {}
  DRKeyHostHostRequest(DRKeyHostHostRequest&& from) noexcept
    : DRKeyHostHostRequest() {
    *this = ::std::move(from);
  }

  inline DRKeyHostHostRequest& operator=(const DRKeyHostHostRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DRKeyHostHostRequest& operator=(DRKeyHostHostRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DRKeyHostHostRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DRKeyHostHostRequest* internal_default_instance() {
    return reinterpret_cast<const DRKeyHostHostRequest*>(
               &_DRKeyHostHostRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(DRKeyHostHostRequest& a, DRKeyHostHostRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DRKeyHostHostRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DRKeyHostHostRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DRKeyHostHostRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DRKeyHostHostRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DRKeyHostHostRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DRKeyHostHostRequest& from) {
    DRKeyHostHostRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DRKeyHostHostRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.DRKeyHostHostRequest";
  }
  protected:
  explicit DRKeyHostHostRequest(::google::protobuf::Arena* arena);
  DRKeyHostHostRequest(::google::protobuf::Arena* arena, const DRKeyHostHostRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSrcHostFieldNumber = 5,
    kDstHostFieldNumber = 6,
    kValTimeFieldNumber = 1,
    kSrcIaFieldNumber = 3,
    kDstIaFieldNumber = 4,
    kProtocolIdFieldNumber = 2,
  };
  // string src_host = 5;
  void clear_src_host() ;
  const std::string& src_host() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_src_host(Arg_&& arg, Args_... args);
  std::string* mutable_src_host();
  PROTOBUF_NODISCARD std::string* release_src_host();
  void set_allocated_src_host(std::string* value);

  private:
  const std::string& _internal_src_host() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_src_host(
      const std::string& value);
  std::string* _internal_mutable_src_host();

  public:
  // string dst_host = 6;
  void clear_dst_host() ;
  const std::string& dst_host() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dst_host(Arg_&& arg, Args_... args);
  std::string* mutable_dst_host();
  PROTOBUF_NODISCARD std::string* release_dst_host();
  void set_allocated_dst_host(std::string* value);

  private:
  const std::string& _internal_dst_host() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dst_host(
      const std::string& value);
  std::string* _internal_mutable_dst_host();

  public:
  // .google.protobuf.Timestamp val_time = 1;
  bool has_val_time() const;
  void clear_val_time() ;
  const ::google::protobuf::Timestamp& val_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_val_time();
  ::google::protobuf::Timestamp* mutable_val_time();
  void set_allocated_val_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_val_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_val_time();

  private:
  const ::google::protobuf::Timestamp& _internal_val_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_val_time();

  public:
  // uint64 src_ia = 3;
  void clear_src_ia() ;
  ::uint64_t src_ia() const;
  void set_src_ia(::uint64_t value);

  private:
  ::uint64_t _internal_src_ia() const;
  void _internal_set_src_ia(::uint64_t value);

  public:
  // uint64 dst_ia = 4;
  void clear_dst_ia() ;
  ::uint64_t dst_ia() const;
  void set_dst_ia(::uint64_t value);

  private:
  ::uint64_t _internal_dst_ia() const;
  void _internal_set_dst_ia(::uint64_t value);

  public:
  // .proto.drkey.v1.Protocol protocol_id = 2;
  void clear_protocol_id() ;
  ::proto::drkey::v1::Protocol protocol_id() const;
  void set_protocol_id(::proto::drkey::v1::Protocol value);

  private:
  ::proto::drkey::v1::Protocol _internal_protocol_id() const;
  void _internal_set_protocol_id(::proto::drkey::v1::Protocol value);

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.DRKeyHostHostRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      68, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr src_host_;
    ::google::protobuf::internal::ArenaStringPtr dst_host_;
    ::google::protobuf::Timestamp* val_time_;
    ::uint64_t src_ia_;
    ::uint64_t dst_ia_;
    int protocol_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto;
};// -------------------------------------------------------------------

class DRKeyHostASResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.DRKeyHostASResponse) */ {
 public:
  inline DRKeyHostASResponse() : DRKeyHostASResponse(nullptr) {}
  ~DRKeyHostASResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DRKeyHostASResponse(::google::protobuf::internal::ConstantInitialized);

  inline DRKeyHostASResponse(const DRKeyHostASResponse& from)
      : DRKeyHostASResponse(nullptr, from) {}
  DRKeyHostASResponse(DRKeyHostASResponse&& from) noexcept
    : DRKeyHostASResponse() {
    *this = ::std::move(from);
  }

  inline DRKeyHostASResponse& operator=(const DRKeyHostASResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DRKeyHostASResponse& operator=(DRKeyHostASResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DRKeyHostASResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DRKeyHostASResponse* internal_default_instance() {
    return reinterpret_cast<const DRKeyHostASResponse*>(
               &_DRKeyHostASResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(DRKeyHostASResponse& a, DRKeyHostASResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DRKeyHostASResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DRKeyHostASResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DRKeyHostASResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DRKeyHostASResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DRKeyHostASResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DRKeyHostASResponse& from) {
    DRKeyHostASResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DRKeyHostASResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.DRKeyHostASResponse";
  }
  protected:
  explicit DRKeyHostASResponse(::google::protobuf::Arena* arena);
  DRKeyHostASResponse(::google::protobuf::Arena* arena, const DRKeyHostASResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 3,
    kEpochBeginFieldNumber = 1,
    kEpochEndFieldNumber = 2,
  };
  // bytes key = 3;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // .google.protobuf.Timestamp epoch_begin = 1;
  bool has_epoch_begin() const;
  void clear_epoch_begin() ;
  const ::google::protobuf::Timestamp& epoch_begin() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_epoch_begin();
  ::google::protobuf::Timestamp* mutable_epoch_begin();
  void set_allocated_epoch_begin(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_epoch_begin(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_epoch_begin();

  private:
  const ::google::protobuf::Timestamp& _internal_epoch_begin() const;
  ::google::protobuf::Timestamp* _internal_mutable_epoch_begin();

  public:
  // .google.protobuf.Timestamp epoch_end = 2;
  bool has_epoch_end() const;
  void clear_epoch_end() ;
  const ::google::protobuf::Timestamp& epoch_end() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_epoch_end();
  ::google::protobuf::Timestamp* mutable_epoch_end();
  void set_allocated_epoch_end(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_epoch_end(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_epoch_end();

  private:
  const ::google::protobuf::Timestamp& _internal_epoch_end() const;
  ::google::protobuf::Timestamp* _internal_mutable_epoch_end();

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.DRKeyHostASResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::Timestamp* epoch_begin_;
    ::google::protobuf::Timestamp* epoch_end_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto;
};// -------------------------------------------------------------------

class DRKeyHostASRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.DRKeyHostASRequest) */ {
 public:
  inline DRKeyHostASRequest() : DRKeyHostASRequest(nullptr) {}
  ~DRKeyHostASRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DRKeyHostASRequest(::google::protobuf::internal::ConstantInitialized);

  inline DRKeyHostASRequest(const DRKeyHostASRequest& from)
      : DRKeyHostASRequest(nullptr, from) {}
  DRKeyHostASRequest(DRKeyHostASRequest&& from) noexcept
    : DRKeyHostASRequest() {
    *this = ::std::move(from);
  }

  inline DRKeyHostASRequest& operator=(const DRKeyHostASRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DRKeyHostASRequest& operator=(DRKeyHostASRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DRKeyHostASRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DRKeyHostASRequest* internal_default_instance() {
    return reinterpret_cast<const DRKeyHostASRequest*>(
               &_DRKeyHostASRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(DRKeyHostASRequest& a, DRKeyHostASRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DRKeyHostASRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DRKeyHostASRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DRKeyHostASRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DRKeyHostASRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DRKeyHostASRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DRKeyHostASRequest& from) {
    DRKeyHostASRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DRKeyHostASRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.DRKeyHostASRequest";
  }
  protected:
  explicit DRKeyHostASRequest(::google::protobuf::Arena* arena);
  DRKeyHostASRequest(::google::protobuf::Arena* arena, const DRKeyHostASRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSrcHostFieldNumber = 5,
    kValTimeFieldNumber = 1,
    kSrcIaFieldNumber = 3,
    kDstIaFieldNumber = 4,
    kProtocolIdFieldNumber = 2,
  };
  // string src_host = 5;
  void clear_src_host() ;
  const std::string& src_host() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_src_host(Arg_&& arg, Args_... args);
  std::string* mutable_src_host();
  PROTOBUF_NODISCARD std::string* release_src_host();
  void set_allocated_src_host(std::string* value);

  private:
  const std::string& _internal_src_host() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_src_host(
      const std::string& value);
  std::string* _internal_mutable_src_host();

  public:
  // .google.protobuf.Timestamp val_time = 1;
  bool has_val_time() const;
  void clear_val_time() ;
  const ::google::protobuf::Timestamp& val_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_val_time();
  ::google::protobuf::Timestamp* mutable_val_time();
  void set_allocated_val_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_val_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_val_time();

  private:
  const ::google::protobuf::Timestamp& _internal_val_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_val_time();

  public:
  // uint64 src_ia = 3;
  void clear_src_ia() ;
  ::uint64_t src_ia() const;
  void set_src_ia(::uint64_t value);

  private:
  ::uint64_t _internal_src_ia() const;
  void _internal_set_src_ia(::uint64_t value);

  public:
  // uint64 dst_ia = 4;
  void clear_dst_ia() ;
  ::uint64_t dst_ia() const;
  void set_dst_ia(::uint64_t value);

  private:
  ::uint64_t _internal_dst_ia() const;
  void _internal_set_dst_ia(::uint64_t value);

  public:
  // .proto.drkey.v1.Protocol protocol_id = 2;
  void clear_protocol_id() ;
  ::proto::drkey::v1::Protocol protocol_id() const;
  void set_protocol_id(::proto::drkey::v1::Protocol value);

  private:
  ::proto::drkey::v1::Protocol _internal_protocol_id() const;
  void _internal_set_protocol_id(::proto::drkey::v1::Protocol value);

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.DRKeyHostASRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      58, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr src_host_;
    ::google::protobuf::Timestamp* val_time_;
    ::uint64_t src_ia_;
    ::uint64_t dst_ia_;
    int protocol_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto;
};// -------------------------------------------------------------------

class DRKeyASHostResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.DRKeyASHostResponse) */ {
 public:
  inline DRKeyASHostResponse() : DRKeyASHostResponse(nullptr) {}
  ~DRKeyASHostResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DRKeyASHostResponse(::google::protobuf::internal::ConstantInitialized);

  inline DRKeyASHostResponse(const DRKeyASHostResponse& from)
      : DRKeyASHostResponse(nullptr, from) {}
  DRKeyASHostResponse(DRKeyASHostResponse&& from) noexcept
    : DRKeyASHostResponse() {
    *this = ::std::move(from);
  }

  inline DRKeyASHostResponse& operator=(const DRKeyASHostResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DRKeyASHostResponse& operator=(DRKeyASHostResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DRKeyASHostResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DRKeyASHostResponse* internal_default_instance() {
    return reinterpret_cast<const DRKeyASHostResponse*>(
               &_DRKeyASHostResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(DRKeyASHostResponse& a, DRKeyASHostResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DRKeyASHostResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DRKeyASHostResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DRKeyASHostResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DRKeyASHostResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DRKeyASHostResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DRKeyASHostResponse& from) {
    DRKeyASHostResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DRKeyASHostResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.DRKeyASHostResponse";
  }
  protected:
  explicit DRKeyASHostResponse(::google::protobuf::Arena* arena);
  DRKeyASHostResponse(::google::protobuf::Arena* arena, const DRKeyASHostResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 3,
    kEpochBeginFieldNumber = 1,
    kEpochEndFieldNumber = 2,
  };
  // bytes key = 3;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // .google.protobuf.Timestamp epoch_begin = 1;
  bool has_epoch_begin() const;
  void clear_epoch_begin() ;
  const ::google::protobuf::Timestamp& epoch_begin() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_epoch_begin();
  ::google::protobuf::Timestamp* mutable_epoch_begin();
  void set_allocated_epoch_begin(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_epoch_begin(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_epoch_begin();

  private:
  const ::google::protobuf::Timestamp& _internal_epoch_begin() const;
  ::google::protobuf::Timestamp* _internal_mutable_epoch_begin();

  public:
  // .google.protobuf.Timestamp epoch_end = 2;
  bool has_epoch_end() const;
  void clear_epoch_end() ;
  const ::google::protobuf::Timestamp& epoch_end() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_epoch_end();
  ::google::protobuf::Timestamp* mutable_epoch_end();
  void set_allocated_epoch_end(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_epoch_end(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_epoch_end();

  private:
  const ::google::protobuf::Timestamp& _internal_epoch_end() const;
  ::google::protobuf::Timestamp* _internal_mutable_epoch_end();

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.DRKeyASHostResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::Timestamp* epoch_begin_;
    ::google::protobuf::Timestamp* epoch_end_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto;
};// -------------------------------------------------------------------

class DRKeyASHostRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.DRKeyASHostRequest) */ {
 public:
  inline DRKeyASHostRequest() : DRKeyASHostRequest(nullptr) {}
  ~DRKeyASHostRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DRKeyASHostRequest(::google::protobuf::internal::ConstantInitialized);

  inline DRKeyASHostRequest(const DRKeyASHostRequest& from)
      : DRKeyASHostRequest(nullptr, from) {}
  DRKeyASHostRequest(DRKeyASHostRequest&& from) noexcept
    : DRKeyASHostRequest() {
    *this = ::std::move(from);
  }

  inline DRKeyASHostRequest& operator=(const DRKeyASHostRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DRKeyASHostRequest& operator=(DRKeyASHostRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DRKeyASHostRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DRKeyASHostRequest* internal_default_instance() {
    return reinterpret_cast<const DRKeyASHostRequest*>(
               &_DRKeyASHostRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(DRKeyASHostRequest& a, DRKeyASHostRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DRKeyASHostRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DRKeyASHostRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DRKeyASHostRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DRKeyASHostRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DRKeyASHostRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DRKeyASHostRequest& from) {
    DRKeyASHostRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DRKeyASHostRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.DRKeyASHostRequest";
  }
  protected:
  explicit DRKeyASHostRequest(::google::protobuf::Arena* arena);
  DRKeyASHostRequest(::google::protobuf::Arena* arena, const DRKeyASHostRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDstHostFieldNumber = 5,
    kValTimeFieldNumber = 1,
    kSrcIaFieldNumber = 3,
    kDstIaFieldNumber = 4,
    kProtocolIdFieldNumber = 2,
  };
  // string dst_host = 5;
  void clear_dst_host() ;
  const std::string& dst_host() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dst_host(Arg_&& arg, Args_... args);
  std::string* mutable_dst_host();
  PROTOBUF_NODISCARD std::string* release_dst_host();
  void set_allocated_dst_host(std::string* value);

  private:
  const std::string& _internal_dst_host() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dst_host(
      const std::string& value);
  std::string* _internal_mutable_dst_host();

  public:
  // .google.protobuf.Timestamp val_time = 1;
  bool has_val_time() const;
  void clear_val_time() ;
  const ::google::protobuf::Timestamp& val_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_val_time();
  ::google::protobuf::Timestamp* mutable_val_time();
  void set_allocated_val_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_val_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_val_time();

  private:
  const ::google::protobuf::Timestamp& _internal_val_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_val_time();

  public:
  // uint64 src_ia = 3;
  void clear_src_ia() ;
  ::uint64_t src_ia() const;
  void set_src_ia(::uint64_t value);

  private:
  ::uint64_t _internal_src_ia() const;
  void _internal_set_src_ia(::uint64_t value);

  public:
  // uint64 dst_ia = 4;
  void clear_dst_ia() ;
  ::uint64_t dst_ia() const;
  void set_dst_ia(::uint64_t value);

  private:
  ::uint64_t _internal_dst_ia() const;
  void _internal_set_dst_ia(::uint64_t value);

  public:
  // .proto.drkey.v1.Protocol protocol_id = 2;
  void clear_protocol_id() ;
  ::proto::drkey::v1::Protocol protocol_id() const;
  void set_protocol_id(::proto::drkey::v1::Protocol value);

  private:
  ::proto::drkey::v1::Protocol _internal_protocol_id() const;
  void _internal_set_protocol_id(::proto::drkey::v1::Protocol value);

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.DRKeyASHostRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      58, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr dst_host_;
    ::google::protobuf::Timestamp* val_time_;
    ::uint64_t src_ia_;
    ::uint64_t dst_ia_;
    int protocol_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// DRKeySecretValueRequest

// .google.protobuf.Timestamp val_time = 1;
inline bool DRKeySecretValueRequest::has_val_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.val_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& DRKeySecretValueRequest::_internal_val_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.val_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& DRKeySecretValueRequest::val_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeySecretValueRequest.val_time)
  return _internal_val_time();
}
inline void DRKeySecretValueRequest::unsafe_arena_set_allocated_val_time(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.val_time_);
  }
  _impl_.val_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.DRKeySecretValueRequest.val_time)
}
inline ::google::protobuf::Timestamp* DRKeySecretValueRequest::release_val_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.val_time_;
  _impl_.val_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* DRKeySecretValueRequest::unsafe_arena_release_val_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeySecretValueRequest.val_time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.val_time_;
  _impl_.val_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* DRKeySecretValueRequest::_internal_mutable_val_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.val_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.val_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.val_time_;
}
inline ::google::protobuf::Timestamp* DRKeySecretValueRequest::mutable_val_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_val_time();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeySecretValueRequest.val_time)
  return _msg;
}
inline void DRKeySecretValueRequest::set_allocated_val_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.val_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.val_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeySecretValueRequest.val_time)
}

// .proto.drkey.v1.Protocol protocol_id = 2;
inline void DRKeySecretValueRequest::clear_protocol_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.protocol_id_ = 0;
}
inline ::proto::drkey::v1::Protocol DRKeySecretValueRequest::protocol_id() const {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeySecretValueRequest.protocol_id)
  return _internal_protocol_id();
}
inline void DRKeySecretValueRequest::set_protocol_id(::proto::drkey::v1::Protocol value) {
  _internal_set_protocol_id(value);
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.DRKeySecretValueRequest.protocol_id)
}
inline ::proto::drkey::v1::Protocol DRKeySecretValueRequest::_internal_protocol_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::proto::drkey::v1::Protocol>(_impl_.protocol_id_);
}
inline void DRKeySecretValueRequest::_internal_set_protocol_id(::proto::drkey::v1::Protocol value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.protocol_id_ = value;
}

// -------------------------------------------------------------------

// DRKeySecretValueResponse

// .google.protobuf.Timestamp epoch_begin = 1;
inline bool DRKeySecretValueResponse::has_epoch_begin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.epoch_begin_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& DRKeySecretValueResponse::_internal_epoch_begin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.epoch_begin_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& DRKeySecretValueResponse::epoch_begin() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeySecretValueResponse.epoch_begin)
  return _internal_epoch_begin();
}
inline void DRKeySecretValueResponse::unsafe_arena_set_allocated_epoch_begin(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_begin_);
  }
  _impl_.epoch_begin_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.DRKeySecretValueResponse.epoch_begin)
}
inline ::google::protobuf::Timestamp* DRKeySecretValueResponse::release_epoch_begin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.epoch_begin_;
  _impl_.epoch_begin_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* DRKeySecretValueResponse::unsafe_arena_release_epoch_begin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeySecretValueResponse.epoch_begin)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.epoch_begin_;
  _impl_.epoch_begin_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* DRKeySecretValueResponse::_internal_mutable_epoch_begin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.epoch_begin_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.epoch_begin_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.epoch_begin_;
}
inline ::google::protobuf::Timestamp* DRKeySecretValueResponse::mutable_epoch_begin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_epoch_begin();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeySecretValueResponse.epoch_begin)
  return _msg;
}
inline void DRKeySecretValueResponse::set_allocated_epoch_begin(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_begin_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.epoch_begin_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeySecretValueResponse.epoch_begin)
}

// .google.protobuf.Timestamp epoch_end = 2;
inline bool DRKeySecretValueResponse::has_epoch_end() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.epoch_end_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& DRKeySecretValueResponse::_internal_epoch_end() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.epoch_end_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& DRKeySecretValueResponse::epoch_end() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeySecretValueResponse.epoch_end)
  return _internal_epoch_end();
}
inline void DRKeySecretValueResponse::unsafe_arena_set_allocated_epoch_end(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_end_);
  }
  _impl_.epoch_end_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.DRKeySecretValueResponse.epoch_end)
}
inline ::google::protobuf::Timestamp* DRKeySecretValueResponse::release_epoch_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.epoch_end_;
  _impl_.epoch_end_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* DRKeySecretValueResponse::unsafe_arena_release_epoch_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeySecretValueResponse.epoch_end)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.epoch_end_;
  _impl_.epoch_end_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* DRKeySecretValueResponse::_internal_mutable_epoch_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.epoch_end_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.epoch_end_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.epoch_end_;
}
inline ::google::protobuf::Timestamp* DRKeySecretValueResponse::mutable_epoch_end() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_epoch_end();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeySecretValueResponse.epoch_end)
  return _msg;
}
inline void DRKeySecretValueResponse::set_allocated_epoch_end(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_end_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.epoch_end_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeySecretValueResponse.epoch_end)
}

// bytes key = 3;
inline void DRKeySecretValueResponse::clear_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& DRKeySecretValueResponse::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeySecretValueResponse.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DRKeySecretValueResponse::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.DRKeySecretValueResponse.key)
}
inline std::string* DRKeySecretValueResponse::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeySecretValueResponse.key)
  return _s;
}
inline const std::string& DRKeySecretValueResponse::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void DRKeySecretValueResponse::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArena());
}
inline std::string* DRKeySecretValueResponse::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* DRKeySecretValueResponse::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeySecretValueResponse.key)
  return _impl_.key_.Release();
}
inline void DRKeySecretValueResponse::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeySecretValueResponse.key)
}

// -------------------------------------------------------------------

// DRKeyLevel1Request

// .google.protobuf.Timestamp val_time = 1;
inline bool DRKeyLevel1Request::has_val_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.val_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& DRKeyLevel1Request::_internal_val_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.val_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& DRKeyLevel1Request::val_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyLevel1Request.val_time)
  return _internal_val_time();
}
inline void DRKeyLevel1Request::unsafe_arena_set_allocated_val_time(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.val_time_);
  }
  _impl_.val_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.DRKeyLevel1Request.val_time)
}
inline ::google::protobuf::Timestamp* DRKeyLevel1Request::release_val_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.val_time_;
  _impl_.val_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* DRKeyLevel1Request::unsafe_arena_release_val_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeyLevel1Request.val_time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.val_time_;
  _impl_.val_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* DRKeyLevel1Request::_internal_mutable_val_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.val_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.val_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.val_time_;
}
inline ::google::protobuf::Timestamp* DRKeyLevel1Request::mutable_val_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_val_time();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeyLevel1Request.val_time)
  return _msg;
}
inline void DRKeyLevel1Request::set_allocated_val_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.val_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.val_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeyLevel1Request.val_time)
}

// .proto.drkey.v1.Protocol protocol_id = 2;
inline void DRKeyLevel1Request::clear_protocol_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.protocol_id_ = 0;
}
inline ::proto::drkey::v1::Protocol DRKeyLevel1Request::protocol_id() const {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyLevel1Request.protocol_id)
  return _internal_protocol_id();
}
inline void DRKeyLevel1Request::set_protocol_id(::proto::drkey::v1::Protocol value) {
  _internal_set_protocol_id(value);
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.DRKeyLevel1Request.protocol_id)
}
inline ::proto::drkey::v1::Protocol DRKeyLevel1Request::_internal_protocol_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::proto::drkey::v1::Protocol>(_impl_.protocol_id_);
}
inline void DRKeyLevel1Request::_internal_set_protocol_id(::proto::drkey::v1::Protocol value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.protocol_id_ = value;
}

// -------------------------------------------------------------------

// DRKeyLevel1Response

// .google.protobuf.Timestamp epoch_begin = 1;
inline bool DRKeyLevel1Response::has_epoch_begin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.epoch_begin_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& DRKeyLevel1Response::_internal_epoch_begin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.epoch_begin_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& DRKeyLevel1Response::epoch_begin() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyLevel1Response.epoch_begin)
  return _internal_epoch_begin();
}
inline void DRKeyLevel1Response::unsafe_arena_set_allocated_epoch_begin(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_begin_);
  }
  _impl_.epoch_begin_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.DRKeyLevel1Response.epoch_begin)
}
inline ::google::protobuf::Timestamp* DRKeyLevel1Response::release_epoch_begin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.epoch_begin_;
  _impl_.epoch_begin_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* DRKeyLevel1Response::unsafe_arena_release_epoch_begin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeyLevel1Response.epoch_begin)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.epoch_begin_;
  _impl_.epoch_begin_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* DRKeyLevel1Response::_internal_mutable_epoch_begin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.epoch_begin_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.epoch_begin_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.epoch_begin_;
}
inline ::google::protobuf::Timestamp* DRKeyLevel1Response::mutable_epoch_begin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_epoch_begin();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeyLevel1Response.epoch_begin)
  return _msg;
}
inline void DRKeyLevel1Response::set_allocated_epoch_begin(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_begin_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.epoch_begin_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeyLevel1Response.epoch_begin)
}

// .google.protobuf.Timestamp epoch_end = 2;
inline bool DRKeyLevel1Response::has_epoch_end() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.epoch_end_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& DRKeyLevel1Response::_internal_epoch_end() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.epoch_end_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& DRKeyLevel1Response::epoch_end() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyLevel1Response.epoch_end)
  return _internal_epoch_end();
}
inline void DRKeyLevel1Response::unsafe_arena_set_allocated_epoch_end(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_end_);
  }
  _impl_.epoch_end_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.DRKeyLevel1Response.epoch_end)
}
inline ::google::protobuf::Timestamp* DRKeyLevel1Response::release_epoch_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.epoch_end_;
  _impl_.epoch_end_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* DRKeyLevel1Response::unsafe_arena_release_epoch_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeyLevel1Response.epoch_end)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.epoch_end_;
  _impl_.epoch_end_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* DRKeyLevel1Response::_internal_mutable_epoch_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.epoch_end_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.epoch_end_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.epoch_end_;
}
inline ::google::protobuf::Timestamp* DRKeyLevel1Response::mutable_epoch_end() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_epoch_end();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeyLevel1Response.epoch_end)
  return _msg;
}
inline void DRKeyLevel1Response::set_allocated_epoch_end(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_end_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.epoch_end_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeyLevel1Response.epoch_end)
}

// bytes key = 3;
inline void DRKeyLevel1Response::clear_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& DRKeyLevel1Response::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyLevel1Response.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DRKeyLevel1Response::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.DRKeyLevel1Response.key)
}
inline std::string* DRKeyLevel1Response::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeyLevel1Response.key)
  return _s;
}
inline const std::string& DRKeyLevel1Response::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void DRKeyLevel1Response::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArena());
}
inline std::string* DRKeyLevel1Response::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* DRKeyLevel1Response::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeyLevel1Response.key)
  return _impl_.key_.Release();
}
inline void DRKeyLevel1Response::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeyLevel1Response.key)
}

// -------------------------------------------------------------------

// DRKeyIntraLevel1Request

// .google.protobuf.Timestamp val_time = 1;
inline bool DRKeyIntraLevel1Request::has_val_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.val_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& DRKeyIntraLevel1Request::_internal_val_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.val_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& DRKeyIntraLevel1Request::val_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyIntraLevel1Request.val_time)
  return _internal_val_time();
}
inline void DRKeyIntraLevel1Request::unsafe_arena_set_allocated_val_time(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.val_time_);
  }
  _impl_.val_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.DRKeyIntraLevel1Request.val_time)
}
inline ::google::protobuf::Timestamp* DRKeyIntraLevel1Request::release_val_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.val_time_;
  _impl_.val_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* DRKeyIntraLevel1Request::unsafe_arena_release_val_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeyIntraLevel1Request.val_time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.val_time_;
  _impl_.val_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* DRKeyIntraLevel1Request::_internal_mutable_val_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.val_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.val_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.val_time_;
}
inline ::google::protobuf::Timestamp* DRKeyIntraLevel1Request::mutable_val_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_val_time();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeyIntraLevel1Request.val_time)
  return _msg;
}
inline void DRKeyIntraLevel1Request::set_allocated_val_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.val_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.val_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeyIntraLevel1Request.val_time)
}

// .proto.drkey.v1.Protocol protocol_id = 2;
inline void DRKeyIntraLevel1Request::clear_protocol_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.protocol_id_ = 0;
}
inline ::proto::drkey::v1::Protocol DRKeyIntraLevel1Request::protocol_id() const {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyIntraLevel1Request.protocol_id)
  return _internal_protocol_id();
}
inline void DRKeyIntraLevel1Request::set_protocol_id(::proto::drkey::v1::Protocol value) {
  _internal_set_protocol_id(value);
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.DRKeyIntraLevel1Request.protocol_id)
}
inline ::proto::drkey::v1::Protocol DRKeyIntraLevel1Request::_internal_protocol_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::proto::drkey::v1::Protocol>(_impl_.protocol_id_);
}
inline void DRKeyIntraLevel1Request::_internal_set_protocol_id(::proto::drkey::v1::Protocol value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.protocol_id_ = value;
}

// uint64 src_ia = 3;
inline void DRKeyIntraLevel1Request::clear_src_ia() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.src_ia_ = ::uint64_t{0u};
}
inline ::uint64_t DRKeyIntraLevel1Request::src_ia() const {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyIntraLevel1Request.src_ia)
  return _internal_src_ia();
}
inline void DRKeyIntraLevel1Request::set_src_ia(::uint64_t value) {
  _internal_set_src_ia(value);
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.DRKeyIntraLevel1Request.src_ia)
}
inline ::uint64_t DRKeyIntraLevel1Request::_internal_src_ia() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.src_ia_;
}
inline void DRKeyIntraLevel1Request::_internal_set_src_ia(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.src_ia_ = value;
}

// uint64 dst_ia = 4;
inline void DRKeyIntraLevel1Request::clear_dst_ia() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dst_ia_ = ::uint64_t{0u};
}
inline ::uint64_t DRKeyIntraLevel1Request::dst_ia() const {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyIntraLevel1Request.dst_ia)
  return _internal_dst_ia();
}
inline void DRKeyIntraLevel1Request::set_dst_ia(::uint64_t value) {
  _internal_set_dst_ia(value);
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.DRKeyIntraLevel1Request.dst_ia)
}
inline ::uint64_t DRKeyIntraLevel1Request::_internal_dst_ia() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dst_ia_;
}
inline void DRKeyIntraLevel1Request::_internal_set_dst_ia(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dst_ia_ = value;
}

// -------------------------------------------------------------------

// DRKeyIntraLevel1Response

// .google.protobuf.Timestamp epoch_begin = 1;
inline bool DRKeyIntraLevel1Response::has_epoch_begin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.epoch_begin_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& DRKeyIntraLevel1Response::_internal_epoch_begin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.epoch_begin_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& DRKeyIntraLevel1Response::epoch_begin() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyIntraLevel1Response.epoch_begin)
  return _internal_epoch_begin();
}
inline void DRKeyIntraLevel1Response::unsafe_arena_set_allocated_epoch_begin(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_begin_);
  }
  _impl_.epoch_begin_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.DRKeyIntraLevel1Response.epoch_begin)
}
inline ::google::protobuf::Timestamp* DRKeyIntraLevel1Response::release_epoch_begin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.epoch_begin_;
  _impl_.epoch_begin_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* DRKeyIntraLevel1Response::unsafe_arena_release_epoch_begin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeyIntraLevel1Response.epoch_begin)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.epoch_begin_;
  _impl_.epoch_begin_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* DRKeyIntraLevel1Response::_internal_mutable_epoch_begin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.epoch_begin_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.epoch_begin_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.epoch_begin_;
}
inline ::google::protobuf::Timestamp* DRKeyIntraLevel1Response::mutable_epoch_begin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_epoch_begin();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeyIntraLevel1Response.epoch_begin)
  return _msg;
}
inline void DRKeyIntraLevel1Response::set_allocated_epoch_begin(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_begin_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.epoch_begin_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeyIntraLevel1Response.epoch_begin)
}

// .google.protobuf.Timestamp epoch_end = 2;
inline bool DRKeyIntraLevel1Response::has_epoch_end() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.epoch_end_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& DRKeyIntraLevel1Response::_internal_epoch_end() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.epoch_end_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& DRKeyIntraLevel1Response::epoch_end() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyIntraLevel1Response.epoch_end)
  return _internal_epoch_end();
}
inline void DRKeyIntraLevel1Response::unsafe_arena_set_allocated_epoch_end(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_end_);
  }
  _impl_.epoch_end_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.DRKeyIntraLevel1Response.epoch_end)
}
inline ::google::protobuf::Timestamp* DRKeyIntraLevel1Response::release_epoch_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.epoch_end_;
  _impl_.epoch_end_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* DRKeyIntraLevel1Response::unsafe_arena_release_epoch_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeyIntraLevel1Response.epoch_end)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.epoch_end_;
  _impl_.epoch_end_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* DRKeyIntraLevel1Response::_internal_mutable_epoch_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.epoch_end_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.epoch_end_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.epoch_end_;
}
inline ::google::protobuf::Timestamp* DRKeyIntraLevel1Response::mutable_epoch_end() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_epoch_end();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeyIntraLevel1Response.epoch_end)
  return _msg;
}
inline void DRKeyIntraLevel1Response::set_allocated_epoch_end(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_end_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.epoch_end_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeyIntraLevel1Response.epoch_end)
}

// bytes key = 3;
inline void DRKeyIntraLevel1Response::clear_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& DRKeyIntraLevel1Response::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyIntraLevel1Response.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DRKeyIntraLevel1Response::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.DRKeyIntraLevel1Response.key)
}
inline std::string* DRKeyIntraLevel1Response::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeyIntraLevel1Response.key)
  return _s;
}
inline const std::string& DRKeyIntraLevel1Response::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void DRKeyIntraLevel1Response::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArena());
}
inline std::string* DRKeyIntraLevel1Response::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* DRKeyIntraLevel1Response::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeyIntraLevel1Response.key)
  return _impl_.key_.Release();
}
inline void DRKeyIntraLevel1Response::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeyIntraLevel1Response.key)
}

// -------------------------------------------------------------------

// DRKeyHostASRequest

// .google.protobuf.Timestamp val_time = 1;
inline bool DRKeyHostASRequest::has_val_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.val_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& DRKeyHostASRequest::_internal_val_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.val_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& DRKeyHostASRequest::val_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyHostASRequest.val_time)
  return _internal_val_time();
}
inline void DRKeyHostASRequest::unsafe_arena_set_allocated_val_time(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.val_time_);
  }
  _impl_.val_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.DRKeyHostASRequest.val_time)
}
inline ::google::protobuf::Timestamp* DRKeyHostASRequest::release_val_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.val_time_;
  _impl_.val_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* DRKeyHostASRequest::unsafe_arena_release_val_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeyHostASRequest.val_time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.val_time_;
  _impl_.val_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* DRKeyHostASRequest::_internal_mutable_val_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.val_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.val_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.val_time_;
}
inline ::google::protobuf::Timestamp* DRKeyHostASRequest::mutable_val_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_val_time();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeyHostASRequest.val_time)
  return _msg;
}
inline void DRKeyHostASRequest::set_allocated_val_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.val_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.val_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeyHostASRequest.val_time)
}

// .proto.drkey.v1.Protocol protocol_id = 2;
inline void DRKeyHostASRequest::clear_protocol_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.protocol_id_ = 0;
}
inline ::proto::drkey::v1::Protocol DRKeyHostASRequest::protocol_id() const {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyHostASRequest.protocol_id)
  return _internal_protocol_id();
}
inline void DRKeyHostASRequest::set_protocol_id(::proto::drkey::v1::Protocol value) {
  _internal_set_protocol_id(value);
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.DRKeyHostASRequest.protocol_id)
}
inline ::proto::drkey::v1::Protocol DRKeyHostASRequest::_internal_protocol_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::proto::drkey::v1::Protocol>(_impl_.protocol_id_);
}
inline void DRKeyHostASRequest::_internal_set_protocol_id(::proto::drkey::v1::Protocol value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.protocol_id_ = value;
}

// uint64 src_ia = 3;
inline void DRKeyHostASRequest::clear_src_ia() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.src_ia_ = ::uint64_t{0u};
}
inline ::uint64_t DRKeyHostASRequest::src_ia() const {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyHostASRequest.src_ia)
  return _internal_src_ia();
}
inline void DRKeyHostASRequest::set_src_ia(::uint64_t value) {
  _internal_set_src_ia(value);
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.DRKeyHostASRequest.src_ia)
}
inline ::uint64_t DRKeyHostASRequest::_internal_src_ia() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.src_ia_;
}
inline void DRKeyHostASRequest::_internal_set_src_ia(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.src_ia_ = value;
}

// uint64 dst_ia = 4;
inline void DRKeyHostASRequest::clear_dst_ia() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dst_ia_ = ::uint64_t{0u};
}
inline ::uint64_t DRKeyHostASRequest::dst_ia() const {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyHostASRequest.dst_ia)
  return _internal_dst_ia();
}
inline void DRKeyHostASRequest::set_dst_ia(::uint64_t value) {
  _internal_set_dst_ia(value);
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.DRKeyHostASRequest.dst_ia)
}
inline ::uint64_t DRKeyHostASRequest::_internal_dst_ia() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dst_ia_;
}
inline void DRKeyHostASRequest::_internal_set_dst_ia(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dst_ia_ = value;
}

// string src_host = 5;
inline void DRKeyHostASRequest::clear_src_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.src_host_.ClearToEmpty();
}
inline const std::string& DRKeyHostASRequest::src_host() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyHostASRequest.src_host)
  return _internal_src_host();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DRKeyHostASRequest::set_src_host(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.src_host_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.DRKeyHostASRequest.src_host)
}
inline std::string* DRKeyHostASRequest::mutable_src_host() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_src_host();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeyHostASRequest.src_host)
  return _s;
}
inline const std::string& DRKeyHostASRequest::_internal_src_host() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.src_host_.Get();
}
inline void DRKeyHostASRequest::_internal_set_src_host(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.src_host_.Set(value, GetArena());
}
inline std::string* DRKeyHostASRequest::_internal_mutable_src_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.src_host_.Mutable( GetArena());
}
inline std::string* DRKeyHostASRequest::release_src_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeyHostASRequest.src_host)
  return _impl_.src_host_.Release();
}
inline void DRKeyHostASRequest::set_allocated_src_host(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.src_host_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.src_host_.IsDefault()) {
          _impl_.src_host_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeyHostASRequest.src_host)
}

// -------------------------------------------------------------------

// DRKeyHostASResponse

// .google.protobuf.Timestamp epoch_begin = 1;
inline bool DRKeyHostASResponse::has_epoch_begin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.epoch_begin_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& DRKeyHostASResponse::_internal_epoch_begin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.epoch_begin_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& DRKeyHostASResponse::epoch_begin() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyHostASResponse.epoch_begin)
  return _internal_epoch_begin();
}
inline void DRKeyHostASResponse::unsafe_arena_set_allocated_epoch_begin(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_begin_);
  }
  _impl_.epoch_begin_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.DRKeyHostASResponse.epoch_begin)
}
inline ::google::protobuf::Timestamp* DRKeyHostASResponse::release_epoch_begin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.epoch_begin_;
  _impl_.epoch_begin_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* DRKeyHostASResponse::unsafe_arena_release_epoch_begin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeyHostASResponse.epoch_begin)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.epoch_begin_;
  _impl_.epoch_begin_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* DRKeyHostASResponse::_internal_mutable_epoch_begin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.epoch_begin_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.epoch_begin_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.epoch_begin_;
}
inline ::google::protobuf::Timestamp* DRKeyHostASResponse::mutable_epoch_begin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_epoch_begin();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeyHostASResponse.epoch_begin)
  return _msg;
}
inline void DRKeyHostASResponse::set_allocated_epoch_begin(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_begin_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.epoch_begin_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeyHostASResponse.epoch_begin)
}

// .google.protobuf.Timestamp epoch_end = 2;
inline bool DRKeyHostASResponse::has_epoch_end() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.epoch_end_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& DRKeyHostASResponse::_internal_epoch_end() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.epoch_end_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& DRKeyHostASResponse::epoch_end() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyHostASResponse.epoch_end)
  return _internal_epoch_end();
}
inline void DRKeyHostASResponse::unsafe_arena_set_allocated_epoch_end(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_end_);
  }
  _impl_.epoch_end_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.DRKeyHostASResponse.epoch_end)
}
inline ::google::protobuf::Timestamp* DRKeyHostASResponse::release_epoch_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.epoch_end_;
  _impl_.epoch_end_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* DRKeyHostASResponse::unsafe_arena_release_epoch_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeyHostASResponse.epoch_end)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.epoch_end_;
  _impl_.epoch_end_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* DRKeyHostASResponse::_internal_mutable_epoch_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.epoch_end_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.epoch_end_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.epoch_end_;
}
inline ::google::protobuf::Timestamp* DRKeyHostASResponse::mutable_epoch_end() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_epoch_end();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeyHostASResponse.epoch_end)
  return _msg;
}
inline void DRKeyHostASResponse::set_allocated_epoch_end(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_end_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.epoch_end_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeyHostASResponse.epoch_end)
}

// bytes key = 3;
inline void DRKeyHostASResponse::clear_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& DRKeyHostASResponse::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyHostASResponse.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DRKeyHostASResponse::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.DRKeyHostASResponse.key)
}
inline std::string* DRKeyHostASResponse::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeyHostASResponse.key)
  return _s;
}
inline const std::string& DRKeyHostASResponse::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void DRKeyHostASResponse::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArena());
}
inline std::string* DRKeyHostASResponse::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* DRKeyHostASResponse::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeyHostASResponse.key)
  return _impl_.key_.Release();
}
inline void DRKeyHostASResponse::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeyHostASResponse.key)
}

// -------------------------------------------------------------------

// DRKeyASHostRequest

// .google.protobuf.Timestamp val_time = 1;
inline bool DRKeyASHostRequest::has_val_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.val_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& DRKeyASHostRequest::_internal_val_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.val_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& DRKeyASHostRequest::val_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyASHostRequest.val_time)
  return _internal_val_time();
}
inline void DRKeyASHostRequest::unsafe_arena_set_allocated_val_time(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.val_time_);
  }
  _impl_.val_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.DRKeyASHostRequest.val_time)
}
inline ::google::protobuf::Timestamp* DRKeyASHostRequest::release_val_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.val_time_;
  _impl_.val_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* DRKeyASHostRequest::unsafe_arena_release_val_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeyASHostRequest.val_time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.val_time_;
  _impl_.val_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* DRKeyASHostRequest::_internal_mutable_val_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.val_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.val_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.val_time_;
}
inline ::google::protobuf::Timestamp* DRKeyASHostRequest::mutable_val_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_val_time();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeyASHostRequest.val_time)
  return _msg;
}
inline void DRKeyASHostRequest::set_allocated_val_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.val_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.val_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeyASHostRequest.val_time)
}

// .proto.drkey.v1.Protocol protocol_id = 2;
inline void DRKeyASHostRequest::clear_protocol_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.protocol_id_ = 0;
}
inline ::proto::drkey::v1::Protocol DRKeyASHostRequest::protocol_id() const {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyASHostRequest.protocol_id)
  return _internal_protocol_id();
}
inline void DRKeyASHostRequest::set_protocol_id(::proto::drkey::v1::Protocol value) {
  _internal_set_protocol_id(value);
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.DRKeyASHostRequest.protocol_id)
}
inline ::proto::drkey::v1::Protocol DRKeyASHostRequest::_internal_protocol_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::proto::drkey::v1::Protocol>(_impl_.protocol_id_);
}
inline void DRKeyASHostRequest::_internal_set_protocol_id(::proto::drkey::v1::Protocol value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.protocol_id_ = value;
}

// uint64 src_ia = 3;
inline void DRKeyASHostRequest::clear_src_ia() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.src_ia_ = ::uint64_t{0u};
}
inline ::uint64_t DRKeyASHostRequest::src_ia() const {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyASHostRequest.src_ia)
  return _internal_src_ia();
}
inline void DRKeyASHostRequest::set_src_ia(::uint64_t value) {
  _internal_set_src_ia(value);
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.DRKeyASHostRequest.src_ia)
}
inline ::uint64_t DRKeyASHostRequest::_internal_src_ia() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.src_ia_;
}
inline void DRKeyASHostRequest::_internal_set_src_ia(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.src_ia_ = value;
}

// uint64 dst_ia = 4;
inline void DRKeyASHostRequest::clear_dst_ia() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dst_ia_ = ::uint64_t{0u};
}
inline ::uint64_t DRKeyASHostRequest::dst_ia() const {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyASHostRequest.dst_ia)
  return _internal_dst_ia();
}
inline void DRKeyASHostRequest::set_dst_ia(::uint64_t value) {
  _internal_set_dst_ia(value);
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.DRKeyASHostRequest.dst_ia)
}
inline ::uint64_t DRKeyASHostRequest::_internal_dst_ia() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dst_ia_;
}
inline void DRKeyASHostRequest::_internal_set_dst_ia(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dst_ia_ = value;
}

// string dst_host = 5;
inline void DRKeyASHostRequest::clear_dst_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dst_host_.ClearToEmpty();
}
inline const std::string& DRKeyASHostRequest::dst_host() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyASHostRequest.dst_host)
  return _internal_dst_host();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DRKeyASHostRequest::set_dst_host(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dst_host_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.DRKeyASHostRequest.dst_host)
}
inline std::string* DRKeyASHostRequest::mutable_dst_host() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dst_host();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeyASHostRequest.dst_host)
  return _s;
}
inline const std::string& DRKeyASHostRequest::_internal_dst_host() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dst_host_.Get();
}
inline void DRKeyASHostRequest::_internal_set_dst_host(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dst_host_.Set(value, GetArena());
}
inline std::string* DRKeyASHostRequest::_internal_mutable_dst_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.dst_host_.Mutable( GetArena());
}
inline std::string* DRKeyASHostRequest::release_dst_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeyASHostRequest.dst_host)
  return _impl_.dst_host_.Release();
}
inline void DRKeyASHostRequest::set_allocated_dst_host(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dst_host_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.dst_host_.IsDefault()) {
          _impl_.dst_host_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeyASHostRequest.dst_host)
}

// -------------------------------------------------------------------

// DRKeyASHostResponse

// .google.protobuf.Timestamp epoch_begin = 1;
inline bool DRKeyASHostResponse::has_epoch_begin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.epoch_begin_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& DRKeyASHostResponse::_internal_epoch_begin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.epoch_begin_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& DRKeyASHostResponse::epoch_begin() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyASHostResponse.epoch_begin)
  return _internal_epoch_begin();
}
inline void DRKeyASHostResponse::unsafe_arena_set_allocated_epoch_begin(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_begin_);
  }
  _impl_.epoch_begin_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.DRKeyASHostResponse.epoch_begin)
}
inline ::google::protobuf::Timestamp* DRKeyASHostResponse::release_epoch_begin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.epoch_begin_;
  _impl_.epoch_begin_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* DRKeyASHostResponse::unsafe_arena_release_epoch_begin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeyASHostResponse.epoch_begin)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.epoch_begin_;
  _impl_.epoch_begin_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* DRKeyASHostResponse::_internal_mutable_epoch_begin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.epoch_begin_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.epoch_begin_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.epoch_begin_;
}
inline ::google::protobuf::Timestamp* DRKeyASHostResponse::mutable_epoch_begin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_epoch_begin();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeyASHostResponse.epoch_begin)
  return _msg;
}
inline void DRKeyASHostResponse::set_allocated_epoch_begin(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_begin_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.epoch_begin_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeyASHostResponse.epoch_begin)
}

// .google.protobuf.Timestamp epoch_end = 2;
inline bool DRKeyASHostResponse::has_epoch_end() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.epoch_end_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& DRKeyASHostResponse::_internal_epoch_end() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.epoch_end_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& DRKeyASHostResponse::epoch_end() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyASHostResponse.epoch_end)
  return _internal_epoch_end();
}
inline void DRKeyASHostResponse::unsafe_arena_set_allocated_epoch_end(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_end_);
  }
  _impl_.epoch_end_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.DRKeyASHostResponse.epoch_end)
}
inline ::google::protobuf::Timestamp* DRKeyASHostResponse::release_epoch_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.epoch_end_;
  _impl_.epoch_end_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* DRKeyASHostResponse::unsafe_arena_release_epoch_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeyASHostResponse.epoch_end)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.epoch_end_;
  _impl_.epoch_end_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* DRKeyASHostResponse::_internal_mutable_epoch_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.epoch_end_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.epoch_end_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.epoch_end_;
}
inline ::google::protobuf::Timestamp* DRKeyASHostResponse::mutable_epoch_end() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_epoch_end();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeyASHostResponse.epoch_end)
  return _msg;
}
inline void DRKeyASHostResponse::set_allocated_epoch_end(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_end_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.epoch_end_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeyASHostResponse.epoch_end)
}

// bytes key = 3;
inline void DRKeyASHostResponse::clear_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& DRKeyASHostResponse::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyASHostResponse.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DRKeyASHostResponse::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.DRKeyASHostResponse.key)
}
inline std::string* DRKeyASHostResponse::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeyASHostResponse.key)
  return _s;
}
inline const std::string& DRKeyASHostResponse::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void DRKeyASHostResponse::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArena());
}
inline std::string* DRKeyASHostResponse::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* DRKeyASHostResponse::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeyASHostResponse.key)
  return _impl_.key_.Release();
}
inline void DRKeyASHostResponse::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeyASHostResponse.key)
}

// -------------------------------------------------------------------

// DRKeyHostHostRequest

// .google.protobuf.Timestamp val_time = 1;
inline bool DRKeyHostHostRequest::has_val_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.val_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& DRKeyHostHostRequest::_internal_val_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.val_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& DRKeyHostHostRequest::val_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyHostHostRequest.val_time)
  return _internal_val_time();
}
inline void DRKeyHostHostRequest::unsafe_arena_set_allocated_val_time(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.val_time_);
  }
  _impl_.val_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.DRKeyHostHostRequest.val_time)
}
inline ::google::protobuf::Timestamp* DRKeyHostHostRequest::release_val_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.val_time_;
  _impl_.val_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* DRKeyHostHostRequest::unsafe_arena_release_val_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeyHostHostRequest.val_time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.val_time_;
  _impl_.val_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* DRKeyHostHostRequest::_internal_mutable_val_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.val_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.val_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.val_time_;
}
inline ::google::protobuf::Timestamp* DRKeyHostHostRequest::mutable_val_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_val_time();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeyHostHostRequest.val_time)
  return _msg;
}
inline void DRKeyHostHostRequest::set_allocated_val_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.val_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.val_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeyHostHostRequest.val_time)
}

// .proto.drkey.v1.Protocol protocol_id = 2;
inline void DRKeyHostHostRequest::clear_protocol_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.protocol_id_ = 0;
}
inline ::proto::drkey::v1::Protocol DRKeyHostHostRequest::protocol_id() const {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyHostHostRequest.protocol_id)
  return _internal_protocol_id();
}
inline void DRKeyHostHostRequest::set_protocol_id(::proto::drkey::v1::Protocol value) {
  _internal_set_protocol_id(value);
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.DRKeyHostHostRequest.protocol_id)
}
inline ::proto::drkey::v1::Protocol DRKeyHostHostRequest::_internal_protocol_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::proto::drkey::v1::Protocol>(_impl_.protocol_id_);
}
inline void DRKeyHostHostRequest::_internal_set_protocol_id(::proto::drkey::v1::Protocol value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.protocol_id_ = value;
}

// uint64 src_ia = 3;
inline void DRKeyHostHostRequest::clear_src_ia() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.src_ia_ = ::uint64_t{0u};
}
inline ::uint64_t DRKeyHostHostRequest::src_ia() const {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyHostHostRequest.src_ia)
  return _internal_src_ia();
}
inline void DRKeyHostHostRequest::set_src_ia(::uint64_t value) {
  _internal_set_src_ia(value);
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.DRKeyHostHostRequest.src_ia)
}
inline ::uint64_t DRKeyHostHostRequest::_internal_src_ia() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.src_ia_;
}
inline void DRKeyHostHostRequest::_internal_set_src_ia(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.src_ia_ = value;
}

// uint64 dst_ia = 4;
inline void DRKeyHostHostRequest::clear_dst_ia() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dst_ia_ = ::uint64_t{0u};
}
inline ::uint64_t DRKeyHostHostRequest::dst_ia() const {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyHostHostRequest.dst_ia)
  return _internal_dst_ia();
}
inline void DRKeyHostHostRequest::set_dst_ia(::uint64_t value) {
  _internal_set_dst_ia(value);
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.DRKeyHostHostRequest.dst_ia)
}
inline ::uint64_t DRKeyHostHostRequest::_internal_dst_ia() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dst_ia_;
}
inline void DRKeyHostHostRequest::_internal_set_dst_ia(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dst_ia_ = value;
}

// string src_host = 5;
inline void DRKeyHostHostRequest::clear_src_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.src_host_.ClearToEmpty();
}
inline const std::string& DRKeyHostHostRequest::src_host() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyHostHostRequest.src_host)
  return _internal_src_host();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DRKeyHostHostRequest::set_src_host(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.src_host_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.DRKeyHostHostRequest.src_host)
}
inline std::string* DRKeyHostHostRequest::mutable_src_host() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_src_host();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeyHostHostRequest.src_host)
  return _s;
}
inline const std::string& DRKeyHostHostRequest::_internal_src_host() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.src_host_.Get();
}
inline void DRKeyHostHostRequest::_internal_set_src_host(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.src_host_.Set(value, GetArena());
}
inline std::string* DRKeyHostHostRequest::_internal_mutable_src_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.src_host_.Mutable( GetArena());
}
inline std::string* DRKeyHostHostRequest::release_src_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeyHostHostRequest.src_host)
  return _impl_.src_host_.Release();
}
inline void DRKeyHostHostRequest::set_allocated_src_host(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.src_host_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.src_host_.IsDefault()) {
          _impl_.src_host_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeyHostHostRequest.src_host)
}

// string dst_host = 6;
inline void DRKeyHostHostRequest::clear_dst_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dst_host_.ClearToEmpty();
}
inline const std::string& DRKeyHostHostRequest::dst_host() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyHostHostRequest.dst_host)
  return _internal_dst_host();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DRKeyHostHostRequest::set_dst_host(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dst_host_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.DRKeyHostHostRequest.dst_host)
}
inline std::string* DRKeyHostHostRequest::mutable_dst_host() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dst_host();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeyHostHostRequest.dst_host)
  return _s;
}
inline const std::string& DRKeyHostHostRequest::_internal_dst_host() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dst_host_.Get();
}
inline void DRKeyHostHostRequest::_internal_set_dst_host(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dst_host_.Set(value, GetArena());
}
inline std::string* DRKeyHostHostRequest::_internal_mutable_dst_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.dst_host_.Mutable( GetArena());
}
inline std::string* DRKeyHostHostRequest::release_dst_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeyHostHostRequest.dst_host)
  return _impl_.dst_host_.Release();
}
inline void DRKeyHostHostRequest::set_allocated_dst_host(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dst_host_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.dst_host_.IsDefault()) {
          _impl_.dst_host_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeyHostHostRequest.dst_host)
}

// -------------------------------------------------------------------

// DRKeyHostHostResponse

// .google.protobuf.Timestamp epoch_begin = 1;
inline bool DRKeyHostHostResponse::has_epoch_begin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.epoch_begin_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& DRKeyHostHostResponse::_internal_epoch_begin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.epoch_begin_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& DRKeyHostHostResponse::epoch_begin() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyHostHostResponse.epoch_begin)
  return _internal_epoch_begin();
}
inline void DRKeyHostHostResponse::unsafe_arena_set_allocated_epoch_begin(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_begin_);
  }
  _impl_.epoch_begin_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.DRKeyHostHostResponse.epoch_begin)
}
inline ::google::protobuf::Timestamp* DRKeyHostHostResponse::release_epoch_begin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.epoch_begin_;
  _impl_.epoch_begin_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* DRKeyHostHostResponse::unsafe_arena_release_epoch_begin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeyHostHostResponse.epoch_begin)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.epoch_begin_;
  _impl_.epoch_begin_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* DRKeyHostHostResponse::_internal_mutable_epoch_begin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.epoch_begin_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.epoch_begin_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.epoch_begin_;
}
inline ::google::protobuf::Timestamp* DRKeyHostHostResponse::mutable_epoch_begin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_epoch_begin();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeyHostHostResponse.epoch_begin)
  return _msg;
}
inline void DRKeyHostHostResponse::set_allocated_epoch_begin(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_begin_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.epoch_begin_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeyHostHostResponse.epoch_begin)
}

// .google.protobuf.Timestamp epoch_end = 2;
inline bool DRKeyHostHostResponse::has_epoch_end() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.epoch_end_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& DRKeyHostHostResponse::_internal_epoch_end() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.epoch_end_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& DRKeyHostHostResponse::epoch_end() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyHostHostResponse.epoch_end)
  return _internal_epoch_end();
}
inline void DRKeyHostHostResponse::unsafe_arena_set_allocated_epoch_end(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_end_);
  }
  _impl_.epoch_end_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.DRKeyHostHostResponse.epoch_end)
}
inline ::google::protobuf::Timestamp* DRKeyHostHostResponse::release_epoch_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.epoch_end_;
  _impl_.epoch_end_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* DRKeyHostHostResponse::unsafe_arena_release_epoch_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeyHostHostResponse.epoch_end)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.epoch_end_;
  _impl_.epoch_end_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* DRKeyHostHostResponse::_internal_mutable_epoch_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.epoch_end_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.epoch_end_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.epoch_end_;
}
inline ::google::protobuf::Timestamp* DRKeyHostHostResponse::mutable_epoch_end() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_epoch_end();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeyHostHostResponse.epoch_end)
  return _msg;
}
inline void DRKeyHostHostResponse::set_allocated_epoch_end(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epoch_end_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.epoch_end_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeyHostHostResponse.epoch_end)
}

// bytes key = 3;
inline void DRKeyHostHostResponse::clear_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& DRKeyHostHostResponse::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DRKeyHostHostResponse.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DRKeyHostHostResponse::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.DRKeyHostHostResponse.key)
}
inline std::string* DRKeyHostHostResponse::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DRKeyHostHostResponse.key)
  return _s;
}
inline const std::string& DRKeyHostHostResponse::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void DRKeyHostHostResponse::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArena());
}
inline std::string* DRKeyHostHostResponse::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* DRKeyHostHostResponse::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DRKeyHostHostResponse.key)
  return _impl_.key_.Release();
}
inline void DRKeyHostHostResponse::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DRKeyHostHostResponse.key)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace control_plane
}  // namespace proto


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_proto_2fcontrol_5fplane_2fv1_2fdrkey_2eproto_2epb_2eh
