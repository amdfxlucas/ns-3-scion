// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/control_plane/v1/cppki.proto
// Protobuf C++ Version: 4.24.0-main

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2fcontrol_5fplane_2fv1_2fcppki_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_proto_2fcontrol_5fplane_2fv1_2fcppki_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2fcontrol_5fplane_2fv1_2fcppki_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fcontrol_5fplane_2fv1_2fcppki_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_proto_2fcontrol_5fplane_2fv1_2fcppki_2eproto;
namespace proto {
namespace control_plane {
namespace v1 {
class Chain;
struct ChainDefaultTypeInternal;
extern ChainDefaultTypeInternal _Chain_default_instance_;
class ChainsRequest;
struct ChainsRequestDefaultTypeInternal;
extern ChainsRequestDefaultTypeInternal _ChainsRequest_default_instance_;
class ChainsResponse;
struct ChainsResponseDefaultTypeInternal;
extern ChainsResponseDefaultTypeInternal _ChainsResponse_default_instance_;
class TRCRequest;
struct TRCRequestDefaultTypeInternal;
extern TRCRequestDefaultTypeInternal _TRCRequest_default_instance_;
class TRCResponse;
struct TRCResponseDefaultTypeInternal;
extern TRCResponseDefaultTypeInternal _TRCResponse_default_instance_;
class VerificationKeyID;
struct VerificationKeyIDDefaultTypeInternal;
extern VerificationKeyIDDefaultTypeInternal _VerificationKeyID_default_instance_;
}  // namespace v1
}  // namespace control_plane
}  // namespace proto
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace proto {
namespace control_plane {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class VerificationKeyID final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.VerificationKeyID) */ {
 public:
  inline VerificationKeyID() : VerificationKeyID(nullptr) {}
  ~VerificationKeyID() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VerificationKeyID(::google::protobuf::internal::ConstantInitialized);

  inline VerificationKeyID(const VerificationKeyID& from)
      : VerificationKeyID(nullptr, from) {}
  VerificationKeyID(VerificationKeyID&& from) noexcept
    : VerificationKeyID() {
    *this = ::std::move(from);
  }

  inline VerificationKeyID& operator=(const VerificationKeyID& from) {
    CopyFrom(from);
    return *this;
  }
  inline VerificationKeyID& operator=(VerificationKeyID&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VerificationKeyID& default_instance() {
    return *internal_default_instance();
  }
  static inline const VerificationKeyID* internal_default_instance() {
    return reinterpret_cast<const VerificationKeyID*>(
               &_VerificationKeyID_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(VerificationKeyID& a, VerificationKeyID& b) {
    a.Swap(&b);
  }
  inline void Swap(VerificationKeyID* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VerificationKeyID* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VerificationKeyID* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VerificationKeyID>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VerificationKeyID& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const VerificationKeyID& from) {
    VerificationKeyID::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VerificationKeyID* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.VerificationKeyID";
  }
  protected:
  explicit VerificationKeyID(::google::protobuf::Arena* arena);
  VerificationKeyID(::google::protobuf::Arena* arena, const VerificationKeyID& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubjectKeyIdFieldNumber = 2,
    kIsdAsFieldNumber = 1,
    kTrcBaseFieldNumber = 3,
    kTrcSerialFieldNumber = 4,
  };
  // bytes subject_key_id = 2;
  void clear_subject_key_id() ;
  const std::string& subject_key_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subject_key_id(Arg_&& arg, Args_... args);
  std::string* mutable_subject_key_id();
  PROTOBUF_NODISCARD std::string* release_subject_key_id();
  void set_allocated_subject_key_id(std::string* value);

  private:
  const std::string& _internal_subject_key_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subject_key_id(
      const std::string& value);
  std::string* _internal_mutable_subject_key_id();

  public:
  // uint64 isd_as = 1;
  void clear_isd_as() ;
  ::uint64_t isd_as() const;
  void set_isd_as(::uint64_t value);

  private:
  ::uint64_t _internal_isd_as() const;
  void _internal_set_isd_as(::uint64_t value);

  public:
  // uint64 trc_base = 3;
  void clear_trc_base() ;
  ::uint64_t trc_base() const;
  void set_trc_base(::uint64_t value);

  private:
  ::uint64_t _internal_trc_base() const;
  void _internal_set_trc_base(::uint64_t value);

  public:
  // uint64 trc_serial = 4;
  void clear_trc_serial() ;
  ::uint64_t trc_serial() const;
  void set_trc_serial(::uint64_t value);

  private:
  ::uint64_t _internal_trc_serial() const;
  void _internal_set_trc_serial(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.VerificationKeyID)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr subject_key_id_;
    ::uint64_t isd_as_;
    ::uint64_t trc_base_;
    ::uint64_t trc_serial_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fcppki_2eproto;
};// -------------------------------------------------------------------

class TRCResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.TRCResponse) */ {
 public:
  inline TRCResponse() : TRCResponse(nullptr) {}
  ~TRCResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TRCResponse(::google::protobuf::internal::ConstantInitialized);

  inline TRCResponse(const TRCResponse& from)
      : TRCResponse(nullptr, from) {}
  TRCResponse(TRCResponse&& from) noexcept
    : TRCResponse() {
    *this = ::std::move(from);
  }

  inline TRCResponse& operator=(const TRCResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TRCResponse& operator=(TRCResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TRCResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TRCResponse* internal_default_instance() {
    return reinterpret_cast<const TRCResponse*>(
               &_TRCResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(TRCResponse& a, TRCResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(TRCResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TRCResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TRCResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TRCResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TRCResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TRCResponse& from) {
    TRCResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TRCResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.TRCResponse";
  }
  protected:
  explicit TRCResponse(::google::protobuf::Arena* arena);
  TRCResponse(::google::protobuf::Arena* arena, const TRCResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrcFieldNumber = 1,
  };
  // bytes trc = 1;
  void clear_trc() ;
  const std::string& trc() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_trc(Arg_&& arg, Args_... args);
  std::string* mutable_trc();
  PROTOBUF_NODISCARD std::string* release_trc();
  void set_allocated_trc(std::string* value);

  private:
  const std::string& _internal_trc() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_trc(
      const std::string& value);
  std::string* _internal_mutable_trc();

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.TRCResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr trc_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fcppki_2eproto;
};// -------------------------------------------------------------------

class TRCRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.TRCRequest) */ {
 public:
  inline TRCRequest() : TRCRequest(nullptr) {}
  ~TRCRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TRCRequest(::google::protobuf::internal::ConstantInitialized);

  inline TRCRequest(const TRCRequest& from)
      : TRCRequest(nullptr, from) {}
  TRCRequest(TRCRequest&& from) noexcept
    : TRCRequest() {
    *this = ::std::move(from);
  }

  inline TRCRequest& operator=(const TRCRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TRCRequest& operator=(TRCRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TRCRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TRCRequest* internal_default_instance() {
    return reinterpret_cast<const TRCRequest*>(
               &_TRCRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(TRCRequest& a, TRCRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(TRCRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TRCRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TRCRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TRCRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TRCRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TRCRequest& from) {
    TRCRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TRCRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.TRCRequest";
  }
  protected:
  explicit TRCRequest(::google::protobuf::Arena* arena);
  TRCRequest(::google::protobuf::Arena* arena, const TRCRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBaseFieldNumber = 2,
    kSerialFieldNumber = 3,
    kIsdFieldNumber = 1,
  };
  // uint64 base = 2;
  void clear_base() ;
  ::uint64_t base() const;
  void set_base(::uint64_t value);

  private:
  ::uint64_t _internal_base() const;
  void _internal_set_base(::uint64_t value);

  public:
  // uint64 serial = 3;
  void clear_serial() ;
  ::uint64_t serial() const;
  void set_serial(::uint64_t value);

  private:
  ::uint64_t _internal_serial() const;
  void _internal_set_serial(::uint64_t value);

  public:
  // uint32 isd = 1;
  void clear_isd() ;
  ::uint32_t isd() const;
  void set_isd(::uint32_t value);

  private:
  ::uint32_t _internal_isd() const;
  void _internal_set_isd(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.TRCRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t base_;
    ::uint64_t serial_;
    ::uint32_t isd_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fcppki_2eproto;
};// -------------------------------------------------------------------

class Chain final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.Chain) */ {
 public:
  inline Chain() : Chain(nullptr) {}
  ~Chain() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Chain(::google::protobuf::internal::ConstantInitialized);

  inline Chain(const Chain& from)
      : Chain(nullptr, from) {}
  Chain(Chain&& from) noexcept
    : Chain() {
    *this = ::std::move(from);
  }

  inline Chain& operator=(const Chain& from) {
    CopyFrom(from);
    return *this;
  }
  inline Chain& operator=(Chain&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Chain& default_instance() {
    return *internal_default_instance();
  }
  static inline const Chain* internal_default_instance() {
    return reinterpret_cast<const Chain*>(
               &_Chain_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Chain& a, Chain& b) {
    a.Swap(&b);
  }
  inline void Swap(Chain* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Chain* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Chain* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Chain>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Chain& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Chain& from) {
    Chain::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Chain* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.Chain";
  }
  protected:
  explicit Chain(::google::protobuf::Arena* arena);
  Chain(::google::protobuf::Arena* arena, const Chain& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAsCertFieldNumber = 1,
    kCaCertFieldNumber = 2,
  };
  // bytes as_cert = 1;
  void clear_as_cert() ;
  const std::string& as_cert() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_as_cert(Arg_&& arg, Args_... args);
  std::string* mutable_as_cert();
  PROTOBUF_NODISCARD std::string* release_as_cert();
  void set_allocated_as_cert(std::string* value);

  private:
  const std::string& _internal_as_cert() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_as_cert(
      const std::string& value);
  std::string* _internal_mutable_as_cert();

  public:
  // bytes ca_cert = 2;
  void clear_ca_cert() ;
  const std::string& ca_cert() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ca_cert(Arg_&& arg, Args_... args);
  std::string* mutable_ca_cert();
  PROTOBUF_NODISCARD std::string* release_ca_cert();
  void set_allocated_ca_cert(std::string* value);

  private:
  const std::string& _internal_ca_cert() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ca_cert(
      const std::string& value);
  std::string* _internal_mutable_ca_cert();

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.Chain)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr as_cert_;
    ::google::protobuf::internal::ArenaStringPtr ca_cert_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fcppki_2eproto;
};// -------------------------------------------------------------------

class ChainsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.ChainsResponse) */ {
 public:
  inline ChainsResponse() : ChainsResponse(nullptr) {}
  ~ChainsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ChainsResponse(::google::protobuf::internal::ConstantInitialized);

  inline ChainsResponse(const ChainsResponse& from)
      : ChainsResponse(nullptr, from) {}
  ChainsResponse(ChainsResponse&& from) noexcept
    : ChainsResponse() {
    *this = ::std::move(from);
  }

  inline ChainsResponse& operator=(const ChainsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChainsResponse& operator=(ChainsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChainsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChainsResponse* internal_default_instance() {
    return reinterpret_cast<const ChainsResponse*>(
               &_ChainsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ChainsResponse& a, ChainsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ChainsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChainsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChainsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ChainsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChainsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ChainsResponse& from) {
    ChainsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChainsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.ChainsResponse";
  }
  protected:
  explicit ChainsResponse(::google::protobuf::Arena* arena);
  ChainsResponse(::google::protobuf::Arena* arena, const ChainsResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChainsFieldNumber = 1,
  };
  // repeated .proto.control_plane.v1.Chain chains = 1;
  int chains_size() const;
  private:
  int _internal_chains_size() const;

  public:
  void clear_chains() ;
  ::proto::control_plane::v1::Chain* mutable_chains(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::control_plane::v1::Chain >*
      mutable_chains();
  private:
  const ::google::protobuf::RepeatedPtrField<::proto::control_plane::v1::Chain>& _internal_chains() const;
  ::google::protobuf::RepeatedPtrField<::proto::control_plane::v1::Chain>* _internal_mutable_chains();
  public:
  const ::proto::control_plane::v1::Chain& chains(int index) const;
  ::proto::control_plane::v1::Chain* add_chains();
  const ::google::protobuf::RepeatedPtrField< ::proto::control_plane::v1::Chain >&
      chains() const;
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.ChainsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::proto::control_plane::v1::Chain > chains_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fcppki_2eproto;
};// -------------------------------------------------------------------

class ChainsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.ChainsRequest) */ {
 public:
  inline ChainsRequest() : ChainsRequest(nullptr) {}
  ~ChainsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ChainsRequest(::google::protobuf::internal::ConstantInitialized);

  inline ChainsRequest(const ChainsRequest& from)
      : ChainsRequest(nullptr, from) {}
  ChainsRequest(ChainsRequest&& from) noexcept
    : ChainsRequest() {
    *this = ::std::move(from);
  }

  inline ChainsRequest& operator=(const ChainsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChainsRequest& operator=(ChainsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChainsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChainsRequest* internal_default_instance() {
    return reinterpret_cast<const ChainsRequest*>(
               &_ChainsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ChainsRequest& a, ChainsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ChainsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChainsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChainsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ChainsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChainsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ChainsRequest& from) {
    ChainsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChainsRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.ChainsRequest";
  }
  protected:
  explicit ChainsRequest(::google::protobuf::Arena* arena);
  ChainsRequest(::google::protobuf::Arena* arena, const ChainsRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubjectKeyIdFieldNumber = 2,
    kDateFieldNumber = 3,
    kIsdAsFieldNumber = 1,
  };
  // bytes subject_key_id = 2;
  void clear_subject_key_id() ;
  const std::string& subject_key_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subject_key_id(Arg_&& arg, Args_... args);
  std::string* mutable_subject_key_id();
  PROTOBUF_NODISCARD std::string* release_subject_key_id();
  void set_allocated_subject_key_id(std::string* value);

  private:
  const std::string& _internal_subject_key_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subject_key_id(
      const std::string& value);
  std::string* _internal_mutable_subject_key_id();

  public:
  // .google.protobuf.Timestamp date = 3;
  bool has_date() const;
  void clear_date() ;
  const ::google::protobuf::Timestamp& date() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_date();
  ::google::protobuf::Timestamp* mutable_date();
  void set_allocated_date(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_date(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_date();

  private:
  const ::google::protobuf::Timestamp& _internal_date() const;
  ::google::protobuf::Timestamp* _internal_mutable_date();

  public:
  // uint64 isd_as = 1;
  void clear_isd_as() ;
  ::uint64_t isd_as() const;
  void set_isd_as(::uint64_t value);

  private:
  ::uint64_t _internal_isd_as() const;
  void _internal_set_isd_as(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.ChainsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr subject_key_id_;
    ::google::protobuf::Timestamp* date_;
    ::uint64_t isd_as_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fcppki_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ChainsRequest

// uint64 isd_as = 1;
inline void ChainsRequest::clear_isd_as() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.isd_as_ = ::uint64_t{0u};
}
inline ::uint64_t ChainsRequest::isd_as() const {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.ChainsRequest.isd_as)
  return _internal_isd_as();
}
inline void ChainsRequest::set_isd_as(::uint64_t value) {
  _internal_set_isd_as(value);
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.ChainsRequest.isd_as)
}
inline ::uint64_t ChainsRequest::_internal_isd_as() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.isd_as_;
}
inline void ChainsRequest::_internal_set_isd_as(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.isd_as_ = value;
}

// bytes subject_key_id = 2;
inline void ChainsRequest::clear_subject_key_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subject_key_id_.ClearToEmpty();
}
inline const std::string& ChainsRequest::subject_key_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.ChainsRequest.subject_key_id)
  return _internal_subject_key_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChainsRequest::set_subject_key_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subject_key_id_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.ChainsRequest.subject_key_id)
}
inline std::string* ChainsRequest::mutable_subject_key_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subject_key_id();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.ChainsRequest.subject_key_id)
  return _s;
}
inline const std::string& ChainsRequest::_internal_subject_key_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.subject_key_id_.Get();
}
inline void ChainsRequest::_internal_set_subject_key_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subject_key_id_.Set(value, GetArena());
}
inline std::string* ChainsRequest::_internal_mutable_subject_key_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.subject_key_id_.Mutable( GetArena());
}
inline std::string* ChainsRequest::release_subject_key_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.ChainsRequest.subject_key_id)
  return _impl_.subject_key_id_.Release();
}
inline void ChainsRequest::set_allocated_subject_key_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subject_key_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.subject_key_id_.IsDefault()) {
          _impl_.subject_key_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.ChainsRequest.subject_key_id)
}

// .google.protobuf.Timestamp date = 3;
inline bool ChainsRequest::has_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.date_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& ChainsRequest::_internal_date() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.date_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& ChainsRequest::date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.ChainsRequest.date)
  return _internal_date();
}
inline void ChainsRequest::unsafe_arena_set_allocated_date(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.date_);
  }
  _impl_.date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.ChainsRequest.date)
}
inline ::google::protobuf::Timestamp* ChainsRequest::release_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.date_;
  _impl_.date_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* ChainsRequest::unsafe_arena_release_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.ChainsRequest.date)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.date_;
  _impl_.date_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* ChainsRequest::_internal_mutable_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.date_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.date_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.date_;
}
inline ::google::protobuf::Timestamp* ChainsRequest::mutable_date() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_date();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.ChainsRequest.date)
  return _msg;
}
inline void ChainsRequest::set_allocated_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.ChainsRequest.date)
}

// -------------------------------------------------------------------

// ChainsResponse

// repeated .proto.control_plane.v1.Chain chains = 1;
inline int ChainsResponse::_internal_chains_size() const {
  return _internal_chains().size();
}
inline int ChainsResponse::chains_size() const {
  return _internal_chains_size();
}
inline void ChainsResponse::clear_chains() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.chains_.Clear();
}
inline ::proto::control_plane::v1::Chain* ChainsResponse::mutable_chains(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.ChainsResponse.chains)
  return _internal_mutable_chains()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::proto::control_plane::v1::Chain>* ChainsResponse::mutable_chains()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:proto.control_plane.v1.ChainsResponse.chains)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_chains();
}
inline const ::proto::control_plane::v1::Chain& ChainsResponse::chains(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.ChainsResponse.chains)
  return _internal_chains().Get(index);
}
inline ::proto::control_plane::v1::Chain* ChainsResponse::add_chains() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::proto::control_plane::v1::Chain* _add = _internal_mutable_chains()->Add();
  // @@protoc_insertion_point(field_add:proto.control_plane.v1.ChainsResponse.chains)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::proto::control_plane::v1::Chain>& ChainsResponse::chains() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:proto.control_plane.v1.ChainsResponse.chains)
  return _internal_chains();
}
inline const ::google::protobuf::RepeatedPtrField<::proto::control_plane::v1::Chain>&
ChainsResponse::_internal_chains() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.chains_;
}
inline ::google::protobuf::RepeatedPtrField<::proto::control_plane::v1::Chain>*
ChainsResponse::_internal_mutable_chains() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.chains_;
}

// -------------------------------------------------------------------

// Chain

// bytes as_cert = 1;
inline void Chain::clear_as_cert() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.as_cert_.ClearToEmpty();
}
inline const std::string& Chain::as_cert() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.Chain.as_cert)
  return _internal_as_cert();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Chain::set_as_cert(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.as_cert_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.Chain.as_cert)
}
inline std::string* Chain::mutable_as_cert() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_as_cert();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.Chain.as_cert)
  return _s;
}
inline const std::string& Chain::_internal_as_cert() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.as_cert_.Get();
}
inline void Chain::_internal_set_as_cert(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.as_cert_.Set(value, GetArena());
}
inline std::string* Chain::_internal_mutable_as_cert() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.as_cert_.Mutable( GetArena());
}
inline std::string* Chain::release_as_cert() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.Chain.as_cert)
  return _impl_.as_cert_.Release();
}
inline void Chain::set_allocated_as_cert(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.as_cert_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.as_cert_.IsDefault()) {
          _impl_.as_cert_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.Chain.as_cert)
}

// bytes ca_cert = 2;
inline void Chain::clear_ca_cert() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ca_cert_.ClearToEmpty();
}
inline const std::string& Chain::ca_cert() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.Chain.ca_cert)
  return _internal_ca_cert();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Chain::set_ca_cert(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ca_cert_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.Chain.ca_cert)
}
inline std::string* Chain::mutable_ca_cert() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ca_cert();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.Chain.ca_cert)
  return _s;
}
inline const std::string& Chain::_internal_ca_cert() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ca_cert_.Get();
}
inline void Chain::_internal_set_ca_cert(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ca_cert_.Set(value, GetArena());
}
inline std::string* Chain::_internal_mutable_ca_cert() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.ca_cert_.Mutable( GetArena());
}
inline std::string* Chain::release_ca_cert() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.Chain.ca_cert)
  return _impl_.ca_cert_.Release();
}
inline void Chain::set_allocated_ca_cert(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ca_cert_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ca_cert_.IsDefault()) {
          _impl_.ca_cert_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.Chain.ca_cert)
}

// -------------------------------------------------------------------

// TRCRequest

// uint32 isd = 1;
inline void TRCRequest::clear_isd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.isd_ = 0u;
}
inline ::uint32_t TRCRequest::isd() const {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.TRCRequest.isd)
  return _internal_isd();
}
inline void TRCRequest::set_isd(::uint32_t value) {
  _internal_set_isd(value);
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.TRCRequest.isd)
}
inline ::uint32_t TRCRequest::_internal_isd() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.isd_;
}
inline void TRCRequest::_internal_set_isd(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.isd_ = value;
}

// uint64 base = 2;
inline void TRCRequest::clear_base() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.base_ = ::uint64_t{0u};
}
inline ::uint64_t TRCRequest::base() const {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.TRCRequest.base)
  return _internal_base();
}
inline void TRCRequest::set_base(::uint64_t value) {
  _internal_set_base(value);
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.TRCRequest.base)
}
inline ::uint64_t TRCRequest::_internal_base() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.base_;
}
inline void TRCRequest::_internal_set_base(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.base_ = value;
}

// uint64 serial = 3;
inline void TRCRequest::clear_serial() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.serial_ = ::uint64_t{0u};
}
inline ::uint64_t TRCRequest::serial() const {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.TRCRequest.serial)
  return _internal_serial();
}
inline void TRCRequest::set_serial(::uint64_t value) {
  _internal_set_serial(value);
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.TRCRequest.serial)
}
inline ::uint64_t TRCRequest::_internal_serial() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.serial_;
}
inline void TRCRequest::_internal_set_serial(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.serial_ = value;
}

// -------------------------------------------------------------------

// TRCResponse

// bytes trc = 1;
inline void TRCResponse::clear_trc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.trc_.ClearToEmpty();
}
inline const std::string& TRCResponse::trc() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.TRCResponse.trc)
  return _internal_trc();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TRCResponse::set_trc(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.trc_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.TRCResponse.trc)
}
inline std::string* TRCResponse::mutable_trc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_trc();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.TRCResponse.trc)
  return _s;
}
inline const std::string& TRCResponse::_internal_trc() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.trc_.Get();
}
inline void TRCResponse::_internal_set_trc(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.trc_.Set(value, GetArena());
}
inline std::string* TRCResponse::_internal_mutable_trc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.trc_.Mutable( GetArena());
}
inline std::string* TRCResponse::release_trc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.TRCResponse.trc)
  return _impl_.trc_.Release();
}
inline void TRCResponse::set_allocated_trc(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.trc_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.trc_.IsDefault()) {
          _impl_.trc_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.TRCResponse.trc)
}

// -------------------------------------------------------------------

// VerificationKeyID

// uint64 isd_as = 1;
inline void VerificationKeyID::clear_isd_as() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.isd_as_ = ::uint64_t{0u};
}
inline ::uint64_t VerificationKeyID::isd_as() const {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.VerificationKeyID.isd_as)
  return _internal_isd_as();
}
inline void VerificationKeyID::set_isd_as(::uint64_t value) {
  _internal_set_isd_as(value);
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.VerificationKeyID.isd_as)
}
inline ::uint64_t VerificationKeyID::_internal_isd_as() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.isd_as_;
}
inline void VerificationKeyID::_internal_set_isd_as(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.isd_as_ = value;
}

// bytes subject_key_id = 2;
inline void VerificationKeyID::clear_subject_key_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subject_key_id_.ClearToEmpty();
}
inline const std::string& VerificationKeyID::subject_key_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.VerificationKeyID.subject_key_id)
  return _internal_subject_key_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VerificationKeyID::set_subject_key_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subject_key_id_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.VerificationKeyID.subject_key_id)
}
inline std::string* VerificationKeyID::mutable_subject_key_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subject_key_id();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.VerificationKeyID.subject_key_id)
  return _s;
}
inline const std::string& VerificationKeyID::_internal_subject_key_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.subject_key_id_.Get();
}
inline void VerificationKeyID::_internal_set_subject_key_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subject_key_id_.Set(value, GetArena());
}
inline std::string* VerificationKeyID::_internal_mutable_subject_key_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.subject_key_id_.Mutable( GetArena());
}
inline std::string* VerificationKeyID::release_subject_key_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.VerificationKeyID.subject_key_id)
  return _impl_.subject_key_id_.Release();
}
inline void VerificationKeyID::set_allocated_subject_key_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subject_key_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.subject_key_id_.IsDefault()) {
          _impl_.subject_key_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.VerificationKeyID.subject_key_id)
}

// uint64 trc_base = 3;
inline void VerificationKeyID::clear_trc_base() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.trc_base_ = ::uint64_t{0u};
}
inline ::uint64_t VerificationKeyID::trc_base() const {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.VerificationKeyID.trc_base)
  return _internal_trc_base();
}
inline void VerificationKeyID::set_trc_base(::uint64_t value) {
  _internal_set_trc_base(value);
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.VerificationKeyID.trc_base)
}
inline ::uint64_t VerificationKeyID::_internal_trc_base() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.trc_base_;
}
inline void VerificationKeyID::_internal_set_trc_base(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.trc_base_ = value;
}

// uint64 trc_serial = 4;
inline void VerificationKeyID::clear_trc_serial() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.trc_serial_ = ::uint64_t{0u};
}
inline ::uint64_t VerificationKeyID::trc_serial() const {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.VerificationKeyID.trc_serial)
  return _internal_trc_serial();
}
inline void VerificationKeyID::set_trc_serial(::uint64_t value) {
  _internal_set_trc_serial(value);
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.VerificationKeyID.trc_serial)
}
inline ::uint64_t VerificationKeyID::_internal_trc_serial() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.trc_serial_;
}
inline void VerificationKeyID::_internal_set_trc_serial(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.trc_serial_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace control_plane
}  // namespace proto


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_proto_2fcontrol_5fplane_2fv1_2fcppki_2eproto_2epb_2eh
