// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/control_plane/v1/seg_extensions.proto
// Protobuf C++ Version: 4.24.0-main

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2fcontrol_5fplane_2fv1_2fseg_5fextensions_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_proto_2fcontrol_5fplane_2fv1_2fseg_5fextensions_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "proto/control_plane/experimental/v1/seg_detached_extensions.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2fcontrol_5fplane_2fv1_2fseg_5fextensions_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fcontrol_5fplane_2fv1_2fseg_5fextensions_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_proto_2fcontrol_5fplane_2fv1_2fseg_5fextensions_2eproto;
namespace proto {
namespace control_plane {
namespace v1 {
class BandwidthInfo;
struct BandwidthInfoDefaultTypeInternal;
extern BandwidthInfoDefaultTypeInternal _BandwidthInfo_default_instance_;
class BandwidthInfo_InterEntry_DoNotUse;
struct BandwidthInfo_InterEntry_DoNotUseDefaultTypeInternal;
extern BandwidthInfo_InterEntry_DoNotUseDefaultTypeInternal _BandwidthInfo_InterEntry_DoNotUse_default_instance_;
class BandwidthInfo_IntraEntry_DoNotUse;
struct BandwidthInfo_IntraEntry_DoNotUseDefaultTypeInternal;
extern BandwidthInfo_IntraEntry_DoNotUseDefaultTypeInternal _BandwidthInfo_IntraEntry_DoNotUse_default_instance_;
class DigestExtension;
struct DigestExtensionDefaultTypeInternal;
extern DigestExtensionDefaultTypeInternal _DigestExtension_default_instance_;
class DigestExtension_Digest;
struct DigestExtension_DigestDefaultTypeInternal;
extern DigestExtension_DigestDefaultTypeInternal _DigestExtension_Digest_default_instance_;
class GeoCoordinates;
struct GeoCoordinatesDefaultTypeInternal;
extern GeoCoordinatesDefaultTypeInternal _GeoCoordinates_default_instance_;
class HiddenPathExtension;
struct HiddenPathExtensionDefaultTypeInternal;
extern HiddenPathExtensionDefaultTypeInternal _HiddenPathExtension_default_instance_;
class LatencyInfo;
struct LatencyInfoDefaultTypeInternal;
extern LatencyInfoDefaultTypeInternal _LatencyInfo_default_instance_;
class LatencyInfo_InterEntry_DoNotUse;
struct LatencyInfo_InterEntry_DoNotUseDefaultTypeInternal;
extern LatencyInfo_InterEntry_DoNotUseDefaultTypeInternal _LatencyInfo_InterEntry_DoNotUse_default_instance_;
class LatencyInfo_IntraEntry_DoNotUse;
struct LatencyInfo_IntraEntry_DoNotUseDefaultTypeInternal;
extern LatencyInfo_IntraEntry_DoNotUseDefaultTypeInternal _LatencyInfo_IntraEntry_DoNotUse_default_instance_;
class PathSegmentExtensions;
struct PathSegmentExtensionsDefaultTypeInternal;
extern PathSegmentExtensionsDefaultTypeInternal _PathSegmentExtensions_default_instance_;
class PathSegmentUnsignedExtensions;
struct PathSegmentUnsignedExtensionsDefaultTypeInternal;
extern PathSegmentUnsignedExtensionsDefaultTypeInternal _PathSegmentUnsignedExtensions_default_instance_;
class StaticInfoExtension;
struct StaticInfoExtensionDefaultTypeInternal;
extern StaticInfoExtensionDefaultTypeInternal _StaticInfoExtension_default_instance_;
class StaticInfoExtension_GeoEntry_DoNotUse;
struct StaticInfoExtension_GeoEntry_DoNotUseDefaultTypeInternal;
extern StaticInfoExtension_GeoEntry_DoNotUseDefaultTypeInternal _StaticInfoExtension_GeoEntry_DoNotUse_default_instance_;
class StaticInfoExtension_InternalHopsEntry_DoNotUse;
struct StaticInfoExtension_InternalHopsEntry_DoNotUseDefaultTypeInternal;
extern StaticInfoExtension_InternalHopsEntry_DoNotUseDefaultTypeInternal _StaticInfoExtension_InternalHopsEntry_DoNotUse_default_instance_;
class StaticInfoExtension_LinkTypeEntry_DoNotUse;
struct StaticInfoExtension_LinkTypeEntry_DoNotUseDefaultTypeInternal;
extern StaticInfoExtension_LinkTypeEntry_DoNotUseDefaultTypeInternal _StaticInfoExtension_LinkTypeEntry_DoNotUse_default_instance_;
}  // namespace v1
}  // namespace control_plane
}  // namespace proto
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace proto {
namespace control_plane {
namespace v1 {
enum LinkType : int {
  LINK_TYPE_UNSPECIFIED = 0,
  LINK_TYPE_DIRECT = 1,
  LINK_TYPE_MULTI_HOP = 2,
  LINK_TYPE_OPEN_NET = 3,
  LinkType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  LinkType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool LinkType_IsValid(int value);
extern const uint32_t LinkType_internal_data_[];
constexpr LinkType LinkType_MIN = static_cast<LinkType>(0);
constexpr LinkType LinkType_MAX = static_cast<LinkType>(3);
constexpr int LinkType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
LinkType_descriptor();
template <typename T>
const std::string& LinkType_Name(T value) {
  static_assert(std::is_same<T, LinkType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to LinkType_Name().");
  return LinkType_Name(static_cast<LinkType>(value));
}
template <>
inline const std::string& LinkType_Name(LinkType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<LinkType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool LinkType_Parse(absl::string_view name, LinkType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LinkType>(
      LinkType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class StaticInfoExtension_LinkTypeEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          StaticInfoExtension_LinkTypeEntry_DoNotUse, ::uint64_t, ::proto::control_plane::v1::LinkType,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_ENUM> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      StaticInfoExtension_LinkTypeEntry_DoNotUse, ::uint64_t, ::proto::control_plane::v1::LinkType,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>;
  StaticInfoExtension_LinkTypeEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StaticInfoExtension_LinkTypeEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit StaticInfoExtension_LinkTypeEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const StaticInfoExtension_LinkTypeEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const StaticInfoExtension_LinkTypeEntry_DoNotUse*>(
        &_StaticInfoExtension_LinkTypeEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fseg_5fextensions_2eproto;
};
// -------------------------------------------------------------------

class StaticInfoExtension_InternalHopsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          StaticInfoExtension_InternalHopsEntry_DoNotUse, ::uint64_t, ::uint32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      StaticInfoExtension_InternalHopsEntry_DoNotUse, ::uint64_t, ::uint32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>;
  StaticInfoExtension_InternalHopsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StaticInfoExtension_InternalHopsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit StaticInfoExtension_InternalHopsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const StaticInfoExtension_InternalHopsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const StaticInfoExtension_InternalHopsEntry_DoNotUse*>(
        &_StaticInfoExtension_InternalHopsEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fseg_5fextensions_2eproto;
};
// -------------------------------------------------------------------

class LatencyInfo_IntraEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          LatencyInfo_IntraEntry_DoNotUse, ::uint64_t, ::uint32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      LatencyInfo_IntraEntry_DoNotUse, ::uint64_t, ::uint32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>;
  LatencyInfo_IntraEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LatencyInfo_IntraEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit LatencyInfo_IntraEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const LatencyInfo_IntraEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const LatencyInfo_IntraEntry_DoNotUse*>(
        &_LatencyInfo_IntraEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fseg_5fextensions_2eproto;
};
// -------------------------------------------------------------------

class LatencyInfo_InterEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          LatencyInfo_InterEntry_DoNotUse, ::uint64_t, ::uint32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      LatencyInfo_InterEntry_DoNotUse, ::uint64_t, ::uint32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>;
  LatencyInfo_InterEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LatencyInfo_InterEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit LatencyInfo_InterEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const LatencyInfo_InterEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const LatencyInfo_InterEntry_DoNotUse*>(
        &_LatencyInfo_InterEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fseg_5fextensions_2eproto;
};
// -------------------------------------------------------------------

class HiddenPathExtension final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.HiddenPathExtension) */ {
 public:
  inline HiddenPathExtension() : HiddenPathExtension(nullptr) {}
  ~HiddenPathExtension() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR HiddenPathExtension(::google::protobuf::internal::ConstantInitialized);

  inline HiddenPathExtension(const HiddenPathExtension& from)
      : HiddenPathExtension(nullptr, from) {}
  HiddenPathExtension(HiddenPathExtension&& from) noexcept
    : HiddenPathExtension() {
    *this = ::std::move(from);
  }

  inline HiddenPathExtension& operator=(const HiddenPathExtension& from) {
    CopyFrom(from);
    return *this;
  }
  inline HiddenPathExtension& operator=(HiddenPathExtension&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HiddenPathExtension& default_instance() {
    return *internal_default_instance();
  }
  static inline const HiddenPathExtension* internal_default_instance() {
    return reinterpret_cast<const HiddenPathExtension*>(
               &_HiddenPathExtension_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(HiddenPathExtension& a, HiddenPathExtension& b) {
    a.Swap(&b);
  }
  inline void Swap(HiddenPathExtension* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HiddenPathExtension* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HiddenPathExtension* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HiddenPathExtension>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HiddenPathExtension& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const HiddenPathExtension& from) {
    HiddenPathExtension::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HiddenPathExtension* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.HiddenPathExtension";
  }
  protected:
  explicit HiddenPathExtension(::google::protobuf::Arena* arena);
  HiddenPathExtension(::google::protobuf::Arena* arena, const HiddenPathExtension& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIsHiddenFieldNumber = 1,
  };
  // bool is_hidden = 1;
  void clear_is_hidden() ;
  bool is_hidden() const;
  void set_is_hidden(bool value);

  private:
  bool _internal_is_hidden() const;
  void _internal_set_is_hidden(bool value);

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.HiddenPathExtension)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    bool is_hidden_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fseg_5fextensions_2eproto;
};// -------------------------------------------------------------------

class GeoCoordinates final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.GeoCoordinates) */ {
 public:
  inline GeoCoordinates() : GeoCoordinates(nullptr) {}
  ~GeoCoordinates() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GeoCoordinates(::google::protobuf::internal::ConstantInitialized);

  inline GeoCoordinates(const GeoCoordinates& from)
      : GeoCoordinates(nullptr, from) {}
  GeoCoordinates(GeoCoordinates&& from) noexcept
    : GeoCoordinates() {
    *this = ::std::move(from);
  }

  inline GeoCoordinates& operator=(const GeoCoordinates& from) {
    CopyFrom(from);
    return *this;
  }
  inline GeoCoordinates& operator=(GeoCoordinates&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GeoCoordinates& default_instance() {
    return *internal_default_instance();
  }
  static inline const GeoCoordinates* internal_default_instance() {
    return reinterpret_cast<const GeoCoordinates*>(
               &_GeoCoordinates_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(GeoCoordinates& a, GeoCoordinates& b) {
    a.Swap(&b);
  }
  inline void Swap(GeoCoordinates* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GeoCoordinates* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GeoCoordinates* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GeoCoordinates>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GeoCoordinates& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GeoCoordinates& from) {
    GeoCoordinates::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GeoCoordinates* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.GeoCoordinates";
  }
  protected:
  explicit GeoCoordinates(::google::protobuf::Arena* arena);
  GeoCoordinates(::google::protobuf::Arena* arena, const GeoCoordinates& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAddressFieldNumber = 3,
    kLatitudeFieldNumber = 1,
    kLongitudeFieldNumber = 2,
  };
  // string address = 3;
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // float latitude = 1;
  void clear_latitude() ;
  float latitude() const;
  void set_latitude(float value);

  private:
  float _internal_latitude() const;
  void _internal_set_latitude(float value);

  public:
  // float longitude = 2;
  void clear_longitude() ;
  float longitude() const;
  void set_longitude(float value);

  private:
  float _internal_longitude() const;
  void _internal_set_longitude(float value);

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.GeoCoordinates)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      53, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr address_;
    float latitude_;
    float longitude_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fseg_5fextensions_2eproto;
};// -------------------------------------------------------------------

class DigestExtension_Digest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.DigestExtension.Digest) */ {
 public:
  inline DigestExtension_Digest() : DigestExtension_Digest(nullptr) {}
  ~DigestExtension_Digest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DigestExtension_Digest(::google::protobuf::internal::ConstantInitialized);

  inline DigestExtension_Digest(const DigestExtension_Digest& from)
      : DigestExtension_Digest(nullptr, from) {}
  DigestExtension_Digest(DigestExtension_Digest&& from) noexcept
    : DigestExtension_Digest() {
    *this = ::std::move(from);
  }

  inline DigestExtension_Digest& operator=(const DigestExtension_Digest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DigestExtension_Digest& operator=(DigestExtension_Digest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DigestExtension_Digest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DigestExtension_Digest* internal_default_instance() {
    return reinterpret_cast<const DigestExtension_Digest*>(
               &_DigestExtension_Digest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(DigestExtension_Digest& a, DigestExtension_Digest& b) {
    a.Swap(&b);
  }
  inline void Swap(DigestExtension_Digest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DigestExtension_Digest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DigestExtension_Digest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DigestExtension_Digest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DigestExtension_Digest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DigestExtension_Digest& from) {
    DigestExtension_Digest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DigestExtension_Digest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.DigestExtension.Digest";
  }
  protected:
  explicit DigestExtension_Digest(::google::protobuf::Arena* arena);
  DigestExtension_Digest(::google::protobuf::Arena* arena, const DigestExtension_Digest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDigestFieldNumber = 1,
  };
  // bytes digest = 1;
  void clear_digest() ;
  const std::string& digest() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_digest(Arg_&& arg, Args_... args);
  std::string* mutable_digest();
  PROTOBUF_NODISCARD std::string* release_digest();
  void set_allocated_digest(std::string* value);

  private:
  const std::string& _internal_digest() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_digest(
      const std::string& value);
  std::string* _internal_mutable_digest();

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.DigestExtension.Digest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr digest_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fseg_5fextensions_2eproto;
};// -------------------------------------------------------------------

class BandwidthInfo_IntraEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          BandwidthInfo_IntraEntry_DoNotUse, ::uint64_t, ::uint64_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      BandwidthInfo_IntraEntry_DoNotUse, ::uint64_t, ::uint64_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>;
  BandwidthInfo_IntraEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BandwidthInfo_IntraEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit BandwidthInfo_IntraEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const BandwidthInfo_IntraEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const BandwidthInfo_IntraEntry_DoNotUse*>(
        &_BandwidthInfo_IntraEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fseg_5fextensions_2eproto;
};
// -------------------------------------------------------------------

class BandwidthInfo_InterEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          BandwidthInfo_InterEntry_DoNotUse, ::uint64_t, ::uint64_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      BandwidthInfo_InterEntry_DoNotUse, ::uint64_t, ::uint64_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>;
  BandwidthInfo_InterEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BandwidthInfo_InterEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit BandwidthInfo_InterEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const BandwidthInfo_InterEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const BandwidthInfo_InterEntry_DoNotUse*>(
        &_BandwidthInfo_InterEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fseg_5fextensions_2eproto;
};
// -------------------------------------------------------------------

class StaticInfoExtension_GeoEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          StaticInfoExtension_GeoEntry_DoNotUse, ::uint64_t, ::proto::control_plane::v1::GeoCoordinates,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      StaticInfoExtension_GeoEntry_DoNotUse, ::uint64_t, ::proto::control_plane::v1::GeoCoordinates,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  StaticInfoExtension_GeoEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StaticInfoExtension_GeoEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit StaticInfoExtension_GeoEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const StaticInfoExtension_GeoEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const StaticInfoExtension_GeoEntry_DoNotUse*>(
        &_StaticInfoExtension_GeoEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fseg_5fextensions_2eproto;
};
// -------------------------------------------------------------------

class PathSegmentUnsignedExtensions final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.PathSegmentUnsignedExtensions) */ {
 public:
  inline PathSegmentUnsignedExtensions() : PathSegmentUnsignedExtensions(nullptr) {}
  ~PathSegmentUnsignedExtensions() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PathSegmentUnsignedExtensions(::google::protobuf::internal::ConstantInitialized);

  inline PathSegmentUnsignedExtensions(const PathSegmentUnsignedExtensions& from)
      : PathSegmentUnsignedExtensions(nullptr, from) {}
  PathSegmentUnsignedExtensions(PathSegmentUnsignedExtensions&& from) noexcept
    : PathSegmentUnsignedExtensions() {
    *this = ::std::move(from);
  }

  inline PathSegmentUnsignedExtensions& operator=(const PathSegmentUnsignedExtensions& from) {
    CopyFrom(from);
    return *this;
  }
  inline PathSegmentUnsignedExtensions& operator=(PathSegmentUnsignedExtensions&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PathSegmentUnsignedExtensions& default_instance() {
    return *internal_default_instance();
  }
  static inline const PathSegmentUnsignedExtensions* internal_default_instance() {
    return reinterpret_cast<const PathSegmentUnsignedExtensions*>(
               &_PathSegmentUnsignedExtensions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(PathSegmentUnsignedExtensions& a, PathSegmentUnsignedExtensions& b) {
    a.Swap(&b);
  }
  inline void Swap(PathSegmentUnsignedExtensions* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PathSegmentUnsignedExtensions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PathSegmentUnsignedExtensions* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PathSegmentUnsignedExtensions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PathSegmentUnsignedExtensions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PathSegmentUnsignedExtensions& from) {
    PathSegmentUnsignedExtensions::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PathSegmentUnsignedExtensions* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.PathSegmentUnsignedExtensions";
  }
  protected:
  explicit PathSegmentUnsignedExtensions(::google::protobuf::Arena* arena);
  PathSegmentUnsignedExtensions(::google::protobuf::Arena* arena, const PathSegmentUnsignedExtensions& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEpicFieldNumber = 1000,
  };
  // .proto.control_plane.experimental.v1.EPICDetachedExtension epic = 1000;
  bool has_epic() const;
  void clear_epic() ;
  const ::proto::control_plane::experimental::v1::EPICDetachedExtension& epic() const;
  PROTOBUF_NODISCARD ::proto::control_plane::experimental::v1::EPICDetachedExtension* release_epic();
  ::proto::control_plane::experimental::v1::EPICDetachedExtension* mutable_epic();
  void set_allocated_epic(::proto::control_plane::experimental::v1::EPICDetachedExtension* value);
  void unsafe_arena_set_allocated_epic(::proto::control_plane::experimental::v1::EPICDetachedExtension* value);
  ::proto::control_plane::experimental::v1::EPICDetachedExtension* unsafe_arena_release_epic();

  private:
  const ::proto::control_plane::experimental::v1::EPICDetachedExtension& _internal_epic() const;
  ::proto::control_plane::experimental::v1::EPICDetachedExtension* _internal_mutable_epic();

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.PathSegmentUnsignedExtensions)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::proto::control_plane::experimental::v1::EPICDetachedExtension* epic_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fseg_5fextensions_2eproto;
};// -------------------------------------------------------------------

class LatencyInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.LatencyInfo) */ {
 public:
  inline LatencyInfo() : LatencyInfo(nullptr) {}
  ~LatencyInfo() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LatencyInfo(::google::protobuf::internal::ConstantInitialized);

  inline LatencyInfo(const LatencyInfo& from)
      : LatencyInfo(nullptr, from) {}
  LatencyInfo(LatencyInfo&& from) noexcept
    : LatencyInfo() {
    *this = ::std::move(from);
  }

  inline LatencyInfo& operator=(const LatencyInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline LatencyInfo& operator=(LatencyInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LatencyInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const LatencyInfo* internal_default_instance() {
    return reinterpret_cast<const LatencyInfo*>(
               &_LatencyInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(LatencyInfo& a, LatencyInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(LatencyInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LatencyInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LatencyInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LatencyInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LatencyInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LatencyInfo& from) {
    LatencyInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LatencyInfo* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.LatencyInfo";
  }
  protected:
  explicit LatencyInfo(::google::protobuf::Arena* arena);
  LatencyInfo(::google::protobuf::Arena* arena, const LatencyInfo& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kIntraFieldNumber = 1,
    kInterFieldNumber = 2,
  };
  // map<uint64, uint32> intra = 1;
  int intra_size() const;
  private:
  int _internal_intra_size() const;

  public:
  void clear_intra() ;
  const ::google::protobuf::Map<::uint64_t, ::uint32_t>& intra() const;
  ::google::protobuf::Map<::uint64_t, ::uint32_t>* mutable_intra();

  private:
  const ::google::protobuf::Map<::uint64_t, ::uint32_t>& _internal_intra() const;
  ::google::protobuf::Map<::uint64_t, ::uint32_t>* _internal_mutable_intra();

  public:
  // map<uint64, uint32> inter = 2;
  int inter_size() const;
  private:
  int _internal_inter_size() const;

  public:
  void clear_inter() ;
  const ::google::protobuf::Map<::uint64_t, ::uint32_t>& inter() const;
  ::google::protobuf::Map<::uint64_t, ::uint32_t>* mutable_inter();

  private:
  const ::google::protobuf::Map<::uint64_t, ::uint32_t>& _internal_inter() const;
  ::google::protobuf::Map<::uint64_t, ::uint32_t>* _internal_mutable_inter();

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.LatencyInfo)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::MapField<LatencyInfo_IntraEntry_DoNotUse, ::uint64_t, ::uint32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>
        intra_;
    ::google::protobuf::internal::MapField<LatencyInfo_InterEntry_DoNotUse, ::uint64_t, ::uint32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>
        inter_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fseg_5fextensions_2eproto;
};// -------------------------------------------------------------------

class DigestExtension final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.DigestExtension) */ {
 public:
  inline DigestExtension() : DigestExtension(nullptr) {}
  ~DigestExtension() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DigestExtension(::google::protobuf::internal::ConstantInitialized);

  inline DigestExtension(const DigestExtension& from)
      : DigestExtension(nullptr, from) {}
  DigestExtension(DigestExtension&& from) noexcept
    : DigestExtension() {
    *this = ::std::move(from);
  }

  inline DigestExtension& operator=(const DigestExtension& from) {
    CopyFrom(from);
    return *this;
  }
  inline DigestExtension& operator=(DigestExtension&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DigestExtension& default_instance() {
    return *internal_default_instance();
  }
  static inline const DigestExtension* internal_default_instance() {
    return reinterpret_cast<const DigestExtension*>(
               &_DigestExtension_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(DigestExtension& a, DigestExtension& b) {
    a.Swap(&b);
  }
  inline void Swap(DigestExtension* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DigestExtension* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DigestExtension* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DigestExtension>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DigestExtension& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DigestExtension& from) {
    DigestExtension::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DigestExtension* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.DigestExtension";
  }
  protected:
  explicit DigestExtension(::google::protobuf::Arena* arena);
  DigestExtension(::google::protobuf::Arena* arena, const DigestExtension& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Digest = DigestExtension_Digest;

  // accessors -------------------------------------------------------

  enum : int {
    kEpicFieldNumber = 1000,
  };
  // .proto.control_plane.v1.DigestExtension.Digest epic = 1000;
  bool has_epic() const;
  void clear_epic() ;
  const ::proto::control_plane::v1::DigestExtension_Digest& epic() const;
  PROTOBUF_NODISCARD ::proto::control_plane::v1::DigestExtension_Digest* release_epic();
  ::proto::control_plane::v1::DigestExtension_Digest* mutable_epic();
  void set_allocated_epic(::proto::control_plane::v1::DigestExtension_Digest* value);
  void unsafe_arena_set_allocated_epic(::proto::control_plane::v1::DigestExtension_Digest* value);
  ::proto::control_plane::v1::DigestExtension_Digest* unsafe_arena_release_epic();

  private:
  const ::proto::control_plane::v1::DigestExtension_Digest& _internal_epic() const;
  ::proto::control_plane::v1::DigestExtension_Digest* _internal_mutable_epic();

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.DigestExtension)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::proto::control_plane::v1::DigestExtension_Digest* epic_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fseg_5fextensions_2eproto;
};// -------------------------------------------------------------------

class BandwidthInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.BandwidthInfo) */ {
 public:
  inline BandwidthInfo() : BandwidthInfo(nullptr) {}
  ~BandwidthInfo() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BandwidthInfo(::google::protobuf::internal::ConstantInitialized);

  inline BandwidthInfo(const BandwidthInfo& from)
      : BandwidthInfo(nullptr, from) {}
  BandwidthInfo(BandwidthInfo&& from) noexcept
    : BandwidthInfo() {
    *this = ::std::move(from);
  }

  inline BandwidthInfo& operator=(const BandwidthInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline BandwidthInfo& operator=(BandwidthInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BandwidthInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const BandwidthInfo* internal_default_instance() {
    return reinterpret_cast<const BandwidthInfo*>(
               &_BandwidthInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(BandwidthInfo& a, BandwidthInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(BandwidthInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BandwidthInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BandwidthInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BandwidthInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BandwidthInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BandwidthInfo& from) {
    BandwidthInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BandwidthInfo* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.BandwidthInfo";
  }
  protected:
  explicit BandwidthInfo(::google::protobuf::Arena* arena);
  BandwidthInfo(::google::protobuf::Arena* arena, const BandwidthInfo& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kIntraFieldNumber = 1,
    kInterFieldNumber = 2,
  };
  // map<uint64, uint64> intra = 1;
  int intra_size() const;
  private:
  int _internal_intra_size() const;

  public:
  void clear_intra() ;
  const ::google::protobuf::Map<::uint64_t, ::uint64_t>& intra() const;
  ::google::protobuf::Map<::uint64_t, ::uint64_t>* mutable_intra();

  private:
  const ::google::protobuf::Map<::uint64_t, ::uint64_t>& _internal_intra() const;
  ::google::protobuf::Map<::uint64_t, ::uint64_t>* _internal_mutable_intra();

  public:
  // map<uint64, uint64> inter = 2;
  int inter_size() const;
  private:
  int _internal_inter_size() const;

  public:
  void clear_inter() ;
  const ::google::protobuf::Map<::uint64_t, ::uint64_t>& inter() const;
  ::google::protobuf::Map<::uint64_t, ::uint64_t>* mutable_inter();

  private:
  const ::google::protobuf::Map<::uint64_t, ::uint64_t>& _internal_inter() const;
  ::google::protobuf::Map<::uint64_t, ::uint64_t>* _internal_mutable_inter();

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.BandwidthInfo)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::MapField<BandwidthInfo_IntraEntry_DoNotUse, ::uint64_t, ::uint64_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>
        intra_;
    ::google::protobuf::internal::MapField<BandwidthInfo_InterEntry_DoNotUse, ::uint64_t, ::uint64_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>
        inter_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fseg_5fextensions_2eproto;
};// -------------------------------------------------------------------

class StaticInfoExtension final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.StaticInfoExtension) */ {
 public:
  inline StaticInfoExtension() : StaticInfoExtension(nullptr) {}
  ~StaticInfoExtension() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StaticInfoExtension(::google::protobuf::internal::ConstantInitialized);

  inline StaticInfoExtension(const StaticInfoExtension& from)
      : StaticInfoExtension(nullptr, from) {}
  StaticInfoExtension(StaticInfoExtension&& from) noexcept
    : StaticInfoExtension() {
    *this = ::std::move(from);
  }

  inline StaticInfoExtension& operator=(const StaticInfoExtension& from) {
    CopyFrom(from);
    return *this;
  }
  inline StaticInfoExtension& operator=(StaticInfoExtension&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StaticInfoExtension& default_instance() {
    return *internal_default_instance();
  }
  static inline const StaticInfoExtension* internal_default_instance() {
    return reinterpret_cast<const StaticInfoExtension*>(
               &_StaticInfoExtension_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(StaticInfoExtension& a, StaticInfoExtension& b) {
    a.Swap(&b);
  }
  inline void Swap(StaticInfoExtension* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StaticInfoExtension* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StaticInfoExtension* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StaticInfoExtension>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StaticInfoExtension& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StaticInfoExtension& from) {
    StaticInfoExtension::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StaticInfoExtension* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.StaticInfoExtension";
  }
  protected:
  explicit StaticInfoExtension(::google::protobuf::Arena* arena);
  StaticInfoExtension(::google::protobuf::Arena* arena, const StaticInfoExtension& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kGeoFieldNumber = 3,
    kLinkTypeFieldNumber = 4,
    kInternalHopsFieldNumber = 5,
    kNoteFieldNumber = 6,
    kLatencyFieldNumber = 1,
    kBandwidthFieldNumber = 2,
  };
  // map<uint64, .proto.control_plane.v1.GeoCoordinates> geo = 3;
  int geo_size() const;
  private:
  int _internal_geo_size() const;

  public:
  void clear_geo() ;
  const ::google::protobuf::Map<::uint64_t, ::proto::control_plane::v1::GeoCoordinates>& geo() const;
  ::google::protobuf::Map<::uint64_t, ::proto::control_plane::v1::GeoCoordinates>* mutable_geo();

  private:
  const ::google::protobuf::Map<::uint64_t, ::proto::control_plane::v1::GeoCoordinates>& _internal_geo() const;
  ::google::protobuf::Map<::uint64_t, ::proto::control_plane::v1::GeoCoordinates>* _internal_mutable_geo();

  public:
  // map<uint64, .proto.control_plane.v1.LinkType> link_type = 4;
  int link_type_size() const;
  private:
  int _internal_link_type_size() const;

  public:
  void clear_link_type() ;
  const ::google::protobuf::Map<::uint64_t, ::proto::control_plane::v1::LinkType>& link_type() const;
  ::google::protobuf::Map<::uint64_t, ::proto::control_plane::v1::LinkType>* mutable_link_type();

  private:
  const ::google::protobuf::Map<::uint64_t, ::proto::control_plane::v1::LinkType>& _internal_link_type() const;
  ::google::protobuf::Map<::uint64_t, ::proto::control_plane::v1::LinkType>* _internal_mutable_link_type();

  public:
  // map<uint64, uint32> internal_hops = 5;
  int internal_hops_size() const;
  private:
  int _internal_internal_hops_size() const;

  public:
  void clear_internal_hops() ;
  const ::google::protobuf::Map<::uint64_t, ::uint32_t>& internal_hops() const;
  ::google::protobuf::Map<::uint64_t, ::uint32_t>* mutable_internal_hops();

  private:
  const ::google::protobuf::Map<::uint64_t, ::uint32_t>& _internal_internal_hops() const;
  ::google::protobuf::Map<::uint64_t, ::uint32_t>* _internal_mutable_internal_hops();

  public:
  // string note = 6;
  void clear_note() ;
  const std::string& note() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_note(Arg_&& arg, Args_... args);
  std::string* mutable_note();
  PROTOBUF_NODISCARD std::string* release_note();
  void set_allocated_note(std::string* value);

  private:
  const std::string& _internal_note() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_note(
      const std::string& value);
  std::string* _internal_mutable_note();

  public:
  // .proto.control_plane.v1.LatencyInfo latency = 1;
  bool has_latency() const;
  void clear_latency() ;
  const ::proto::control_plane::v1::LatencyInfo& latency() const;
  PROTOBUF_NODISCARD ::proto::control_plane::v1::LatencyInfo* release_latency();
  ::proto::control_plane::v1::LatencyInfo* mutable_latency();
  void set_allocated_latency(::proto::control_plane::v1::LatencyInfo* value);
  void unsafe_arena_set_allocated_latency(::proto::control_plane::v1::LatencyInfo* value);
  ::proto::control_plane::v1::LatencyInfo* unsafe_arena_release_latency();

  private:
  const ::proto::control_plane::v1::LatencyInfo& _internal_latency() const;
  ::proto::control_plane::v1::LatencyInfo* _internal_mutable_latency();

  public:
  // .proto.control_plane.v1.BandwidthInfo bandwidth = 2;
  bool has_bandwidth() const;
  void clear_bandwidth() ;
  const ::proto::control_plane::v1::BandwidthInfo& bandwidth() const;
  PROTOBUF_NODISCARD ::proto::control_plane::v1::BandwidthInfo* release_bandwidth();
  ::proto::control_plane::v1::BandwidthInfo* mutable_bandwidth();
  void set_allocated_bandwidth(::proto::control_plane::v1::BandwidthInfo* value);
  void unsafe_arena_set_allocated_bandwidth(::proto::control_plane::v1::BandwidthInfo* value);
  ::proto::control_plane::v1::BandwidthInfo* unsafe_arena_release_bandwidth();

  private:
  const ::proto::control_plane::v1::BandwidthInfo& _internal_bandwidth() const;
  ::proto::control_plane::v1::BandwidthInfo* _internal_mutable_bandwidth();

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.StaticInfoExtension)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 6,
      55, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<StaticInfoExtension_GeoEntry_DoNotUse, ::uint64_t, ::proto::control_plane::v1::GeoCoordinates,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        geo_;
    ::google::protobuf::internal::MapField<StaticInfoExtension_LinkTypeEntry_DoNotUse, ::uint64_t, ::proto::control_plane::v1::LinkType,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>
        link_type_;
    ::google::protobuf::internal::MapField<StaticInfoExtension_InternalHopsEntry_DoNotUse, ::uint64_t, ::uint32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>
        internal_hops_;
    ::google::protobuf::internal::ArenaStringPtr note_;
    ::proto::control_plane::v1::LatencyInfo* latency_;
    ::proto::control_plane::v1::BandwidthInfo* bandwidth_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fseg_5fextensions_2eproto;
};// -------------------------------------------------------------------

class PathSegmentExtensions final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.PathSegmentExtensions) */ {
 public:
  inline PathSegmentExtensions() : PathSegmentExtensions(nullptr) {}
  ~PathSegmentExtensions() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PathSegmentExtensions(::google::protobuf::internal::ConstantInitialized);

  inline PathSegmentExtensions(const PathSegmentExtensions& from)
      : PathSegmentExtensions(nullptr, from) {}
  PathSegmentExtensions(PathSegmentExtensions&& from) noexcept
    : PathSegmentExtensions() {
    *this = ::std::move(from);
  }

  inline PathSegmentExtensions& operator=(const PathSegmentExtensions& from) {
    CopyFrom(from);
    return *this;
  }
  inline PathSegmentExtensions& operator=(PathSegmentExtensions&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PathSegmentExtensions& default_instance() {
    return *internal_default_instance();
  }
  static inline const PathSegmentExtensions* internal_default_instance() {
    return reinterpret_cast<const PathSegmentExtensions*>(
               &_PathSegmentExtensions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PathSegmentExtensions& a, PathSegmentExtensions& b) {
    a.Swap(&b);
  }
  inline void Swap(PathSegmentExtensions* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PathSegmentExtensions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PathSegmentExtensions* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PathSegmentExtensions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PathSegmentExtensions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PathSegmentExtensions& from) {
    PathSegmentExtensions::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PathSegmentExtensions* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.PathSegmentExtensions";
  }
  protected:
  explicit PathSegmentExtensions(::google::protobuf::Arena* arena);
  PathSegmentExtensions(::google::protobuf::Arena* arena, const PathSegmentExtensions& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStaticInfoFieldNumber = 1,
    kHiddenPathFieldNumber = 2,
    kDigestsFieldNumber = 1000,
  };
  // .proto.control_plane.v1.StaticInfoExtension static_info = 1;
  bool has_static_info() const;
  void clear_static_info() ;
  const ::proto::control_plane::v1::StaticInfoExtension& static_info() const;
  PROTOBUF_NODISCARD ::proto::control_plane::v1::StaticInfoExtension* release_static_info();
  ::proto::control_plane::v1::StaticInfoExtension* mutable_static_info();
  void set_allocated_static_info(::proto::control_plane::v1::StaticInfoExtension* value);
  void unsafe_arena_set_allocated_static_info(::proto::control_plane::v1::StaticInfoExtension* value);
  ::proto::control_plane::v1::StaticInfoExtension* unsafe_arena_release_static_info();

  private:
  const ::proto::control_plane::v1::StaticInfoExtension& _internal_static_info() const;
  ::proto::control_plane::v1::StaticInfoExtension* _internal_mutable_static_info();

  public:
  // .proto.control_plane.v1.HiddenPathExtension hidden_path = 2;
  bool has_hidden_path() const;
  void clear_hidden_path() ;
  const ::proto::control_plane::v1::HiddenPathExtension& hidden_path() const;
  PROTOBUF_NODISCARD ::proto::control_plane::v1::HiddenPathExtension* release_hidden_path();
  ::proto::control_plane::v1::HiddenPathExtension* mutable_hidden_path();
  void set_allocated_hidden_path(::proto::control_plane::v1::HiddenPathExtension* value);
  void unsafe_arena_set_allocated_hidden_path(::proto::control_plane::v1::HiddenPathExtension* value);
  ::proto::control_plane::v1::HiddenPathExtension* unsafe_arena_release_hidden_path();

  private:
  const ::proto::control_plane::v1::HiddenPathExtension& _internal_hidden_path() const;
  ::proto::control_plane::v1::HiddenPathExtension* _internal_mutable_hidden_path();

  public:
  // .proto.control_plane.v1.DigestExtension digests = 1000;
  bool has_digests() const;
  void clear_digests() ;
  const ::proto::control_plane::v1::DigestExtension& digests() const;
  PROTOBUF_NODISCARD ::proto::control_plane::v1::DigestExtension* release_digests();
  ::proto::control_plane::v1::DigestExtension* mutable_digests();
  void set_allocated_digests(::proto::control_plane::v1::DigestExtension* value);
  void unsafe_arena_set_allocated_digests(::proto::control_plane::v1::DigestExtension* value);
  ::proto::control_plane::v1::DigestExtension* unsafe_arena_release_digests();

  private:
  const ::proto::control_plane::v1::DigestExtension& _internal_digests() const;
  ::proto::control_plane::v1::DigestExtension* _internal_mutable_digests();

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.PathSegmentExtensions)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::proto::control_plane::v1::StaticInfoExtension* static_info_;
    ::proto::control_plane::v1::HiddenPathExtension* hidden_path_;
    ::proto::control_plane::v1::DigestExtension* digests_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fseg_5fextensions_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PathSegmentExtensions

// .proto.control_plane.v1.StaticInfoExtension static_info = 1;
inline bool PathSegmentExtensions::has_static_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.static_info_ != nullptr);
  return value;
}
inline void PathSegmentExtensions::clear_static_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.static_info_ != nullptr) _impl_.static_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::control_plane::v1::StaticInfoExtension& PathSegmentExtensions::_internal_static_info() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::proto::control_plane::v1::StaticInfoExtension* p = _impl_.static_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::control_plane::v1::StaticInfoExtension&>(::proto::control_plane::v1::_StaticInfoExtension_default_instance_);
}
inline const ::proto::control_plane::v1::StaticInfoExtension& PathSegmentExtensions::static_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.PathSegmentExtensions.static_info)
  return _internal_static_info();
}
inline void PathSegmentExtensions::unsafe_arena_set_allocated_static_info(::proto::control_plane::v1::StaticInfoExtension* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.static_info_);
  }
  _impl_.static_info_ = reinterpret_cast<::proto::control_plane::v1::StaticInfoExtension*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.PathSegmentExtensions.static_info)
}
inline ::proto::control_plane::v1::StaticInfoExtension* PathSegmentExtensions::release_static_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::control_plane::v1::StaticInfoExtension* released = _impl_.static_info_;
  _impl_.static_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::control_plane::v1::StaticInfoExtension* PathSegmentExtensions::unsafe_arena_release_static_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.PathSegmentExtensions.static_info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::control_plane::v1::StaticInfoExtension* temp = _impl_.static_info_;
  _impl_.static_info_ = nullptr;
  return temp;
}
inline ::proto::control_plane::v1::StaticInfoExtension* PathSegmentExtensions::_internal_mutable_static_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.static_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::control_plane::v1::StaticInfoExtension>(GetArena());
    _impl_.static_info_ = reinterpret_cast<::proto::control_plane::v1::StaticInfoExtension*>(p);
  }
  return _impl_.static_info_;
}
inline ::proto::control_plane::v1::StaticInfoExtension* PathSegmentExtensions::mutable_static_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::proto::control_plane::v1::StaticInfoExtension* _msg = _internal_mutable_static_info();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.PathSegmentExtensions.static_info)
  return _msg;
}
inline void PathSegmentExtensions::set_allocated_static_info(::proto::control_plane::v1::StaticInfoExtension* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::proto::control_plane::v1::StaticInfoExtension*>(_impl_.static_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::proto::control_plane::v1::StaticInfoExtension*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.static_info_ = reinterpret_cast<::proto::control_plane::v1::StaticInfoExtension*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.PathSegmentExtensions.static_info)
}

// .proto.control_plane.v1.HiddenPathExtension hidden_path = 2;
inline bool PathSegmentExtensions::has_hidden_path() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.hidden_path_ != nullptr);
  return value;
}
inline void PathSegmentExtensions::clear_hidden_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.hidden_path_ != nullptr) _impl_.hidden_path_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::proto::control_plane::v1::HiddenPathExtension& PathSegmentExtensions::_internal_hidden_path() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::proto::control_plane::v1::HiddenPathExtension* p = _impl_.hidden_path_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::control_plane::v1::HiddenPathExtension&>(::proto::control_plane::v1::_HiddenPathExtension_default_instance_);
}
inline const ::proto::control_plane::v1::HiddenPathExtension& PathSegmentExtensions::hidden_path() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.PathSegmentExtensions.hidden_path)
  return _internal_hidden_path();
}
inline void PathSegmentExtensions::unsafe_arena_set_allocated_hidden_path(::proto::control_plane::v1::HiddenPathExtension* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hidden_path_);
  }
  _impl_.hidden_path_ = reinterpret_cast<::proto::control_plane::v1::HiddenPathExtension*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.PathSegmentExtensions.hidden_path)
}
inline ::proto::control_plane::v1::HiddenPathExtension* PathSegmentExtensions::release_hidden_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::proto::control_plane::v1::HiddenPathExtension* released = _impl_.hidden_path_;
  _impl_.hidden_path_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::control_plane::v1::HiddenPathExtension* PathSegmentExtensions::unsafe_arena_release_hidden_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.PathSegmentExtensions.hidden_path)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::proto::control_plane::v1::HiddenPathExtension* temp = _impl_.hidden_path_;
  _impl_.hidden_path_ = nullptr;
  return temp;
}
inline ::proto::control_plane::v1::HiddenPathExtension* PathSegmentExtensions::_internal_mutable_hidden_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.hidden_path_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::control_plane::v1::HiddenPathExtension>(GetArena());
    _impl_.hidden_path_ = reinterpret_cast<::proto::control_plane::v1::HiddenPathExtension*>(p);
  }
  return _impl_.hidden_path_;
}
inline ::proto::control_plane::v1::HiddenPathExtension* PathSegmentExtensions::mutable_hidden_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::proto::control_plane::v1::HiddenPathExtension* _msg = _internal_mutable_hidden_path();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.PathSegmentExtensions.hidden_path)
  return _msg;
}
inline void PathSegmentExtensions::set_allocated_hidden_path(::proto::control_plane::v1::HiddenPathExtension* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::proto::control_plane::v1::HiddenPathExtension*>(_impl_.hidden_path_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::proto::control_plane::v1::HiddenPathExtension*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.hidden_path_ = reinterpret_cast<::proto::control_plane::v1::HiddenPathExtension*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.PathSegmentExtensions.hidden_path)
}

// .proto.control_plane.v1.DigestExtension digests = 1000;
inline bool PathSegmentExtensions::has_digests() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.digests_ != nullptr);
  return value;
}
inline void PathSegmentExtensions::clear_digests() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.digests_ != nullptr) _impl_.digests_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::proto::control_plane::v1::DigestExtension& PathSegmentExtensions::_internal_digests() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::proto::control_plane::v1::DigestExtension* p = _impl_.digests_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::control_plane::v1::DigestExtension&>(::proto::control_plane::v1::_DigestExtension_default_instance_);
}
inline const ::proto::control_plane::v1::DigestExtension& PathSegmentExtensions::digests() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.PathSegmentExtensions.digests)
  return _internal_digests();
}
inline void PathSegmentExtensions::unsafe_arena_set_allocated_digests(::proto::control_plane::v1::DigestExtension* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.digests_);
  }
  _impl_.digests_ = reinterpret_cast<::proto::control_plane::v1::DigestExtension*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.PathSegmentExtensions.digests)
}
inline ::proto::control_plane::v1::DigestExtension* PathSegmentExtensions::release_digests() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::proto::control_plane::v1::DigestExtension* released = _impl_.digests_;
  _impl_.digests_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::control_plane::v1::DigestExtension* PathSegmentExtensions::unsafe_arena_release_digests() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.PathSegmentExtensions.digests)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::proto::control_plane::v1::DigestExtension* temp = _impl_.digests_;
  _impl_.digests_ = nullptr;
  return temp;
}
inline ::proto::control_plane::v1::DigestExtension* PathSegmentExtensions::_internal_mutable_digests() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.digests_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::control_plane::v1::DigestExtension>(GetArena());
    _impl_.digests_ = reinterpret_cast<::proto::control_plane::v1::DigestExtension*>(p);
  }
  return _impl_.digests_;
}
inline ::proto::control_plane::v1::DigestExtension* PathSegmentExtensions::mutable_digests() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::proto::control_plane::v1::DigestExtension* _msg = _internal_mutable_digests();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.PathSegmentExtensions.digests)
  return _msg;
}
inline void PathSegmentExtensions::set_allocated_digests(::proto::control_plane::v1::DigestExtension* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::proto::control_plane::v1::DigestExtension*>(_impl_.digests_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::proto::control_plane::v1::DigestExtension*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.digests_ = reinterpret_cast<::proto::control_plane::v1::DigestExtension*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.PathSegmentExtensions.digests)
}

// -------------------------------------------------------------------

// HiddenPathExtension

// bool is_hidden = 1;
inline void HiddenPathExtension::clear_is_hidden() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.is_hidden_ = false;
}
inline bool HiddenPathExtension::is_hidden() const {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.HiddenPathExtension.is_hidden)
  return _internal_is_hidden();
}
inline void HiddenPathExtension::set_is_hidden(bool value) {
  _internal_set_is_hidden(value);
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.HiddenPathExtension.is_hidden)
}
inline bool HiddenPathExtension::_internal_is_hidden() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.is_hidden_;
}
inline void HiddenPathExtension::_internal_set_is_hidden(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.is_hidden_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// StaticInfoExtension

// .proto.control_plane.v1.LatencyInfo latency = 1;
inline bool StaticInfoExtension::has_latency() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.latency_ != nullptr);
  return value;
}
inline void StaticInfoExtension::clear_latency() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.latency_ != nullptr) _impl_.latency_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::control_plane::v1::LatencyInfo& StaticInfoExtension::_internal_latency() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::proto::control_plane::v1::LatencyInfo* p = _impl_.latency_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::control_plane::v1::LatencyInfo&>(::proto::control_plane::v1::_LatencyInfo_default_instance_);
}
inline const ::proto::control_plane::v1::LatencyInfo& StaticInfoExtension::latency() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.StaticInfoExtension.latency)
  return _internal_latency();
}
inline void StaticInfoExtension::unsafe_arena_set_allocated_latency(::proto::control_plane::v1::LatencyInfo* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.latency_);
  }
  _impl_.latency_ = reinterpret_cast<::proto::control_plane::v1::LatencyInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.StaticInfoExtension.latency)
}
inline ::proto::control_plane::v1::LatencyInfo* StaticInfoExtension::release_latency() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::control_plane::v1::LatencyInfo* released = _impl_.latency_;
  _impl_.latency_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::control_plane::v1::LatencyInfo* StaticInfoExtension::unsafe_arena_release_latency() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.StaticInfoExtension.latency)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::control_plane::v1::LatencyInfo* temp = _impl_.latency_;
  _impl_.latency_ = nullptr;
  return temp;
}
inline ::proto::control_plane::v1::LatencyInfo* StaticInfoExtension::_internal_mutable_latency() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.latency_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::control_plane::v1::LatencyInfo>(GetArena());
    _impl_.latency_ = reinterpret_cast<::proto::control_plane::v1::LatencyInfo*>(p);
  }
  return _impl_.latency_;
}
inline ::proto::control_plane::v1::LatencyInfo* StaticInfoExtension::mutable_latency() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::proto::control_plane::v1::LatencyInfo* _msg = _internal_mutable_latency();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.StaticInfoExtension.latency)
  return _msg;
}
inline void StaticInfoExtension::set_allocated_latency(::proto::control_plane::v1::LatencyInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::proto::control_plane::v1::LatencyInfo*>(_impl_.latency_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::proto::control_plane::v1::LatencyInfo*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.latency_ = reinterpret_cast<::proto::control_plane::v1::LatencyInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.StaticInfoExtension.latency)
}

// .proto.control_plane.v1.BandwidthInfo bandwidth = 2;
inline bool StaticInfoExtension::has_bandwidth() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bandwidth_ != nullptr);
  return value;
}
inline void StaticInfoExtension::clear_bandwidth() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.bandwidth_ != nullptr) _impl_.bandwidth_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::proto::control_plane::v1::BandwidthInfo& StaticInfoExtension::_internal_bandwidth() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::proto::control_plane::v1::BandwidthInfo* p = _impl_.bandwidth_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::control_plane::v1::BandwidthInfo&>(::proto::control_plane::v1::_BandwidthInfo_default_instance_);
}
inline const ::proto::control_plane::v1::BandwidthInfo& StaticInfoExtension::bandwidth() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.StaticInfoExtension.bandwidth)
  return _internal_bandwidth();
}
inline void StaticInfoExtension::unsafe_arena_set_allocated_bandwidth(::proto::control_plane::v1::BandwidthInfo* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bandwidth_);
  }
  _impl_.bandwidth_ = reinterpret_cast<::proto::control_plane::v1::BandwidthInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.StaticInfoExtension.bandwidth)
}
inline ::proto::control_plane::v1::BandwidthInfo* StaticInfoExtension::release_bandwidth() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::proto::control_plane::v1::BandwidthInfo* released = _impl_.bandwidth_;
  _impl_.bandwidth_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::control_plane::v1::BandwidthInfo* StaticInfoExtension::unsafe_arena_release_bandwidth() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.StaticInfoExtension.bandwidth)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::proto::control_plane::v1::BandwidthInfo* temp = _impl_.bandwidth_;
  _impl_.bandwidth_ = nullptr;
  return temp;
}
inline ::proto::control_plane::v1::BandwidthInfo* StaticInfoExtension::_internal_mutable_bandwidth() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.bandwidth_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::control_plane::v1::BandwidthInfo>(GetArena());
    _impl_.bandwidth_ = reinterpret_cast<::proto::control_plane::v1::BandwidthInfo*>(p);
  }
  return _impl_.bandwidth_;
}
inline ::proto::control_plane::v1::BandwidthInfo* StaticInfoExtension::mutable_bandwidth() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::proto::control_plane::v1::BandwidthInfo* _msg = _internal_mutable_bandwidth();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.StaticInfoExtension.bandwidth)
  return _msg;
}
inline void StaticInfoExtension::set_allocated_bandwidth(::proto::control_plane::v1::BandwidthInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::proto::control_plane::v1::BandwidthInfo*>(_impl_.bandwidth_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::proto::control_plane::v1::BandwidthInfo*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.bandwidth_ = reinterpret_cast<::proto::control_plane::v1::BandwidthInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.StaticInfoExtension.bandwidth)
}

// map<uint64, .proto.control_plane.v1.GeoCoordinates> geo = 3;
inline int StaticInfoExtension::_internal_geo_size() const {
  return _internal_geo().size();
}
inline int StaticInfoExtension::geo_size() const {
  return _internal_geo_size();
}
inline void StaticInfoExtension::clear_geo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.geo_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, ::proto::control_plane::v1::GeoCoordinates>& StaticInfoExtension::_internal_geo() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.geo_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, ::proto::control_plane::v1::GeoCoordinates>& StaticInfoExtension::geo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:proto.control_plane.v1.StaticInfoExtension.geo)
  return _internal_geo();
}
inline ::google::protobuf::Map<::uint64_t, ::proto::control_plane::v1::GeoCoordinates>* StaticInfoExtension::_internal_mutable_geo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.geo_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, ::proto::control_plane::v1::GeoCoordinates>* StaticInfoExtension::mutable_geo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:proto.control_plane.v1.StaticInfoExtension.geo)
  return _internal_mutable_geo();
}

// map<uint64, .proto.control_plane.v1.LinkType> link_type = 4;
inline int StaticInfoExtension::_internal_link_type_size() const {
  return _internal_link_type().size();
}
inline int StaticInfoExtension::link_type_size() const {
  return _internal_link_type_size();
}
inline void StaticInfoExtension::clear_link_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.link_type_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, ::proto::control_plane::v1::LinkType>& StaticInfoExtension::_internal_link_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.link_type_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, ::proto::control_plane::v1::LinkType>& StaticInfoExtension::link_type() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:proto.control_plane.v1.StaticInfoExtension.link_type)
  return _internal_link_type();
}
inline ::google::protobuf::Map<::uint64_t, ::proto::control_plane::v1::LinkType>* StaticInfoExtension::_internal_mutable_link_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.link_type_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, ::proto::control_plane::v1::LinkType>* StaticInfoExtension::mutable_link_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:proto.control_plane.v1.StaticInfoExtension.link_type)
  return _internal_mutable_link_type();
}

// map<uint64, uint32> internal_hops = 5;
inline int StaticInfoExtension::_internal_internal_hops_size() const {
  return _internal_internal_hops().size();
}
inline int StaticInfoExtension::internal_hops_size() const {
  return _internal_internal_hops_size();
}
inline void StaticInfoExtension::clear_internal_hops() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.internal_hops_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint32_t>& StaticInfoExtension::_internal_internal_hops() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.internal_hops_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint32_t>& StaticInfoExtension::internal_hops() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:proto.control_plane.v1.StaticInfoExtension.internal_hops)
  return _internal_internal_hops();
}
inline ::google::protobuf::Map<::uint64_t, ::uint32_t>* StaticInfoExtension::_internal_mutable_internal_hops() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.internal_hops_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, ::uint32_t>* StaticInfoExtension::mutable_internal_hops() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:proto.control_plane.v1.StaticInfoExtension.internal_hops)
  return _internal_mutable_internal_hops();
}

// string note = 6;
inline void StaticInfoExtension::clear_note() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.note_.ClearToEmpty();
}
inline const std::string& StaticInfoExtension::note() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.StaticInfoExtension.note)
  return _internal_note();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StaticInfoExtension::set_note(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.note_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.StaticInfoExtension.note)
}
inline std::string* StaticInfoExtension::mutable_note() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_note();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.StaticInfoExtension.note)
  return _s;
}
inline const std::string& StaticInfoExtension::_internal_note() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.note_.Get();
}
inline void StaticInfoExtension::_internal_set_note(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.note_.Set(value, GetArena());
}
inline std::string* StaticInfoExtension::_internal_mutable_note() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.note_.Mutable( GetArena());
}
inline std::string* StaticInfoExtension::release_note() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.StaticInfoExtension.note)
  return _impl_.note_.Release();
}
inline void StaticInfoExtension::set_allocated_note(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.note_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.note_.IsDefault()) {
          _impl_.note_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.StaticInfoExtension.note)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// LatencyInfo

// map<uint64, uint32> intra = 1;
inline int LatencyInfo::_internal_intra_size() const {
  return _internal_intra().size();
}
inline int LatencyInfo::intra_size() const {
  return _internal_intra_size();
}
inline void LatencyInfo::clear_intra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.intra_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint32_t>& LatencyInfo::_internal_intra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.intra_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint32_t>& LatencyInfo::intra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:proto.control_plane.v1.LatencyInfo.intra)
  return _internal_intra();
}
inline ::google::protobuf::Map<::uint64_t, ::uint32_t>* LatencyInfo::_internal_mutable_intra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.intra_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, ::uint32_t>* LatencyInfo::mutable_intra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:proto.control_plane.v1.LatencyInfo.intra)
  return _internal_mutable_intra();
}

// map<uint64, uint32> inter = 2;
inline int LatencyInfo::_internal_inter_size() const {
  return _internal_inter().size();
}
inline int LatencyInfo::inter_size() const {
  return _internal_inter_size();
}
inline void LatencyInfo::clear_inter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.inter_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint32_t>& LatencyInfo::_internal_inter() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.inter_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint32_t>& LatencyInfo::inter() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:proto.control_plane.v1.LatencyInfo.inter)
  return _internal_inter();
}
inline ::google::protobuf::Map<::uint64_t, ::uint32_t>* LatencyInfo::_internal_mutable_inter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.inter_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, ::uint32_t>* LatencyInfo::mutable_inter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:proto.control_plane.v1.LatencyInfo.inter)
  return _internal_mutable_inter();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// BandwidthInfo

// map<uint64, uint64> intra = 1;
inline int BandwidthInfo::_internal_intra_size() const {
  return _internal_intra().size();
}
inline int BandwidthInfo::intra_size() const {
  return _internal_intra_size();
}
inline void BandwidthInfo::clear_intra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.intra_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint64_t>& BandwidthInfo::_internal_intra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.intra_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint64_t>& BandwidthInfo::intra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:proto.control_plane.v1.BandwidthInfo.intra)
  return _internal_intra();
}
inline ::google::protobuf::Map<::uint64_t, ::uint64_t>* BandwidthInfo::_internal_mutable_intra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.intra_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, ::uint64_t>* BandwidthInfo::mutable_intra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:proto.control_plane.v1.BandwidthInfo.intra)
  return _internal_mutable_intra();
}

// map<uint64, uint64> inter = 2;
inline int BandwidthInfo::_internal_inter_size() const {
  return _internal_inter().size();
}
inline int BandwidthInfo::inter_size() const {
  return _internal_inter_size();
}
inline void BandwidthInfo::clear_inter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.inter_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint64_t>& BandwidthInfo::_internal_inter() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.inter_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint64_t>& BandwidthInfo::inter() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:proto.control_plane.v1.BandwidthInfo.inter)
  return _internal_inter();
}
inline ::google::protobuf::Map<::uint64_t, ::uint64_t>* BandwidthInfo::_internal_mutable_inter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.inter_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, ::uint64_t>* BandwidthInfo::mutable_inter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:proto.control_plane.v1.BandwidthInfo.inter)
  return _internal_mutable_inter();
}

// -------------------------------------------------------------------

// GeoCoordinates

// float latitude = 1;
inline void GeoCoordinates::clear_latitude() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.latitude_ = 0;
}
inline float GeoCoordinates::latitude() const {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.GeoCoordinates.latitude)
  return _internal_latitude();
}
inline void GeoCoordinates::set_latitude(float value) {
  _internal_set_latitude(value);
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.GeoCoordinates.latitude)
}
inline float GeoCoordinates::_internal_latitude() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.latitude_;
}
inline void GeoCoordinates::_internal_set_latitude(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.latitude_ = value;
}

// float longitude = 2;
inline void GeoCoordinates::clear_longitude() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.longitude_ = 0;
}
inline float GeoCoordinates::longitude() const {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.GeoCoordinates.longitude)
  return _internal_longitude();
}
inline void GeoCoordinates::set_longitude(float value) {
  _internal_set_longitude(value);
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.GeoCoordinates.longitude)
}
inline float GeoCoordinates::_internal_longitude() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.longitude_;
}
inline void GeoCoordinates::_internal_set_longitude(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.longitude_ = value;
}

// string address = 3;
inline void GeoCoordinates::clear_address() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& GeoCoordinates::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.GeoCoordinates.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GeoCoordinates::set_address(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.GeoCoordinates.address)
}
inline std::string* GeoCoordinates::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.GeoCoordinates.address)
  return _s;
}
inline const std::string& GeoCoordinates::_internal_address() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.address_.Get();
}
inline void GeoCoordinates::_internal_set_address(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.address_.Set(value, GetArena());
}
inline std::string* GeoCoordinates::_internal_mutable_address() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* GeoCoordinates::release_address() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.GeoCoordinates.address)
  return _impl_.address_.Release();
}
inline void GeoCoordinates::set_allocated_address(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.address_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.address_.IsDefault()) {
          _impl_.address_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.GeoCoordinates.address)
}

// -------------------------------------------------------------------

// DigestExtension_Digest

// bytes digest = 1;
inline void DigestExtension_Digest::clear_digest() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.digest_.ClearToEmpty();
}
inline const std::string& DigestExtension_Digest::digest() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DigestExtension.Digest.digest)
  return _internal_digest();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DigestExtension_Digest::set_digest(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.digest_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.DigestExtension.Digest.digest)
}
inline std::string* DigestExtension_Digest::mutable_digest() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_digest();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DigestExtension.Digest.digest)
  return _s;
}
inline const std::string& DigestExtension_Digest::_internal_digest() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.digest_.Get();
}
inline void DigestExtension_Digest::_internal_set_digest(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.digest_.Set(value, GetArena());
}
inline std::string* DigestExtension_Digest::_internal_mutable_digest() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.digest_.Mutable( GetArena());
}
inline std::string* DigestExtension_Digest::release_digest() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DigestExtension.Digest.digest)
  return _impl_.digest_.Release();
}
inline void DigestExtension_Digest::set_allocated_digest(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.digest_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.digest_.IsDefault()) {
          _impl_.digest_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DigestExtension.Digest.digest)
}

// -------------------------------------------------------------------

// DigestExtension

// .proto.control_plane.v1.DigestExtension.Digest epic = 1000;
inline bool DigestExtension::has_epic() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.epic_ != nullptr);
  return value;
}
inline void DigestExtension::clear_epic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.epic_ != nullptr) _impl_.epic_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::control_plane::v1::DigestExtension_Digest& DigestExtension::_internal_epic() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::proto::control_plane::v1::DigestExtension_Digest* p = _impl_.epic_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::control_plane::v1::DigestExtension_Digest&>(::proto::control_plane::v1::_DigestExtension_Digest_default_instance_);
}
inline const ::proto::control_plane::v1::DigestExtension_Digest& DigestExtension::epic() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.DigestExtension.epic)
  return _internal_epic();
}
inline void DigestExtension::unsafe_arena_set_allocated_epic(::proto::control_plane::v1::DigestExtension_Digest* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epic_);
  }
  _impl_.epic_ = reinterpret_cast<::proto::control_plane::v1::DigestExtension_Digest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.DigestExtension.epic)
}
inline ::proto::control_plane::v1::DigestExtension_Digest* DigestExtension::release_epic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::control_plane::v1::DigestExtension_Digest* released = _impl_.epic_;
  _impl_.epic_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::control_plane::v1::DigestExtension_Digest* DigestExtension::unsafe_arena_release_epic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.DigestExtension.epic)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::control_plane::v1::DigestExtension_Digest* temp = _impl_.epic_;
  _impl_.epic_ = nullptr;
  return temp;
}
inline ::proto::control_plane::v1::DigestExtension_Digest* DigestExtension::_internal_mutable_epic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.epic_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::control_plane::v1::DigestExtension_Digest>(GetArena());
    _impl_.epic_ = reinterpret_cast<::proto::control_plane::v1::DigestExtension_Digest*>(p);
  }
  return _impl_.epic_;
}
inline ::proto::control_plane::v1::DigestExtension_Digest* DigestExtension::mutable_epic() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::proto::control_plane::v1::DigestExtension_Digest* _msg = _internal_mutable_epic();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.DigestExtension.epic)
  return _msg;
}
inline void DigestExtension::set_allocated_epic(::proto::control_plane::v1::DigestExtension_Digest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::proto::control_plane::v1::DigestExtension_Digest*>(_impl_.epic_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::proto::control_plane::v1::DigestExtension_Digest*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.epic_ = reinterpret_cast<::proto::control_plane::v1::DigestExtension_Digest*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.DigestExtension.epic)
}

// -------------------------------------------------------------------

// PathSegmentUnsignedExtensions

// .proto.control_plane.experimental.v1.EPICDetachedExtension epic = 1000;
inline bool PathSegmentUnsignedExtensions::has_epic() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.epic_ != nullptr);
  return value;
}
inline const ::proto::control_plane::experimental::v1::EPICDetachedExtension& PathSegmentUnsignedExtensions::_internal_epic() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::proto::control_plane::experimental::v1::EPICDetachedExtension* p = _impl_.epic_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::control_plane::experimental::v1::EPICDetachedExtension&>(::proto::control_plane::experimental::v1::_EPICDetachedExtension_default_instance_);
}
inline const ::proto::control_plane::experimental::v1::EPICDetachedExtension& PathSegmentUnsignedExtensions::epic() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.PathSegmentUnsignedExtensions.epic)
  return _internal_epic();
}
inline void PathSegmentUnsignedExtensions::unsafe_arena_set_allocated_epic(::proto::control_plane::experimental::v1::EPICDetachedExtension* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epic_);
  }
  _impl_.epic_ = reinterpret_cast<::proto::control_plane::experimental::v1::EPICDetachedExtension*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.PathSegmentUnsignedExtensions.epic)
}
inline ::proto::control_plane::experimental::v1::EPICDetachedExtension* PathSegmentUnsignedExtensions::release_epic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::control_plane::experimental::v1::EPICDetachedExtension* released = _impl_.epic_;
  _impl_.epic_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::control_plane::experimental::v1::EPICDetachedExtension* PathSegmentUnsignedExtensions::unsafe_arena_release_epic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.PathSegmentUnsignedExtensions.epic)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::control_plane::experimental::v1::EPICDetachedExtension* temp = _impl_.epic_;
  _impl_.epic_ = nullptr;
  return temp;
}
inline ::proto::control_plane::experimental::v1::EPICDetachedExtension* PathSegmentUnsignedExtensions::_internal_mutable_epic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.epic_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::control_plane::experimental::v1::EPICDetachedExtension>(GetArena());
    _impl_.epic_ = reinterpret_cast<::proto::control_plane::experimental::v1::EPICDetachedExtension*>(p);
  }
  return _impl_.epic_;
}
inline ::proto::control_plane::experimental::v1::EPICDetachedExtension* PathSegmentUnsignedExtensions::mutable_epic() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::proto::control_plane::experimental::v1::EPICDetachedExtension* _msg = _internal_mutable_epic();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.PathSegmentUnsignedExtensions.epic)
  return _msg;
}
inline void PathSegmentUnsignedExtensions::set_allocated_epic(::proto::control_plane::experimental::v1::EPICDetachedExtension* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.epic_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.epic_ = reinterpret_cast<::proto::control_plane::experimental::v1::EPICDetachedExtension*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.PathSegmentUnsignedExtensions.epic)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace control_plane
}  // namespace proto


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::proto::control_plane::v1::LinkType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::proto::control_plane::v1::LinkType>() {
  return ::proto::control_plane::v1::LinkType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_proto_2fcontrol_5fplane_2fv1_2fseg_5fextensions_2eproto_2epb_2eh
