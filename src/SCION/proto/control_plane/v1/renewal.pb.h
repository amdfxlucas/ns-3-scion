// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/control_plane/v1/renewal.proto
// Protobuf C++ Version: 4.24.0-main

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2fcontrol_5fplane_2fv1_2frenewal_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_proto_2fcontrol_5fplane_2fv1_2frenewal_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "proto/control_plane/v1/cppki.pb.h"
#include "proto/crypto/v1/signed.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2fcontrol_5fplane_2fv1_2frenewal_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fcontrol_5fplane_2fv1_2frenewal_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_proto_2fcontrol_5fplane_2fv1_2frenewal_2eproto;
namespace proto {
namespace control_plane {
namespace v1 {
class ChainRenewalRequest;
struct ChainRenewalRequestDefaultTypeInternal;
extern ChainRenewalRequestDefaultTypeInternal _ChainRenewalRequest_default_instance_;
class ChainRenewalRequestBody;
struct ChainRenewalRequestBodyDefaultTypeInternal;
extern ChainRenewalRequestBodyDefaultTypeInternal _ChainRenewalRequestBody_default_instance_;
class ChainRenewalResponse;
struct ChainRenewalResponseDefaultTypeInternal;
extern ChainRenewalResponseDefaultTypeInternal _ChainRenewalResponse_default_instance_;
class ChainRenewalResponseBody;
struct ChainRenewalResponseBodyDefaultTypeInternal;
extern ChainRenewalResponseBodyDefaultTypeInternal _ChainRenewalResponseBody_default_instance_;
}  // namespace v1
}  // namespace control_plane
}  // namespace proto
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace proto {
namespace control_plane {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class ChainRenewalRequestBody final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.ChainRenewalRequestBody) */ {
 public:
  inline ChainRenewalRequestBody() : ChainRenewalRequestBody(nullptr) {}
  ~ChainRenewalRequestBody() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ChainRenewalRequestBody(::google::protobuf::internal::ConstantInitialized);

  inline ChainRenewalRequestBody(const ChainRenewalRequestBody& from)
      : ChainRenewalRequestBody(nullptr, from) {}
  ChainRenewalRequestBody(ChainRenewalRequestBody&& from) noexcept
    : ChainRenewalRequestBody() {
    *this = ::std::move(from);
  }

  inline ChainRenewalRequestBody& operator=(const ChainRenewalRequestBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChainRenewalRequestBody& operator=(ChainRenewalRequestBody&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChainRenewalRequestBody& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChainRenewalRequestBody* internal_default_instance() {
    return reinterpret_cast<const ChainRenewalRequestBody*>(
               &_ChainRenewalRequestBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ChainRenewalRequestBody& a, ChainRenewalRequestBody& b) {
    a.Swap(&b);
  }
  inline void Swap(ChainRenewalRequestBody* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChainRenewalRequestBody* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChainRenewalRequestBody* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ChainRenewalRequestBody>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChainRenewalRequestBody& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ChainRenewalRequestBody& from) {
    ChainRenewalRequestBody::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChainRenewalRequestBody* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.ChainRenewalRequestBody";
  }
  protected:
  explicit ChainRenewalRequestBody(::google::protobuf::Arena* arena);
  ChainRenewalRequestBody(::google::protobuf::Arena* arena, const ChainRenewalRequestBody& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCsrFieldNumber = 1,
  };
  // bytes csr = 1;
  void clear_csr() ;
  const std::string& csr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_csr(Arg_&& arg, Args_... args);
  std::string* mutable_csr();
  PROTOBUF_NODISCARD std::string* release_csr();
  void set_allocated_csr(std::string* value);

  private:
  const std::string& _internal_csr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_csr(
      const std::string& value);
  std::string* _internal_mutable_csr();

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.ChainRenewalRequestBody)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr csr_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2frenewal_2eproto;
};// -------------------------------------------------------------------

class ChainRenewalResponseBody final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.ChainRenewalResponseBody) */ {
 public:
  inline ChainRenewalResponseBody() : ChainRenewalResponseBody(nullptr) {}
  ~ChainRenewalResponseBody() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ChainRenewalResponseBody(::google::protobuf::internal::ConstantInitialized);

  inline ChainRenewalResponseBody(const ChainRenewalResponseBody& from)
      : ChainRenewalResponseBody(nullptr, from) {}
  ChainRenewalResponseBody(ChainRenewalResponseBody&& from) noexcept
    : ChainRenewalResponseBody() {
    *this = ::std::move(from);
  }

  inline ChainRenewalResponseBody& operator=(const ChainRenewalResponseBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChainRenewalResponseBody& operator=(ChainRenewalResponseBody&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChainRenewalResponseBody& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChainRenewalResponseBody* internal_default_instance() {
    return reinterpret_cast<const ChainRenewalResponseBody*>(
               &_ChainRenewalResponseBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ChainRenewalResponseBody& a, ChainRenewalResponseBody& b) {
    a.Swap(&b);
  }
  inline void Swap(ChainRenewalResponseBody* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChainRenewalResponseBody* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChainRenewalResponseBody* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ChainRenewalResponseBody>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChainRenewalResponseBody& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ChainRenewalResponseBody& from) {
    ChainRenewalResponseBody::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChainRenewalResponseBody* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.ChainRenewalResponseBody";
  }
  protected:
  explicit ChainRenewalResponseBody(::google::protobuf::Arena* arena);
  ChainRenewalResponseBody(::google::protobuf::Arena* arena, const ChainRenewalResponseBody& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChainFieldNumber = 1,
  };
  // .proto.control_plane.v1.Chain chain = 1;
  bool has_chain() const;
  void clear_chain() ;
  const ::proto::control_plane::v1::Chain& chain() const;
  PROTOBUF_NODISCARD ::proto::control_plane::v1::Chain* release_chain();
  ::proto::control_plane::v1::Chain* mutable_chain();
  void set_allocated_chain(::proto::control_plane::v1::Chain* value);
  void unsafe_arena_set_allocated_chain(::proto::control_plane::v1::Chain* value);
  ::proto::control_plane::v1::Chain* unsafe_arena_release_chain();

  private:
  const ::proto::control_plane::v1::Chain& _internal_chain() const;
  ::proto::control_plane::v1::Chain* _internal_mutable_chain();

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.ChainRenewalResponseBody)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::proto::control_plane::v1::Chain* chain_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2frenewal_2eproto;
};// -------------------------------------------------------------------

class ChainRenewalResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.ChainRenewalResponse) */ {
 public:
  inline ChainRenewalResponse() : ChainRenewalResponse(nullptr) {}
  ~ChainRenewalResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ChainRenewalResponse(::google::protobuf::internal::ConstantInitialized);

  inline ChainRenewalResponse(const ChainRenewalResponse& from)
      : ChainRenewalResponse(nullptr, from) {}
  ChainRenewalResponse(ChainRenewalResponse&& from) noexcept
    : ChainRenewalResponse() {
    *this = ::std::move(from);
  }

  inline ChainRenewalResponse& operator=(const ChainRenewalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChainRenewalResponse& operator=(ChainRenewalResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChainRenewalResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChainRenewalResponse* internal_default_instance() {
    return reinterpret_cast<const ChainRenewalResponse*>(
               &_ChainRenewalResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ChainRenewalResponse& a, ChainRenewalResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ChainRenewalResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChainRenewalResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChainRenewalResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ChainRenewalResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChainRenewalResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ChainRenewalResponse& from) {
    ChainRenewalResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChainRenewalResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.ChainRenewalResponse";
  }
  protected:
  explicit ChainRenewalResponse(::google::protobuf::Arena* arena);
  ChainRenewalResponse(::google::protobuf::Arena* arena, const ChainRenewalResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCmsSignedResponseFieldNumber = 2,
    kSignedResponseFieldNumber = 1,
  };
  // bytes cms_signed_response = 2;
  void clear_cms_signed_response() ;
  const std::string& cms_signed_response() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cms_signed_response(Arg_&& arg, Args_... args);
  std::string* mutable_cms_signed_response();
  PROTOBUF_NODISCARD std::string* release_cms_signed_response();
  void set_allocated_cms_signed_response(std::string* value);

  private:
  const std::string& _internal_cms_signed_response() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cms_signed_response(
      const std::string& value);
  std::string* _internal_mutable_cms_signed_response();

  public:
  // .proto.crypto.v1.SignedMessage signed_response = 1;
  bool has_signed_response() const;
  void clear_signed_response() ;
  const ::proto::crypto::v1::SignedMessage& signed_response() const;
  PROTOBUF_NODISCARD ::proto::crypto::v1::SignedMessage* release_signed_response();
  ::proto::crypto::v1::SignedMessage* mutable_signed_response();
  void set_allocated_signed_response(::proto::crypto::v1::SignedMessage* value);
  void unsafe_arena_set_allocated_signed_response(::proto::crypto::v1::SignedMessage* value);
  ::proto::crypto::v1::SignedMessage* unsafe_arena_release_signed_response();

  private:
  const ::proto::crypto::v1::SignedMessage& _internal_signed_response() const;
  ::proto::crypto::v1::SignedMessage* _internal_mutable_signed_response();

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.ChainRenewalResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr cms_signed_response_;
    ::proto::crypto::v1::SignedMessage* signed_response_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2frenewal_2eproto;
};// -------------------------------------------------------------------

class ChainRenewalRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.ChainRenewalRequest) */ {
 public:
  inline ChainRenewalRequest() : ChainRenewalRequest(nullptr) {}
  ~ChainRenewalRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ChainRenewalRequest(::google::protobuf::internal::ConstantInitialized);

  inline ChainRenewalRequest(const ChainRenewalRequest& from)
      : ChainRenewalRequest(nullptr, from) {}
  ChainRenewalRequest(ChainRenewalRequest&& from) noexcept
    : ChainRenewalRequest() {
    *this = ::std::move(from);
  }

  inline ChainRenewalRequest& operator=(const ChainRenewalRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChainRenewalRequest& operator=(ChainRenewalRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChainRenewalRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChainRenewalRequest* internal_default_instance() {
    return reinterpret_cast<const ChainRenewalRequest*>(
               &_ChainRenewalRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ChainRenewalRequest& a, ChainRenewalRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ChainRenewalRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChainRenewalRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChainRenewalRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ChainRenewalRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChainRenewalRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ChainRenewalRequest& from) {
    ChainRenewalRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChainRenewalRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.ChainRenewalRequest";
  }
  protected:
  explicit ChainRenewalRequest(::google::protobuf::Arena* arena);
  ChainRenewalRequest(::google::protobuf::Arena* arena, const ChainRenewalRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCmsSignedRequestFieldNumber = 2,
    kSignedRequestFieldNumber = 1,
  };
  // bytes cms_signed_request = 2;
  void clear_cms_signed_request() ;
  const std::string& cms_signed_request() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cms_signed_request(Arg_&& arg, Args_... args);
  std::string* mutable_cms_signed_request();
  PROTOBUF_NODISCARD std::string* release_cms_signed_request();
  void set_allocated_cms_signed_request(std::string* value);

  private:
  const std::string& _internal_cms_signed_request() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cms_signed_request(
      const std::string& value);
  std::string* _internal_mutable_cms_signed_request();

  public:
  // .proto.crypto.v1.SignedMessage signed_request = 1;
  bool has_signed_request() const;
  void clear_signed_request() ;
  const ::proto::crypto::v1::SignedMessage& signed_request() const;
  PROTOBUF_NODISCARD ::proto::crypto::v1::SignedMessage* release_signed_request();
  ::proto::crypto::v1::SignedMessage* mutable_signed_request();
  void set_allocated_signed_request(::proto::crypto::v1::SignedMessage* value);
  void unsafe_arena_set_allocated_signed_request(::proto::crypto::v1::SignedMessage* value);
  ::proto::crypto::v1::SignedMessage* unsafe_arena_release_signed_request();

  private:
  const ::proto::crypto::v1::SignedMessage& _internal_signed_request() const;
  ::proto::crypto::v1::SignedMessage* _internal_mutable_signed_request();

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.ChainRenewalRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr cms_signed_request_;
    ::proto::crypto::v1::SignedMessage* signed_request_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2frenewal_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ChainRenewalRequest

// .proto.crypto.v1.SignedMessage signed_request = 1;
inline bool ChainRenewalRequest::has_signed_request() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.signed_request_ != nullptr);
  return value;
}
inline const ::proto::crypto::v1::SignedMessage& ChainRenewalRequest::_internal_signed_request() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::proto::crypto::v1::SignedMessage* p = _impl_.signed_request_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::crypto::v1::SignedMessage&>(::proto::crypto::v1::_SignedMessage_default_instance_);
}
inline const ::proto::crypto::v1::SignedMessage& ChainRenewalRequest::signed_request() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.ChainRenewalRequest.signed_request)
  return _internal_signed_request();
}
inline void ChainRenewalRequest::unsafe_arena_set_allocated_signed_request(::proto::crypto::v1::SignedMessage* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.signed_request_);
  }
  _impl_.signed_request_ = reinterpret_cast<::proto::crypto::v1::SignedMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.ChainRenewalRequest.signed_request)
}
inline ::proto::crypto::v1::SignedMessage* ChainRenewalRequest::release_signed_request() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::crypto::v1::SignedMessage* released = _impl_.signed_request_;
  _impl_.signed_request_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::crypto::v1::SignedMessage* ChainRenewalRequest::unsafe_arena_release_signed_request() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.ChainRenewalRequest.signed_request)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::crypto::v1::SignedMessage* temp = _impl_.signed_request_;
  _impl_.signed_request_ = nullptr;
  return temp;
}
inline ::proto::crypto::v1::SignedMessage* ChainRenewalRequest::_internal_mutable_signed_request() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.signed_request_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::crypto::v1::SignedMessage>(GetArena());
    _impl_.signed_request_ = reinterpret_cast<::proto::crypto::v1::SignedMessage*>(p);
  }
  return _impl_.signed_request_;
}
inline ::proto::crypto::v1::SignedMessage* ChainRenewalRequest::mutable_signed_request() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::proto::crypto::v1::SignedMessage* _msg = _internal_mutable_signed_request();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.ChainRenewalRequest.signed_request)
  return _msg;
}
inline void ChainRenewalRequest::set_allocated_signed_request(::proto::crypto::v1::SignedMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.signed_request_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.signed_request_ = reinterpret_cast<::proto::crypto::v1::SignedMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.ChainRenewalRequest.signed_request)
}

// bytes cms_signed_request = 2;
inline void ChainRenewalRequest::clear_cms_signed_request() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cms_signed_request_.ClearToEmpty();
}
inline const std::string& ChainRenewalRequest::cms_signed_request() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.ChainRenewalRequest.cms_signed_request)
  return _internal_cms_signed_request();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChainRenewalRequest::set_cms_signed_request(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cms_signed_request_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.ChainRenewalRequest.cms_signed_request)
}
inline std::string* ChainRenewalRequest::mutable_cms_signed_request() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cms_signed_request();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.ChainRenewalRequest.cms_signed_request)
  return _s;
}
inline const std::string& ChainRenewalRequest::_internal_cms_signed_request() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cms_signed_request_.Get();
}
inline void ChainRenewalRequest::_internal_set_cms_signed_request(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cms_signed_request_.Set(value, GetArena());
}
inline std::string* ChainRenewalRequest::_internal_mutable_cms_signed_request() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.cms_signed_request_.Mutable( GetArena());
}
inline std::string* ChainRenewalRequest::release_cms_signed_request() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.ChainRenewalRequest.cms_signed_request)
  return _impl_.cms_signed_request_.Release();
}
inline void ChainRenewalRequest::set_allocated_cms_signed_request(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cms_signed_request_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.cms_signed_request_.IsDefault()) {
          _impl_.cms_signed_request_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.ChainRenewalRequest.cms_signed_request)
}

// -------------------------------------------------------------------

// ChainRenewalRequestBody

// bytes csr = 1;
inline void ChainRenewalRequestBody::clear_csr() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.csr_.ClearToEmpty();
}
inline const std::string& ChainRenewalRequestBody::csr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.ChainRenewalRequestBody.csr)
  return _internal_csr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChainRenewalRequestBody::set_csr(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.csr_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.ChainRenewalRequestBody.csr)
}
inline std::string* ChainRenewalRequestBody::mutable_csr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_csr();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.ChainRenewalRequestBody.csr)
  return _s;
}
inline const std::string& ChainRenewalRequestBody::_internal_csr() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.csr_.Get();
}
inline void ChainRenewalRequestBody::_internal_set_csr(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.csr_.Set(value, GetArena());
}
inline std::string* ChainRenewalRequestBody::_internal_mutable_csr() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.csr_.Mutable( GetArena());
}
inline std::string* ChainRenewalRequestBody::release_csr() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.ChainRenewalRequestBody.csr)
  return _impl_.csr_.Release();
}
inline void ChainRenewalRequestBody::set_allocated_csr(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.csr_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.csr_.IsDefault()) {
          _impl_.csr_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.ChainRenewalRequestBody.csr)
}

// -------------------------------------------------------------------

// ChainRenewalResponse

// .proto.crypto.v1.SignedMessage signed_response = 1;
inline bool ChainRenewalResponse::has_signed_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.signed_response_ != nullptr);
  return value;
}
inline const ::proto::crypto::v1::SignedMessage& ChainRenewalResponse::_internal_signed_response() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::proto::crypto::v1::SignedMessage* p = _impl_.signed_response_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::crypto::v1::SignedMessage&>(::proto::crypto::v1::_SignedMessage_default_instance_);
}
inline const ::proto::crypto::v1::SignedMessage& ChainRenewalResponse::signed_response() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.ChainRenewalResponse.signed_response)
  return _internal_signed_response();
}
inline void ChainRenewalResponse::unsafe_arena_set_allocated_signed_response(::proto::crypto::v1::SignedMessage* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.signed_response_);
  }
  _impl_.signed_response_ = reinterpret_cast<::proto::crypto::v1::SignedMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.ChainRenewalResponse.signed_response)
}
inline ::proto::crypto::v1::SignedMessage* ChainRenewalResponse::release_signed_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::crypto::v1::SignedMessage* released = _impl_.signed_response_;
  _impl_.signed_response_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::crypto::v1::SignedMessage* ChainRenewalResponse::unsafe_arena_release_signed_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.ChainRenewalResponse.signed_response)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::crypto::v1::SignedMessage* temp = _impl_.signed_response_;
  _impl_.signed_response_ = nullptr;
  return temp;
}
inline ::proto::crypto::v1::SignedMessage* ChainRenewalResponse::_internal_mutable_signed_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.signed_response_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::crypto::v1::SignedMessage>(GetArena());
    _impl_.signed_response_ = reinterpret_cast<::proto::crypto::v1::SignedMessage*>(p);
  }
  return _impl_.signed_response_;
}
inline ::proto::crypto::v1::SignedMessage* ChainRenewalResponse::mutable_signed_response() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::proto::crypto::v1::SignedMessage* _msg = _internal_mutable_signed_response();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.ChainRenewalResponse.signed_response)
  return _msg;
}
inline void ChainRenewalResponse::set_allocated_signed_response(::proto::crypto::v1::SignedMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.signed_response_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.signed_response_ = reinterpret_cast<::proto::crypto::v1::SignedMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.ChainRenewalResponse.signed_response)
}

// bytes cms_signed_response = 2;
inline void ChainRenewalResponse::clear_cms_signed_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cms_signed_response_.ClearToEmpty();
}
inline const std::string& ChainRenewalResponse::cms_signed_response() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.ChainRenewalResponse.cms_signed_response)
  return _internal_cms_signed_response();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChainRenewalResponse::set_cms_signed_response(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cms_signed_response_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.ChainRenewalResponse.cms_signed_response)
}
inline std::string* ChainRenewalResponse::mutable_cms_signed_response() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cms_signed_response();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.ChainRenewalResponse.cms_signed_response)
  return _s;
}
inline const std::string& ChainRenewalResponse::_internal_cms_signed_response() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cms_signed_response_.Get();
}
inline void ChainRenewalResponse::_internal_set_cms_signed_response(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cms_signed_response_.Set(value, GetArena());
}
inline std::string* ChainRenewalResponse::_internal_mutable_cms_signed_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.cms_signed_response_.Mutable( GetArena());
}
inline std::string* ChainRenewalResponse::release_cms_signed_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.ChainRenewalResponse.cms_signed_response)
  return _impl_.cms_signed_response_.Release();
}
inline void ChainRenewalResponse::set_allocated_cms_signed_response(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cms_signed_response_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.cms_signed_response_.IsDefault()) {
          _impl_.cms_signed_response_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.ChainRenewalResponse.cms_signed_response)
}

// -------------------------------------------------------------------

// ChainRenewalResponseBody

// .proto.control_plane.v1.Chain chain = 1;
inline bool ChainRenewalResponseBody::has_chain() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.chain_ != nullptr);
  return value;
}
inline const ::proto::control_plane::v1::Chain& ChainRenewalResponseBody::_internal_chain() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::proto::control_plane::v1::Chain* p = _impl_.chain_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto::control_plane::v1::Chain&>(::proto::control_plane::v1::_Chain_default_instance_);
}
inline const ::proto::control_plane::v1::Chain& ChainRenewalResponseBody::chain() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.ChainRenewalResponseBody.chain)
  return _internal_chain();
}
inline void ChainRenewalResponseBody::unsafe_arena_set_allocated_chain(::proto::control_plane::v1::Chain* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chain_);
  }
  _impl_.chain_ = reinterpret_cast<::proto::control_plane::v1::Chain*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.control_plane.v1.ChainRenewalResponseBody.chain)
}
inline ::proto::control_plane::v1::Chain* ChainRenewalResponseBody::release_chain() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::control_plane::v1::Chain* released = _impl_.chain_;
  _impl_.chain_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto::control_plane::v1::Chain* ChainRenewalResponseBody::unsafe_arena_release_chain() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.ChainRenewalResponseBody.chain)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto::control_plane::v1::Chain* temp = _impl_.chain_;
  _impl_.chain_ = nullptr;
  return temp;
}
inline ::proto::control_plane::v1::Chain* ChainRenewalResponseBody::_internal_mutable_chain() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.chain_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::control_plane::v1::Chain>(GetArena());
    _impl_.chain_ = reinterpret_cast<::proto::control_plane::v1::Chain*>(p);
  }
  return _impl_.chain_;
}
inline ::proto::control_plane::v1::Chain* ChainRenewalResponseBody::mutable_chain() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::proto::control_plane::v1::Chain* _msg = _internal_mutable_chain();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.ChainRenewalResponseBody.chain)
  return _msg;
}
inline void ChainRenewalResponseBody::set_allocated_chain(::proto::control_plane::v1::Chain* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chain_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.chain_ = reinterpret_cast<::proto::control_plane::v1::Chain*>(value);
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.ChainRenewalResponseBody.chain)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace control_plane
}  // namespace proto


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_proto_2fcontrol_5fplane_2fv1_2frenewal_2eproto_2epb_2eh
