// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/control_plane/v1/svc_resolution.proto
// Protobuf C++ Version: 4.24.0-main

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2fcontrol_5fplane_2fv1_2fsvc_5fresolution_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_proto_2fcontrol_5fplane_2fv1_2fsvc_5fresolution_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2fcontrol_5fplane_2fv1_2fsvc_5fresolution_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fcontrol_5fplane_2fv1_2fsvc_5fresolution_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_proto_2fcontrol_5fplane_2fv1_2fsvc_5fresolution_2eproto;
namespace proto {
namespace control_plane {
namespace v1 {
class ServiceResolutionRequest;
struct ServiceResolutionRequestDefaultTypeInternal;
extern ServiceResolutionRequestDefaultTypeInternal _ServiceResolutionRequest_default_instance_;
class ServiceResolutionResponse;
struct ServiceResolutionResponseDefaultTypeInternal;
extern ServiceResolutionResponseDefaultTypeInternal _ServiceResolutionResponse_default_instance_;
class ServiceResolutionResponse_TransportsEntry_DoNotUse;
struct ServiceResolutionResponse_TransportsEntry_DoNotUseDefaultTypeInternal;
extern ServiceResolutionResponse_TransportsEntry_DoNotUseDefaultTypeInternal _ServiceResolutionResponse_TransportsEntry_DoNotUse_default_instance_;
class Transport;
struct TransportDefaultTypeInternal;
extern TransportDefaultTypeInternal _Transport_default_instance_;
}  // namespace v1
}  // namespace control_plane
}  // namespace proto
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace proto {
namespace control_plane {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class Transport final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.Transport) */ {
 public:
  inline Transport() : Transport(nullptr) {}
  ~Transport() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Transport(::google::protobuf::internal::ConstantInitialized);

  inline Transport(const Transport& from)
      : Transport(nullptr, from) {}
  Transport(Transport&& from) noexcept
    : Transport() {
    *this = ::std::move(from);
  }

  inline Transport& operator=(const Transport& from) {
    CopyFrom(from);
    return *this;
  }
  inline Transport& operator=(Transport&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Transport& default_instance() {
    return *internal_default_instance();
  }
  static inline const Transport* internal_default_instance() {
    return reinterpret_cast<const Transport*>(
               &_Transport_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Transport& a, Transport& b) {
    a.Swap(&b);
  }
  inline void Swap(Transport* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Transport* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Transport* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Transport>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Transport& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Transport& from) {
    Transport::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Transport* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.Transport";
  }
  protected:
  explicit Transport(::google::protobuf::Arena* arena);
  Transport(::google::protobuf::Arena* arena, const Transport& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAddressFieldNumber = 1,
  };
  // string address = 1;
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.Transport)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      48, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr address_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fsvc_5fresolution_2eproto;
};// -------------------------------------------------------------------

class ServiceResolutionRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.ServiceResolutionRequest) */ {
 public:
  inline ServiceResolutionRequest() : ServiceResolutionRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ServiceResolutionRequest(::google::protobuf::internal::ConstantInitialized);

  inline ServiceResolutionRequest(const ServiceResolutionRequest& from)
      : ServiceResolutionRequest(nullptr, from) {}
  ServiceResolutionRequest(ServiceResolutionRequest&& from) noexcept
    : ServiceResolutionRequest() {
    *this = ::std::move(from);
  }

  inline ServiceResolutionRequest& operator=(const ServiceResolutionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServiceResolutionRequest& operator=(ServiceResolutionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServiceResolutionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServiceResolutionRequest* internal_default_instance() {
    return reinterpret_cast<const ServiceResolutionRequest*>(
               &_ServiceResolutionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ServiceResolutionRequest& a, ServiceResolutionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ServiceResolutionRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServiceResolutionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServiceResolutionRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServiceResolutionRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ServiceResolutionRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ServiceResolutionRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.ServiceResolutionRequest";
  }
  protected:
  explicit ServiceResolutionRequest(::google::protobuf::Arena* arena);
  ServiceResolutionRequest(::google::protobuf::Arena* arena, const ServiceResolutionRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.ServiceResolutionRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fsvc_5fresolution_2eproto;
};// -------------------------------------------------------------------

class ServiceResolutionResponse_TransportsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          ServiceResolutionResponse_TransportsEntry_DoNotUse, std::string, ::proto::control_plane::v1::Transport,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      ServiceResolutionResponse_TransportsEntry_DoNotUse, std::string, ::proto::control_plane::v1::Transport,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  ServiceResolutionResponse_TransportsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ServiceResolutionResponse_TransportsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ServiceResolutionResponse_TransportsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ServiceResolutionResponse_TransportsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ServiceResolutionResponse_TransportsEntry_DoNotUse*>(
        &_ServiceResolutionResponse_TransportsEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "proto.control_plane.v1.ServiceResolutionResponse.TransportsEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fsvc_5fresolution_2eproto;
};
// -------------------------------------------------------------------

class ServiceResolutionResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.control_plane.v1.ServiceResolutionResponse) */ {
 public:
  inline ServiceResolutionResponse() : ServiceResolutionResponse(nullptr) {}
  ~ServiceResolutionResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ServiceResolutionResponse(::google::protobuf::internal::ConstantInitialized);

  inline ServiceResolutionResponse(const ServiceResolutionResponse& from)
      : ServiceResolutionResponse(nullptr, from) {}
  ServiceResolutionResponse(ServiceResolutionResponse&& from) noexcept
    : ServiceResolutionResponse() {
    *this = ::std::move(from);
  }

  inline ServiceResolutionResponse& operator=(const ServiceResolutionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServiceResolutionResponse& operator=(ServiceResolutionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServiceResolutionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServiceResolutionResponse* internal_default_instance() {
    return reinterpret_cast<const ServiceResolutionResponse*>(
               &_ServiceResolutionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ServiceResolutionResponse& a, ServiceResolutionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ServiceResolutionResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServiceResolutionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServiceResolutionResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServiceResolutionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ServiceResolutionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ServiceResolutionResponse& from) {
    ServiceResolutionResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ServiceResolutionResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.control_plane.v1.ServiceResolutionResponse";
  }
  protected:
  explicit ServiceResolutionResponse(::google::protobuf::Arena* arena);
  ServiceResolutionResponse(::google::protobuf::Arena* arena, const ServiceResolutionResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kTransportsFieldNumber = 1,
  };
  // map<string, .proto.control_plane.v1.Transport> transports = 1;
  int transports_size() const;
  private:
  int _internal_transports_size() const;

  public:
  void clear_transports() ;
  const ::google::protobuf::Map<std::string, ::proto::control_plane::v1::Transport>& transports() const;
  ::google::protobuf::Map<std::string, ::proto::control_plane::v1::Transport>* mutable_transports();

  private:
  const ::google::protobuf::Map<std::string, ::proto::control_plane::v1::Transport>& _internal_transports() const;
  ::google::protobuf::Map<std::string, ::proto::control_plane::v1::Transport>* _internal_mutable_transports();

  public:
  // @@protoc_insertion_point(class_scope:proto.control_plane.v1.ServiceResolutionResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      67, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::MapField<ServiceResolutionResponse_TransportsEntry_DoNotUse, std::string, ::proto::control_plane::v1::Transport,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        transports_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fcontrol_5fplane_2fv1_2fsvc_5fresolution_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ServiceResolutionRequest

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ServiceResolutionResponse

// map<string, .proto.control_plane.v1.Transport> transports = 1;
inline int ServiceResolutionResponse::_internal_transports_size() const {
  return _internal_transports().size();
}
inline int ServiceResolutionResponse::transports_size() const {
  return _internal_transports_size();
}
inline void ServiceResolutionResponse::clear_transports() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.transports_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::proto::control_plane::v1::Transport>& ServiceResolutionResponse::_internal_transports() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.transports_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::proto::control_plane::v1::Transport>& ServiceResolutionResponse::transports() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:proto.control_plane.v1.ServiceResolutionResponse.transports)
  return _internal_transports();
}
inline ::google::protobuf::Map<std::string, ::proto::control_plane::v1::Transport>* ServiceResolutionResponse::_internal_mutable_transports() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.transports_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::proto::control_plane::v1::Transport>* ServiceResolutionResponse::mutable_transports() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:proto.control_plane.v1.ServiceResolutionResponse.transports)
  return _internal_mutable_transports();
}

// -------------------------------------------------------------------

// Transport

// string address = 1;
inline void Transport::clear_address() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& Transport::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.control_plane.v1.Transport.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Transport::set_address(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.control_plane.v1.Transport.address)
}
inline std::string* Transport::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:proto.control_plane.v1.Transport.address)
  return _s;
}
inline const std::string& Transport::_internal_address() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.address_.Get();
}
inline void Transport::_internal_set_address(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.address_.Set(value, GetArena());
}
inline std::string* Transport::_internal_mutable_address() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* Transport::release_address() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.control_plane.v1.Transport.address)
  return _impl_.address_.Release();
}
inline void Transport::set_allocated_address(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.address_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.address_.IsDefault()) {
          _impl_.address_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.control_plane.v1.Transport.address)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace control_plane
}  // namespace proto


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_proto_2fcontrol_5fplane_2fv1_2fsvc_5fresolution_2eproto_2epb_2eh
