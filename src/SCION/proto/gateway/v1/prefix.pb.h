// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/gateway/v1/prefix.proto
// Protobuf C++ Version: 4.24.0-main

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2fgateway_2fv1_2fprefix_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_proto_2fgateway_2fv1_2fprefix_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2fgateway_2fv1_2fprefix_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fgateway_2fv1_2fprefix_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_proto_2fgateway_2fv1_2fprefix_2eproto;
namespace proto {
namespace gateway {
namespace v1 {
class Prefix;
struct PrefixDefaultTypeInternal;
extern PrefixDefaultTypeInternal _Prefix_default_instance_;
class PrefixesRequest;
struct PrefixesRequestDefaultTypeInternal;
extern PrefixesRequestDefaultTypeInternal _PrefixesRequest_default_instance_;
class PrefixesResponse;
struct PrefixesResponseDefaultTypeInternal;
extern PrefixesResponseDefaultTypeInternal _PrefixesResponse_default_instance_;
}  // namespace v1
}  // namespace gateway
}  // namespace proto
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace proto {
namespace gateway {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class PrefixesRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:proto.gateway.v1.PrefixesRequest) */ {
 public:
  inline PrefixesRequest() : PrefixesRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PrefixesRequest(::google::protobuf::internal::ConstantInitialized);

  inline PrefixesRequest(const PrefixesRequest& from)
      : PrefixesRequest(nullptr, from) {}
  PrefixesRequest(PrefixesRequest&& from) noexcept
    : PrefixesRequest() {
    *this = ::std::move(from);
  }

  inline PrefixesRequest& operator=(const PrefixesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrefixesRequest& operator=(PrefixesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PrefixesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PrefixesRequest* internal_default_instance() {
    return reinterpret_cast<const PrefixesRequest*>(
               &_PrefixesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PrefixesRequest& a, PrefixesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PrefixesRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PrefixesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PrefixesRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PrefixesRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const PrefixesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const PrefixesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.gateway.v1.PrefixesRequest";
  }
  protected:
  explicit PrefixesRequest(::google::protobuf::Arena* arena);
  PrefixesRequest(::google::protobuf::Arena* arena, const PrefixesRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.gateway.v1.PrefixesRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_proto_2fgateway_2fv1_2fprefix_2eproto;
};// -------------------------------------------------------------------

class Prefix final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.gateway.v1.Prefix) */ {
 public:
  inline Prefix() : Prefix(nullptr) {}
  ~Prefix() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Prefix(::google::protobuf::internal::ConstantInitialized);

  inline Prefix(const Prefix& from)
      : Prefix(nullptr, from) {}
  Prefix(Prefix&& from) noexcept
    : Prefix() {
    *this = ::std::move(from);
  }

  inline Prefix& operator=(const Prefix& from) {
    CopyFrom(from);
    return *this;
  }
  inline Prefix& operator=(Prefix&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Prefix& default_instance() {
    return *internal_default_instance();
  }
  static inline const Prefix* internal_default_instance() {
    return reinterpret_cast<const Prefix*>(
               &_Prefix_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Prefix& a, Prefix& b) {
    a.Swap(&b);
  }
  inline void Swap(Prefix* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Prefix* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Prefix* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Prefix>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Prefix& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Prefix& from) {
    Prefix::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Prefix* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.gateway.v1.Prefix";
  }
  protected:
  explicit Prefix(::google::protobuf::Arena* arena);
  Prefix(::google::protobuf::Arena* arena, const Prefix& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPrefixFieldNumber = 1,
    kMaskFieldNumber = 2,
  };
  // bytes prefix = 1;
  void clear_prefix() ;
  const std::string& prefix() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_prefix(Arg_&& arg, Args_... args);
  std::string* mutable_prefix();
  PROTOBUF_NODISCARD std::string* release_prefix();
  void set_allocated_prefix(std::string* value);

  private:
  const std::string& _internal_prefix() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_prefix(
      const std::string& value);
  std::string* _internal_mutable_prefix();

  public:
  // uint32 mask = 2;
  void clear_mask() ;
  ::uint32_t mask() const;
  void set_mask(::uint32_t value);

  private:
  ::uint32_t _internal_mask() const;
  void _internal_set_mask(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:proto.gateway.v1.Prefix)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr prefix_;
    ::uint32_t mask_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fgateway_2fv1_2fprefix_2eproto;
};// -------------------------------------------------------------------

class PrefixesResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.gateway.v1.PrefixesResponse) */ {
 public:
  inline PrefixesResponse() : PrefixesResponse(nullptr) {}
  ~PrefixesResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PrefixesResponse(::google::protobuf::internal::ConstantInitialized);

  inline PrefixesResponse(const PrefixesResponse& from)
      : PrefixesResponse(nullptr, from) {}
  PrefixesResponse(PrefixesResponse&& from) noexcept
    : PrefixesResponse() {
    *this = ::std::move(from);
  }

  inline PrefixesResponse& operator=(const PrefixesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrefixesResponse& operator=(PrefixesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PrefixesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PrefixesResponse* internal_default_instance() {
    return reinterpret_cast<const PrefixesResponse*>(
               &_PrefixesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PrefixesResponse& a, PrefixesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PrefixesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PrefixesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PrefixesResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PrefixesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PrefixesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PrefixesResponse& from) {
    PrefixesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PrefixesResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "proto.gateway.v1.PrefixesResponse";
  }
  protected:
  explicit PrefixesResponse(::google::protobuf::Arena* arena);
  PrefixesResponse(::google::protobuf::Arena* arena, const PrefixesResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPrefixesFieldNumber = 1,
  };
  // repeated .proto.gateway.v1.Prefix prefixes = 1;
  int prefixes_size() const;
  private:
  int _internal_prefixes_size() const;

  public:
  void clear_prefixes() ;
  ::proto::gateway::v1::Prefix* mutable_prefixes(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::gateway::v1::Prefix >*
      mutable_prefixes();
  private:
  const ::google::protobuf::RepeatedPtrField<::proto::gateway::v1::Prefix>& _internal_prefixes() const;
  ::google::protobuf::RepeatedPtrField<::proto::gateway::v1::Prefix>* _internal_mutable_prefixes();
  public:
  const ::proto::gateway::v1::Prefix& prefixes(int index) const;
  ::proto::gateway::v1::Prefix* add_prefixes();
  const ::google::protobuf::RepeatedPtrField< ::proto::gateway::v1::Prefix >&
      prefixes() const;
  // @@protoc_insertion_point(class_scope:proto.gateway.v1.PrefixesResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::proto::gateway::v1::Prefix > prefixes_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fgateway_2fv1_2fprefix_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PrefixesRequest

// -------------------------------------------------------------------

// PrefixesResponse

// repeated .proto.gateway.v1.Prefix prefixes = 1;
inline int PrefixesResponse::_internal_prefixes_size() const {
  return _internal_prefixes().size();
}
inline int PrefixesResponse::prefixes_size() const {
  return _internal_prefixes_size();
}
inline void PrefixesResponse::clear_prefixes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prefixes_.Clear();
}
inline ::proto::gateway::v1::Prefix* PrefixesResponse::mutable_prefixes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:proto.gateway.v1.PrefixesResponse.prefixes)
  return _internal_mutable_prefixes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::proto::gateway::v1::Prefix>* PrefixesResponse::mutable_prefixes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:proto.gateway.v1.PrefixesResponse.prefixes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_prefixes();
}
inline const ::proto::gateway::v1::Prefix& PrefixesResponse::prefixes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.gateway.v1.PrefixesResponse.prefixes)
  return _internal_prefixes().Get(index);
}
inline ::proto::gateway::v1::Prefix* PrefixesResponse::add_prefixes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::proto::gateway::v1::Prefix* _add = _internal_mutable_prefixes()->Add();
  // @@protoc_insertion_point(field_add:proto.gateway.v1.PrefixesResponse.prefixes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::proto::gateway::v1::Prefix>& PrefixesResponse::prefixes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:proto.gateway.v1.PrefixesResponse.prefixes)
  return _internal_prefixes();
}
inline const ::google::protobuf::RepeatedPtrField<::proto::gateway::v1::Prefix>&
PrefixesResponse::_internal_prefixes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.prefixes_;
}
inline ::google::protobuf::RepeatedPtrField<::proto::gateway::v1::Prefix>*
PrefixesResponse::_internal_mutable_prefixes() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.prefixes_;
}

// -------------------------------------------------------------------

// Prefix

// bytes prefix = 1;
inline void Prefix::clear_prefix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prefix_.ClearToEmpty();
}
inline const std::string& Prefix::prefix() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:proto.gateway.v1.Prefix.prefix)
  return _internal_prefix();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Prefix::set_prefix(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.prefix_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:proto.gateway.v1.Prefix.prefix)
}
inline std::string* Prefix::mutable_prefix() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_prefix();
  // @@protoc_insertion_point(field_mutable:proto.gateway.v1.Prefix.prefix)
  return _s;
}
inline const std::string& Prefix::_internal_prefix() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.prefix_.Get();
}
inline void Prefix::_internal_set_prefix(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.prefix_.Set(value, GetArena());
}
inline std::string* Prefix::_internal_mutable_prefix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.prefix_.Mutable( GetArena());
}
inline std::string* Prefix::release_prefix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:proto.gateway.v1.Prefix.prefix)
  return _impl_.prefix_.Release();
}
inline void Prefix::set_allocated_prefix(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prefix_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.prefix_.IsDefault()) {
          _impl_.prefix_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:proto.gateway.v1.Prefix.prefix)
}

// uint32 mask = 2;
inline void Prefix::clear_mask() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mask_ = 0u;
}
inline ::uint32_t Prefix::mask() const {
  // @@protoc_insertion_point(field_get:proto.gateway.v1.Prefix.mask)
  return _internal_mask();
}
inline void Prefix::set_mask(::uint32_t value) {
  _internal_set_mask(value);
  // @@protoc_insertion_point(field_set:proto.gateway.v1.Prefix.mask)
}
inline ::uint32_t Prefix::_internal_mask() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mask_;
}
inline void Prefix::_internal_set_mask(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mask_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace gateway
}  // namespace proto


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_proto_2fgateway_2fv1_2fprefix_2eproto_2epb_2eh
