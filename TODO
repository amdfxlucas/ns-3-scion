there is no notion of TTL in the scion impl now


why doesn't the PathSegment know its PathSegmentType ?!

Beacon should have methods for DestinationAS and Originator() instead of c-like macros


what is the use of PathSegment.reverse ?! it is only logged, but not considered by any decisions 
NO, see scion-capable-node.cc line 183
it is ultimately involved in the computation of local_if_to_send which is then used in:
ScheduleForSend( local_if_to_send, packet )



maybe add method 'isPacketForMe( ScionPacket* )' to ScionCapableNode
that does NS_ASSERT(packet->dst_ia == ia_addr && packet->dst_host == GetLocalAddress() ); this check

in path-server.h the members:
   cached_path_segs_dataset_t cached_core_segments;
    cached_path_segs_dataset_t cached_up_segments;
    cached_path_segs_dataset_t cached_down_segments; are not used for anything yet


add strongTypes ! everything is uint16_t AS-Numbers, AS-Interface IDs, Node-Interface_IDs ..

---------------------------------------------------------------------
it would probably be better to have a free 'connect( ScionCapableNode*, ScionCapableNode*)'
function than having to call 'AddToRemoteNodesInfo(), AddToIfForwardingTable() AddToAddressForwardingTable()'  etc. manually everytime

or even a nodeConnector callable object ( it would hide away the computation of the greatCircleDistance as well )


instead of ScionCapableNode::AddToPropagationDelays( double delay ) [which quietly increments the Nodes GetNDevice() count (thus allocates an interface ) ]  and  then query later with GetNDevice() the interface ID that got created earlier
>> ifID_t ScionCapableNode::NewInterface( double delay ) <<

and an overload >> ifId_t ScionCapableNode::NewInterface(double propDelay, double transmissionDelay ) <<

this would neatly ensure the invariant that there are as much transmission-delays as propagation-delays ( wich is currently easily violated )
One has to take care to always call AddToTransmissionDelays and AddToPropagationDelays together
----------------------------------------------------------------------------


maybe it is a good idea to rename ScionCapableNode Interface IDs into something more abstract, like channelID or logical/virtual -interface ID , ForwardingStateIndex that emphasizes that these have nothing to do with physical interfaces 